[{"name":"COUNT_BASED","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.COUNT_BASED","location":"lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window-type/-c-o-u-n-t_-b-a-s-e-d/index.html","searchKeys":["COUNT_BASED","COUNT_BASED","kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.COUNT_BASED"]},{"name":"FORCE_STATE_UPDATE","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.FORCE_STATE_UPDATE","location":"lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-f-o-r-c-e_-s-t-a-t-e_-u-p-d-a-t-e/index.html","searchKeys":["FORCE_STATE_UPDATE","FORCE_STATE_UPDATE","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.FORCE_STATE_UPDATE"]},{"name":"OPERATION_FAILURE","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.OPERATION_FAILURE","location":"lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-o-p-e-r-a-t-i-o-n_-f-a-i-l-u-r-e/index.html","searchKeys":["OPERATION_FAILURE","OPERATION_FAILURE","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.OPERATION_FAILURE"]},{"name":"OPERATION_SUCCESS","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.OPERATION_SUCCESS","location":"lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-o-p-e-r-a-t-i-o-n_-s-u-c-c-e-s-s/index.html","searchKeys":["OPERATION_SUCCESS","OPERATION_SUCCESS","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.OPERATION_SUCCESS"]},{"name":"RESET","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.RESET","location":"lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-r-e-s-e-t/index.html","searchKeys":["RESET","RESET","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.RESET"]},{"name":"TIME_BASED","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.TIME_BASED","location":"lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window-type/-t-i-m-e_-b-a-s-e-d/index.html","searchKeys":["TIME_BASED","TIME_BASED","kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.TIME_BASED"]},{"name":"TRANSITION_TO_CLOSED_STATE","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.TRANSITION_TO_CLOSED_STATE","location":"lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-t-r-a-n-s-i-t-i-o-n_-t-o_-c-l-o-s-e-d_-s-t-a-t-e/index.html","searchKeys":["TRANSITION_TO_CLOSED_STATE","TRANSITION_TO_CLOSED_STATE","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.TRANSITION_TO_CLOSED_STATE"]},{"name":"TRANSITION_TO_HALF_OPEN_STATE","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.TRANSITION_TO_HALF_OPEN_STATE","location":"lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-t-r-a-n-s-i-t-i-o-n_-t-o_-h-a-l-f_-o-p-e-n_-s-t-a-t-e/index.html","searchKeys":["TRANSITION_TO_HALF_OPEN_STATE","TRANSITION_TO_HALF_OPEN_STATE","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.TRANSITION_TO_HALF_OPEN_STATE"]},{"name":"TRANSITION_TO_OPEN_STATE","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.TRANSITION_TO_OPEN_STATE","location":"lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-t-r-a-n-s-i-t-i-o-n_-t-o_-o-p-e-n_-s-t-a-t-e/index.html","searchKeys":["TRANSITION_TO_OPEN_STATE","TRANSITION_TO_OPEN_STATE","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.TRANSITION_TO_OPEN_STATE"]},{"name":"abstract class Reducer<State, Event, Effect>","description":"kresil.core.reducer.Reducer","location":"lib/kresil.core.reducer/-reducer/index.html","searchKeys":["Reducer","abstract class Reducer<State, Event, Effect>","kresil.core.reducer.Reducer"]},{"name":"abstract class SemaphoreState : AutoCloseable","description":"kresil.ratelimiter.semaphore.state.SemaphoreState","location":"lib/kresil.ratelimiter.semaphore.state/-semaphore-state/index.html","searchKeys":["SemaphoreState","abstract class SemaphoreState : AutoCloseable","kresil.ratelimiter.semaphore.state.SemaphoreState"]},{"name":"abstract fun build(): TConfig","description":"kresil.core.builders.ConfigBuilder.build","location":"lib/kresil.core.builders/-config-builder/build.html","searchKeys":["build","abstract fun build(): TConfig","kresil.core.builders.ConfigBuilder.build"]},{"name":"abstract fun clear()","description":"kresil.core.slidingwindow.FailureRateSlidingWindow.clear","location":"lib/kresil.core.slidingwindow/-failure-rate-sliding-window/clear.html","searchKeys":["clear","abstract fun clear()","kresil.core.slidingwindow.FailureRateSlidingWindow.clear"]},{"name":"abstract fun currentFailureRate(): Double","description":"kresil.core.slidingwindow.FailureRateSlidingWindow.currentFailureRate","location":"lib/kresil.core.slidingwindow/-failure-rate-sliding-window/current-failure-rate.html","searchKeys":["currentFailureRate","abstract fun currentFailureRate(): Double","kresil.core.slidingwindow.FailureRateSlidingWindow.currentFailureRate"]},{"name":"abstract fun recordFailure()","description":"kresil.core.slidingwindow.FailureRateSlidingWindow.recordFailure","location":"lib/kresil.core.slidingwindow/-failure-rate-sliding-window/record-failure.html","searchKeys":["recordFailure","abstract fun recordFailure()","kresil.core.slidingwindow.FailureRateSlidingWindow.recordFailure"]},{"name":"abstract fun recordSuccess()","description":"kresil.core.slidingwindow.FailureRateSlidingWindow.recordSuccess","location":"lib/kresil.core.slidingwindow/-failure-rate-sliding-window/record-success.html","searchKeys":["recordSuccess","abstract fun recordSuccess()","kresil.core.slidingwindow.FailureRateSlidingWindow.recordSuccess"]},{"name":"abstract fun setPermits(updateFunction: (Int) -> Int)","description":"kresil.ratelimiter.semaphore.state.SemaphoreState.setPermits","location":"lib/kresil.ratelimiter.semaphore.state/-semaphore-state/set-permits.html","searchKeys":["setPermits","abstract fun setPermits(updateFunction: (Int) -> Int)","kresil.ratelimiter.semaphore.state.SemaphoreState.setPermits"]},{"name":"abstract fun setReplenishmentTimeMark(value: ComparableTimeMark)","description":"kresil.ratelimiter.semaphore.state.SemaphoreState.setReplenishmentTimeMark","location":"lib/kresil.ratelimiter.semaphore.state/-semaphore-state/set-replenishment-time-mark.html","searchKeys":["setReplenishmentTimeMark","abstract fun setReplenishmentTimeMark(value: ComparableTimeMark)","kresil.ratelimiter.semaphore.state.SemaphoreState.setReplenishmentTimeMark"]},{"name":"abstract suspend fun currentState(): State","description":"kresil.core.reducer.Reducer.currentState","location":"lib/kresil.core.reducer/-reducer/current-state.html","searchKeys":["currentState","abstract suspend fun currentState(): State","kresil.core.reducer.Reducer.currentState"]},{"name":"abstract suspend fun delay(attempt: Int): Duration","description":"kresil.core.delay.provider.DelayProvider.delay","location":"lib/kresil.core.delay.provider/-delay-provider/delay.html","searchKeys":["delay","abstract suspend fun delay(attempt: Int): Duration","kresil.core.delay.provider.DelayProvider.delay"]},{"name":"abstract suspend fun delay(attempt: Int, context: TContext): Duration","description":"kresil.core.delay.provider.CtxDelayProvider.delay","location":"lib/kresil.core.delay.provider/-ctx-delay-provider/delay.html","searchKeys":["delay","abstract suspend fun delay(attempt: Int, context: TContext): Duration","kresil.core.delay.provider.CtxDelayProvider.delay"]},{"name":"abstract suspend fun dequeue(): Node<T>","description":"kresil.core.queue.Queue.dequeue","location":"lib/kresil.core.queue/-queue/dequeue.html","searchKeys":["dequeue","abstract suspend fun dequeue(): Node<T>","kresil.core.queue.Queue.dequeue"]},{"name":"abstract suspend fun dispatch(event: Event)","description":"kresil.core.reducer.Reducer.dispatch","location":"lib/kresil.core.reducer/-reducer/dispatch.html","searchKeys":["dispatch","abstract suspend fun dispatch(event: Event)","kresil.core.reducer.Reducer.dispatch"]},{"name":"abstract suspend fun enqueue(value: T): Node<T>","description":"kresil.core.queue.Queue.enqueue","location":"lib/kresil.core.queue/-queue/enqueue.html","searchKeys":["enqueue","abstract suspend fun enqueue(value: T): Node<T>","kresil.core.queue.Queue.enqueue"]},{"name":"abstract suspend fun headCondition(cond: (T) -> Boolean): Boolean","description":"kresil.core.queue.Queue.headCondition","location":"lib/kresil.core.queue/-queue/head-condition.html","searchKeys":["headCondition","abstract suspend fun headCondition(cond: (T) -> Boolean): Boolean","kresil.core.queue.Queue.headCondition"]},{"name":"abstract suspend fun remove(node: Node<T>)","description":"kresil.core.queue.Queue.remove","location":"lib/kresil.core.queue/-queue/remove.html","searchKeys":["remove","abstract suspend fun remove(node: Node<T>)","kresil.core.queue.Queue.remove"]},{"name":"abstract val baseConfig: TConfig","description":"kresil.core.builders.ConfigBuilder.baseConfig","location":"lib/kresil.core.builders/-config-builder/base-config.html","searchKeys":["baseConfig","abstract val baseConfig: TConfig","kresil.core.builders.ConfigBuilder.baseConfig"]},{"name":"abstract val capacity: Int","description":"kresil.core.slidingwindow.FailureRateSlidingWindow.capacity","location":"lib/kresil.core.slidingwindow/-failure-rate-sliding-window/capacity.html","searchKeys":["capacity","abstract val capacity: Int","kresil.core.slidingwindow.FailureRateSlidingWindow.capacity"]},{"name":"abstract val permitsInUse: Int","description":"kresil.ratelimiter.semaphore.state.SemaphoreState.permitsInUse","location":"lib/kresil.ratelimiter.semaphore.state/-semaphore-state/permits-in-use.html","searchKeys":["permitsInUse","abstract val permitsInUse: Int","kresil.ratelimiter.semaphore.state.SemaphoreState.permitsInUse"]},{"name":"abstract val replenishmentTimeMark: ComparableTimeMark","description":"kresil.ratelimiter.semaphore.state.SemaphoreState.replenishmentTimeMark","location":"lib/kresil.ratelimiter.semaphore.state/-semaphore-state/replenishment-time-mark.html","searchKeys":["replenishmentTimeMark","abstract val replenishmentTimeMark: ComparableTimeMark","kresil.ratelimiter.semaphore.state.SemaphoreState.replenishmentTimeMark"]},{"name":"abstract val size: Int","description":"kresil.core.queue.Queue.size","location":"lib/kresil.core.queue/-queue/size.html","searchKeys":["size","abstract val size: Int","kresil.core.queue.Queue.size"]},{"name":"abstract val value: T","description":"kresil.core.queue.Node.value","location":"lib/kresil.core.queue/-node/value.html","searchKeys":["value","abstract val value: T","kresil.core.queue.Node.value"]},{"name":"class CallNotPermittedException(message: String = \"A call to a protected operation by a circuit breaker was not permitted.\") : IllegalStateException","description":"kresil.circuitbreaker.exceptions.CallNotPermittedException","location":"lib/kresil.circuitbreaker.exceptions/-call-not-permitted-exception/index.html","searchKeys":["CallNotPermittedException","class CallNotPermittedException(message: String = \"A call to a protected operation by a circuit breaker was not permitted.\") : IllegalStateException","kresil.circuitbreaker.exceptions.CallNotPermittedException"]},{"name":"class CircuitBreaker(val config: CircuitBreakerConfig = defaultCircuitBreakerConfig()) : FlowEventListenerImpl<CircuitBreakerEvent> ","description":"kresil.circuitbreaker.CircuitBreaker","location":"lib/kresil.circuitbreaker/-circuit-breaker/index.html","searchKeys":["CircuitBreaker","class CircuitBreaker(val config: CircuitBreakerConfig = defaultCircuitBreakerConfig()) : FlowEventListenerImpl<CircuitBreakerEvent> ","kresil.circuitbreaker.CircuitBreaker"]},{"name":"class CircuitBreakerConfigBuilder(val baseConfig: CircuitBreakerConfig = defaultCircuitBreakerConfig) : ConfigBuilder<CircuitBreakerConfig> ","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/index.html","searchKeys":["CircuitBreakerConfigBuilder","class CircuitBreakerConfigBuilder(val baseConfig: CircuitBreakerConfig = defaultCircuitBreakerConfig) : ConfigBuilder<CircuitBreakerConfig> ","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder"]},{"name":"class KeyedRateLimiter<Key>(val config: RateLimiterConfig = defaultRateLimiterConfig(), semaphoreStateFactory: () -> SemaphoreState = { InMemorySemaphoreState() }) : AutoCloseable","description":"kresil.ratelimiter.KeyedRateLimiter","location":"lib/kresil.ratelimiter/-keyed-rate-limiter/index.html","searchKeys":["KeyedRateLimiter","class KeyedRateLimiter<Key>(val config: RateLimiterConfig = defaultRateLimiterConfig(), semaphoreStateFactory: () -> SemaphoreState = { InMemorySemaphoreState() }) : AutoCloseable","kresil.ratelimiter.KeyedRateLimiter"]},{"name":"class RateLimiter(val config: RateLimiterConfig = defaultRateLimiterConfig(), semaphoreState: SemaphoreState = InMemorySemaphoreState()) : FlowEventListenerImpl<RateLimiterEvent> , SuspendableSemaphore, AutoCloseable","description":"kresil.ratelimiter.RateLimiter","location":"lib/kresil.ratelimiter/-rate-limiter/index.html","searchKeys":["RateLimiter","class RateLimiter(val config: RateLimiterConfig = defaultRateLimiterConfig(), semaphoreState: SemaphoreState = InMemorySemaphoreState()) : FlowEventListenerImpl<RateLimiterEvent> , SuspendableSemaphore, AutoCloseable","kresil.ratelimiter.RateLimiter"]},{"name":"class RateLimiterConfigBuilder(val baseConfig: RateLimiterConfig = defaultRateLimiterConfig) : ConfigBuilder<RateLimiterConfig> ","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder","location":"lib/kresil.ratelimiter.config/-rate-limiter-config-builder/index.html","searchKeys":["RateLimiterConfigBuilder","class RateLimiterConfigBuilder(val baseConfig: RateLimiterConfig = defaultRateLimiterConfig) : ConfigBuilder<RateLimiterConfig> ","kresil.ratelimiter.config.RateLimiterConfigBuilder"]},{"name":"class RateLimiterRejectedException(val retryAfter: Duration) : IllegalStateException","description":"kresil.ratelimiter.exceptions.RateLimiterRejectedException","location":"lib/kresil.ratelimiter.exceptions/-rate-limiter-rejected-exception/index.html","searchKeys":["RateLimiterRejectedException","class RateLimiterRejectedException(val retryAfter: Duration) : IllegalStateException","kresil.ratelimiter.exceptions.RateLimiterRejectedException"]},{"name":"class Retry(val config: RetryConfig = defaultRetryConfig()) : FlowEventListenerImpl<RetryEvent> ","description":"kresil.retry.Retry","location":"lib/kresil.retry/-retry/index.html","searchKeys":["Retry","class Retry(val config: RetryConfig = defaultRetryConfig()) : FlowEventListenerImpl<RetryEvent> ","kresil.retry.Retry"]},{"name":"class RetryConfigBuilder(val baseConfig: RetryConfig = defaultRetryConfig) : ConfigBuilder<RetryConfig> ","description":"kresil.retry.config.RetryConfigBuilder","location":"lib/kresil.retry.config/-retry-config-builder/index.html","searchKeys":["RetryConfigBuilder","class RetryConfigBuilder(val baseConfig: RetryConfig = defaultRetryConfig) : ConfigBuilder<RetryConfig> ","kresil.retry.config.RetryConfigBuilder"]},{"name":"constructor()","description":"kresil.core.reducer.Reducer.Reducer","location":"lib/kresil.core.reducer/-reducer/-reducer.html","searchKeys":["Reducer","constructor()","kresil.core.reducer.Reducer.Reducer"]},{"name":"constructor()","description":"kresil.ratelimiter.semaphore.state.SemaphoreState.SemaphoreState","location":"lib/kresil.ratelimiter.semaphore.state/-semaphore-state/-semaphore-state.html","searchKeys":["SemaphoreState","constructor()","kresil.ratelimiter.semaphore.state.SemaphoreState.SemaphoreState"]},{"name":"constructor(algorithm: RateLimitingAlgorithm, baseTimeoutDuration: Duration, onRejected: ExceptionHandler)","description":"kresil.ratelimiter.config.RateLimiterConfig.RateLimiterConfig","location":"lib/kresil.ratelimiter.config/-rate-limiter-config/-rate-limiter-config.html","searchKeys":["RateLimiterConfig","constructor(algorithm: RateLimitingAlgorithm, baseTimeoutDuration: Duration, onRejected: ExceptionHandler)","kresil.ratelimiter.config.RateLimiterConfig.RateLimiterConfig"]},{"name":"constructor(attempt: Int)","description":"kresil.retry.context.RetryContext.RetryContext","location":"lib/kresil.retry.context/-retry-context/-retry-context.html","searchKeys":["RetryContext","constructor(attempt: Int)","kresil.retry.context.RetryContext.RetryContext"]},{"name":"constructor(attempt: Int)","description":"kresil.retry.event.RetryEvent.RetryOnRetry.RetryOnRetry","location":"lib/kresil.retry.event/-retry-event/-retry-on-retry/-retry-on-retry.html","searchKeys":["RetryOnRetry","constructor(attempt: Int)","kresil.retry.event.RetryEvent.RetryOnRetry.RetryOnRetry"]},{"name":"constructor(baseConfig: CircuitBreakerConfig = defaultCircuitBreakerConfig)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.CircuitBreakerConfigBuilder","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/-circuit-breaker-config-builder.html","searchKeys":["CircuitBreakerConfigBuilder","constructor(baseConfig: CircuitBreakerConfig = defaultCircuitBreakerConfig)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.CircuitBreakerConfigBuilder"]},{"name":"constructor(baseConfig: RateLimiterConfig = defaultRateLimiterConfig)","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.RateLimiterConfigBuilder","location":"lib/kresil.ratelimiter.config/-rate-limiter-config-builder/-rate-limiter-config-builder.html","searchKeys":["RateLimiterConfigBuilder","constructor(baseConfig: RateLimiterConfig = defaultRateLimiterConfig)","kresil.ratelimiter.config.RateLimiterConfigBuilder.RateLimiterConfigBuilder"]},{"name":"constructor(baseConfig: RetryConfig = defaultRetryConfig)","description":"kresil.retry.config.RetryConfigBuilder.RetryConfigBuilder","location":"lib/kresil.retry.config/-retry-config-builder/-retry-config-builder.html","searchKeys":["RetryConfigBuilder","constructor(baseConfig: RetryConfig = defaultRetryConfig)","kresil.retry.config.RetryConfigBuilder.RetryConfigBuilder"]},{"name":"constructor(config: CircuitBreakerConfig = defaultCircuitBreakerConfig())","description":"kresil.circuitbreaker.CircuitBreaker.CircuitBreaker","location":"lib/kresil.circuitbreaker/-circuit-breaker/-circuit-breaker.html","searchKeys":["CircuitBreaker","constructor(config: CircuitBreakerConfig = defaultCircuitBreakerConfig())","kresil.circuitbreaker.CircuitBreaker.CircuitBreaker"]},{"name":"constructor(config: RateLimiterConfig = defaultRateLimiterConfig(), semaphoreState: SemaphoreState = InMemorySemaphoreState())","description":"kresil.ratelimiter.RateLimiter.RateLimiter","location":"lib/kresil.ratelimiter/-rate-limiter/-rate-limiter.html","searchKeys":["RateLimiter","constructor(config: RateLimiterConfig = defaultRateLimiterConfig(), semaphoreState: SemaphoreState = InMemorySemaphoreState())","kresil.ratelimiter.RateLimiter.RateLimiter"]},{"name":"constructor(config: RateLimiterConfig = defaultRateLimiterConfig(), semaphoreStateFactory: () -> SemaphoreState = { InMemorySemaphoreState() })","description":"kresil.ratelimiter.KeyedRateLimiter.KeyedRateLimiter","location":"lib/kresil.ratelimiter/-keyed-rate-limiter/-keyed-rate-limiter.html","searchKeys":["KeyedRateLimiter","constructor(config: RateLimiterConfig = defaultRateLimiterConfig(), semaphoreStateFactory: () -> SemaphoreState = { InMemorySemaphoreState() })","kresil.ratelimiter.KeyedRateLimiter.KeyedRateLimiter"]},{"name":"constructor(config: RetryConfig = defaultRetryConfig())","description":"kresil.retry.Retry.Retry","location":"lib/kresil.retry/-retry/-retry.html","searchKeys":["Retry","constructor(config: RetryConfig = defaultRetryConfig())","kresil.retry.Retry.Retry"]},{"name":"constructor(failureRate: Double)","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedFailure.RecordedFailure","location":"lib/kresil.circuitbreaker.event/-circuit-breaker-event/-recorded-failure/-recorded-failure.html","searchKeys":["RecordedFailure","constructor(failureRate: Double)","kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedFailure.RecordedFailure"]},{"name":"constructor(failureRate: Double)","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedSuccess.RecordedSuccess","location":"lib/kresil.circuitbreaker.event/-circuit-breaker-event/-recorded-success/-recorded-success.html","searchKeys":["RecordedSuccess","constructor(failureRate: Double)","kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedSuccess.RecordedSuccess"]},{"name":"constructor(failureRateThreshold: Double, slidingWindow: SlidingWindow, permittedNumberOfCallsInHalfOpenState: Int, delayStrategyInOpenState: CtxDelayStrategy<Unit>, maxWaitDurationInHalfOpenState: Duration, recordExceptionPredicate: OnExceptionPredicate, recordResultPredicate: OnResultPredicate)","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.CircuitBreakerConfig","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config/-circuit-breaker-config.html","searchKeys":["CircuitBreakerConfig","constructor(failureRateThreshold: Double, slidingWindow: SlidingWindow, permittedNumberOfCallsInHalfOpenState: Int, delayStrategyInOpenState: CtxDelayStrategy<Unit>, maxWaitDurationInHalfOpenState: Duration, recordExceptionPredicate: OnExceptionPredicate, recordResultPredicate: OnResultPredicate)","kresil.circuitbreaker.config.CircuitBreakerConfig.CircuitBreakerConfig"]},{"name":"constructor(fromState: CircuitBreakerState, toState: CircuitBreakerState, manual: Boolean = false)","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.StateTransition","location":"lib/kresil.circuitbreaker.event/-circuit-breaker-event/-state-transition/-state-transition.html","searchKeys":["StateTransition","constructor(fromState: CircuitBreakerState, toState: CircuitBreakerState, manual: Boolean = false)","kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.StateTransition"]},{"name":"constructor(lastThrowable: Throwable? = null, lastResult: Any? = null)","description":"kresil.retry.delay.RetryDelayStrategyContext.RetryDelayStrategyContext","location":"lib/kresil.retry.delay/-retry-delay-strategy-context/-retry-delay-strategy-context.html","searchKeys":["RetryDelayStrategyContext","constructor(lastThrowable: Throwable? = null, lastResult: Any? = null)","kresil.retry.delay.RetryDelayStrategyContext.RetryDelayStrategyContext"]},{"name":"constructor(maxAttempts: Int, retryPredicate: OnExceptionPredicate, retryOnResultPredicate: OnResultPredicate, delayStrategy: RetryDelayStrategy, exceptionHandler: ExceptionHandler)","description":"kresil.retry.config.RetryConfig.RetryConfig","location":"lib/kresil.retry.config/-retry-config/-retry-config.html","searchKeys":["RetryConfig","constructor(maxAttempts: Int, retryPredicate: OnExceptionPredicate, retryOnResultPredicate: OnResultPredicate, delayStrategy: RetryDelayStrategy, exceptionHandler: ExceptionHandler)","kresil.retry.config.RetryConfig.RetryConfig"]},{"name":"constructor(message: String = \"A call to a protected operation by a circuit breaker was not permitted.\")","description":"kresil.circuitbreaker.exceptions.CallNotPermittedException.CallNotPermittedException","location":"lib/kresil.circuitbreaker.exceptions/-call-not-permitted-exception/-call-not-permitted-exception.html","searchKeys":["CallNotPermittedException","constructor(message: String = \"A call to a protected operation by a circuit breaker was not permitted.\")","kresil.circuitbreaker.exceptions.CallNotPermittedException.CallNotPermittedException"]},{"name":"constructor(permits: Int)","description":"kresil.ratelimiter.event.RateLimiterEvent.Success.Success","location":"lib/kresil.ratelimiter.event/-rate-limiter-event/-success/-success.html","searchKeys":["Success","constructor(permits: Int)","kresil.ratelimiter.event.RateLimiterEvent.Success.Success"]},{"name":"constructor(permits: Int, retryAfter: Duration)","description":"kresil.ratelimiter.event.RateLimiterEvent.Reject.Reject","location":"lib/kresil.ratelimiter.event/-rate-limiter-event/-reject/-reject.html","searchKeys":["Reject","constructor(permits: Int, retryAfter: Duration)","kresil.ratelimiter.event.RateLimiterEvent.Reject.Reject"]},{"name":"constructor(permits: Int, timeout: Duration)","description":"kresil.ratelimiter.event.RateLimiterEvent.Queued.Queued","location":"lib/kresil.ratelimiter.event/-rate-limiter-event/-queued/-queued.html","searchKeys":["Queued","constructor(permits: Int, timeout: Duration)","kresil.ratelimiter.event.RateLimiterEvent.Queued.Queued"]},{"name":"constructor(retryAfter: Duration)","description":"kresil.ratelimiter.exceptions.RateLimiterRejectedException.RateLimiterRejectedException","location":"lib/kresil.ratelimiter.exceptions/-rate-limiter-rejected-exception/-rate-limiter-rejected-exception.html","searchKeys":["RateLimiterRejectedException","constructor(retryAfter: Duration)","kresil.ratelimiter.exceptions.RateLimiterRejectedException.RateLimiterRejectedException"]},{"name":"constructor(size: Int, minimumThroughput: Int, type: SlidingWindowType)","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindow.SlidingWindow","location":"lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window/-sliding-window.html","searchKeys":["SlidingWindow","constructor(size: Int, minimumThroughput: Int, type: SlidingWindowType)","kresil.circuitbreaker.state.slidingwindow.SlidingWindow.SlidingWindow"]},{"name":"constructor(throwable: Throwable)","description":"kresil.retry.event.RetryEvent.RetryOnError.RetryOnError","location":"lib/kresil.retry.event/-retry-event/-retry-on-error/-retry-on-error.html","searchKeys":["RetryOnError","constructor(throwable: Throwable)","kresil.retry.event.RetryEvent.RetryOnError.RetryOnError"]},{"name":"constructor(throwable: Throwable)","description":"kresil.retry.event.RetryEvent.RetryOnIgnoredError.RetryOnIgnoredError","location":"lib/kresil.retry.event/-retry-event/-retry-on-ignored-error/-retry-on-ignored-error.html","searchKeys":["RetryOnIgnoredError","constructor(throwable: Throwable)","kresil.retry.event.RetryEvent.RetryOnIgnoredError.RetryOnIgnoredError"]},{"name":"constructor(totalPermits: Int, replenishmentPeriod: Duration, queueLength: Int)","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.FixedWindowCounter","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-fixed-window-counter/-fixed-window-counter.html","searchKeys":["FixedWindowCounter","constructor(totalPermits: Int, replenishmentPeriod: Duration, queueLength: Int)","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.FixedWindowCounter"]},{"name":"constructor(totalPermits: Int, replenishmentPeriod: Duration, queueLength: Int)","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.TokenBucket","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-token-bucket/-token-bucket.html","searchKeys":["TokenBucket","constructor(totalPermits: Int, replenishmentPeriod: Duration, queueLength: Int)","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.TokenBucket"]},{"name":"constructor(totalPermits: Int, replenishmentPeriod: Duration, segments: Int, queueLength: Int)","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.SlidingWindowCounter","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-sliding-window-counter/-sliding-window-counter.html","searchKeys":["SlidingWindowCounter","constructor(totalPermits: Int, replenishmentPeriod: Duration, segments: Int, queueLength: Int)","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.SlidingWindowCounter"]},{"name":"data class CircuitBreakerConfig(val failureRateThreshold: Double, val slidingWindow: SlidingWindow, val permittedNumberOfCallsInHalfOpenState: Int, val delayStrategyInOpenState: CtxDelayStrategy<Unit>, val maxWaitDurationInHalfOpenState: Duration, val recordExceptionPredicate: OnExceptionPredicate, val recordResultPredicate: OnResultPredicate)","description":"kresil.circuitbreaker.config.CircuitBreakerConfig","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config/index.html","searchKeys":["CircuitBreakerConfig","data class CircuitBreakerConfig(val failureRateThreshold: Double, val slidingWindow: SlidingWindow, val permittedNumberOfCallsInHalfOpenState: Int, val delayStrategyInOpenState: CtxDelayStrategy<Unit>, val maxWaitDurationInHalfOpenState: Duration, val recordExceptionPredicate: OnExceptionPredicate, val recordResultPredicate: OnResultPredicate)","kresil.circuitbreaker.config.CircuitBreakerConfig"]},{"name":"data class FixedWindowCounter(val totalPermits: Int, val replenishmentPeriod: Duration, val queueLength: Int) : RateLimitingAlgorithm","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-fixed-window-counter/index.html","searchKeys":["FixedWindowCounter","data class FixedWindowCounter(val totalPermits: Int, val replenishmentPeriod: Duration, val queueLength: Int) : RateLimitingAlgorithm","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter"]},{"name":"data class HalfOpen : CircuitBreakerState","description":"kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen","location":"lib/kresil.circuitbreaker.state/-circuit-breaker-state/-half-open/index.html","searchKeys":["HalfOpen","data class HalfOpen : CircuitBreakerState","kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen"]},{"name":"data class Open : CircuitBreakerState","description":"kresil.circuitbreaker.state.CircuitBreakerState.Open","location":"lib/kresil.circuitbreaker.state/-circuit-breaker-state/-open/index.html","searchKeys":["Open","data class Open : CircuitBreakerState","kresil.circuitbreaker.state.CircuitBreakerState.Open"]},{"name":"data class Queued(val permits: Int, val timeout: Duration) : RateLimiterEvent","description":"kresil.ratelimiter.event.RateLimiterEvent.Queued","location":"lib/kresil.ratelimiter.event/-rate-limiter-event/-queued/index.html","searchKeys":["Queued","data class Queued(val permits: Int, val timeout: Duration) : RateLimiterEvent","kresil.ratelimiter.event.RateLimiterEvent.Queued"]},{"name":"data class RateLimiterConfig(val algorithm: RateLimitingAlgorithm, val baseTimeoutDuration: Duration, val onRejected: ExceptionHandler)","description":"kresil.ratelimiter.config.RateLimiterConfig","location":"lib/kresil.ratelimiter.config/-rate-limiter-config/index.html","searchKeys":["RateLimiterConfig","data class RateLimiterConfig(val algorithm: RateLimitingAlgorithm, val baseTimeoutDuration: Duration, val onRejected: ExceptionHandler)","kresil.ratelimiter.config.RateLimiterConfig"]},{"name":"data class RecordedFailure(val failureRate: Double) : CircuitBreakerEvent","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedFailure","location":"lib/kresil.circuitbreaker.event/-circuit-breaker-event/-recorded-failure/index.html","searchKeys":["RecordedFailure","data class RecordedFailure(val failureRate: Double) : CircuitBreakerEvent","kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedFailure"]},{"name":"data class RecordedSuccess(val failureRate: Double) : CircuitBreakerEvent","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedSuccess","location":"lib/kresil.circuitbreaker.event/-circuit-breaker-event/-recorded-success/index.html","searchKeys":["RecordedSuccess","data class RecordedSuccess(val failureRate: Double) : CircuitBreakerEvent","kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedSuccess"]},{"name":"data class Reject(val permits: Int, val retryAfter: Duration) : RateLimiterEvent","description":"kresil.ratelimiter.event.RateLimiterEvent.Reject","location":"lib/kresil.ratelimiter.event/-rate-limiter-event/-reject/index.html","searchKeys":["Reject","data class Reject(val permits: Int, val retryAfter: Duration) : RateLimiterEvent","kresil.ratelimiter.event.RateLimiterEvent.Reject"]},{"name":"data class RetryConfig(val maxAttempts: Int, val retryPredicate: OnExceptionPredicate, val retryOnResultPredicate: OnResultPredicate, val delayStrategy: RetryDelayStrategy, val exceptionHandler: ExceptionHandler)","description":"kresil.retry.config.RetryConfig","location":"lib/kresil.retry.config/-retry-config/index.html","searchKeys":["RetryConfig","data class RetryConfig(val maxAttempts: Int, val retryPredicate: OnExceptionPredicate, val retryOnResultPredicate: OnResultPredicate, val delayStrategy: RetryDelayStrategy, val exceptionHandler: ExceptionHandler)","kresil.retry.config.RetryConfig"]},{"name":"data class RetryContext(val attempt: Int)","description":"kresil.retry.context.RetryContext","location":"lib/kresil.retry.context/-retry-context/index.html","searchKeys":["RetryContext","data class RetryContext(val attempt: Int)","kresil.retry.context.RetryContext"]},{"name":"data class RetryDelayStrategyContext(val lastThrowable: Throwable? = null, val lastResult: Any? = null)","description":"kresil.retry.delay.RetryDelayStrategyContext","location":"lib/kresil.retry.delay/-retry-delay-strategy-context/index.html","searchKeys":["RetryDelayStrategyContext","data class RetryDelayStrategyContext(val lastThrowable: Throwable? = null, val lastResult: Any? = null)","kresil.retry.delay.RetryDelayStrategyContext"]},{"name":"data class RetryOnError(val throwable: Throwable) : RetryEvent","description":"kresil.retry.event.RetryEvent.RetryOnError","location":"lib/kresil.retry.event/-retry-event/-retry-on-error/index.html","searchKeys":["RetryOnError","data class RetryOnError(val throwable: Throwable) : RetryEvent","kresil.retry.event.RetryEvent.RetryOnError"]},{"name":"data class RetryOnIgnoredError(val throwable: Throwable) : RetryEvent","description":"kresil.retry.event.RetryEvent.RetryOnIgnoredError","location":"lib/kresil.retry.event/-retry-event/-retry-on-ignored-error/index.html","searchKeys":["RetryOnIgnoredError","data class RetryOnIgnoredError(val throwable: Throwable) : RetryEvent","kresil.retry.event.RetryEvent.RetryOnIgnoredError"]},{"name":"data class RetryOnRetry(val attempt: Int) : RetryEvent","description":"kresil.retry.event.RetryEvent.RetryOnRetry","location":"lib/kresil.retry.event/-retry-event/-retry-on-retry/index.html","searchKeys":["RetryOnRetry","data class RetryOnRetry(val attempt: Int) : RetryEvent","kresil.retry.event.RetryEvent.RetryOnRetry"]},{"name":"data class SlidingWindow(val size: Int, val minimumThroughput: Int, val type: SlidingWindowType)","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindow","location":"lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window/index.html","searchKeys":["SlidingWindow","data class SlidingWindow(val size: Int, val minimumThroughput: Int, val type: SlidingWindowType)","kresil.circuitbreaker.state.slidingwindow.SlidingWindow"]},{"name":"data class SlidingWindowCounter(val totalPermits: Int, val replenishmentPeriod: Duration, val segments: Int, val queueLength: Int) : RateLimitingAlgorithm","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-sliding-window-counter/index.html","searchKeys":["SlidingWindowCounter","data class SlidingWindowCounter(val totalPermits: Int, val replenishmentPeriod: Duration, val segments: Int, val queueLength: Int) : RateLimitingAlgorithm","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter"]},{"name":"data class StateTransition(val fromState: CircuitBreakerState, val toState: CircuitBreakerState, val manual: Boolean = false) : CircuitBreakerEvent","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition","location":"lib/kresil.circuitbreaker.event/-circuit-breaker-event/-state-transition/index.html","searchKeys":["StateTransition","data class StateTransition(val fromState: CircuitBreakerState, val toState: CircuitBreakerState, val manual: Boolean = false) : CircuitBreakerEvent","kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition"]},{"name":"data class Success(val permits: Int) : RateLimiterEvent","description":"kresil.ratelimiter.event.RateLimiterEvent.Success","location":"lib/kresil.ratelimiter.event/-rate-limiter-event/-success/index.html","searchKeys":["Success","data class Success(val permits: Int) : RateLimiterEvent","kresil.ratelimiter.event.RateLimiterEvent.Success"]},{"name":"data class TokenBucket(val totalPermits: Int, val replenishmentPeriod: Duration, val queueLength: Int) : RateLimitingAlgorithm","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-token-bucket/index.html","searchKeys":["TokenBucket","data class TokenBucket(val totalPermits: Int, val replenishmentPeriod: Duration, val queueLength: Int) : RateLimitingAlgorithm","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket"]},{"name":"data object CallNotPermitted : CircuitBreakerEvent","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.CallNotPermitted","location":"lib/kresil.circuitbreaker.event/-circuit-breaker-event/-call-not-permitted/index.html","searchKeys":["CallNotPermitted","data object CallNotPermitted : CircuitBreakerEvent","kresil.circuitbreaker.event.CircuitBreakerEvent.CallNotPermitted"]},{"name":"data object Closed : CircuitBreakerState","description":"kresil.circuitbreaker.state.CircuitBreakerState.Closed","location":"lib/kresil.circuitbreaker.state/-circuit-breaker-state/-closed/index.html","searchKeys":["Closed","data object Closed : CircuitBreakerState","kresil.circuitbreaker.state.CircuitBreakerState.Closed"]},{"name":"data object Reset : CircuitBreakerEvent","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.Reset","location":"lib/kresil.circuitbreaker.event/-circuit-breaker-event/-reset/index.html","searchKeys":["Reset","data object Reset : CircuitBreakerEvent","kresil.circuitbreaker.event.CircuitBreakerEvent.Reset"]},{"name":"data object RetryOnSuccess : RetryEvent","description":"kresil.retry.event.RetryEvent.RetryOnSuccess","location":"lib/kresil.retry.event/-retry-event/-retry-on-success/index.html","searchKeys":["RetryOnSuccess","data object RetryOnSuccess : RetryEvent","kresil.retry.event.RetryEvent.RetryOnSuccess"]},{"name":"enum CircuitBreakerReducerEvent : Enum<CircuitBreakerReducerEvent> ","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent","location":"lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/index.html","searchKeys":["CircuitBreakerReducerEvent","enum CircuitBreakerReducerEvent : Enum<CircuitBreakerReducerEvent> ","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent"]},{"name":"enum SlidingWindowType : Enum<SlidingWindowType> ","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindowType","location":"lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window-type/index.html","searchKeys":["SlidingWindowType","enum SlidingWindowType : Enum<SlidingWindowType> ","kresil.circuitbreaker.state.slidingwindow.SlidingWindowType"]},{"name":"fun algorithm(algorithm: RateLimitingAlgorithm)","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.algorithm","location":"lib/kresil.ratelimiter.config/-rate-limiter-config-builder/algorithm.html","searchKeys":["algorithm","fun algorithm(algorithm: RateLimitingAlgorithm)","kresil.ratelimiter.config.RateLimiterConfigBuilder.algorithm"]},{"name":"fun circuitBreakerConfig(baseConfig: CircuitBreakerConfig, configure: CircuitBreakerConfigBuilder.() -> Unit): CircuitBreakerConfig","description":"kresil.circuitbreaker.config.circuitBreakerConfig","location":"lib/kresil.circuitbreaker.config/circuit-breaker-config.html","searchKeys":["circuitBreakerConfig","fun circuitBreakerConfig(baseConfig: CircuitBreakerConfig, configure: CircuitBreakerConfigBuilder.() -> Unit): CircuitBreakerConfig","kresil.circuitbreaker.config.circuitBreakerConfig"]},{"name":"fun circuitBreakerConfig(configure: CircuitBreakerConfigBuilder.() -> Unit): CircuitBreakerConfig","description":"kresil.circuitbreaker.config.circuitBreakerConfig","location":"lib/kresil.circuitbreaker.config/circuit-breaker-config.html","searchKeys":["circuitBreakerConfig","fun circuitBreakerConfig(configure: CircuitBreakerConfigBuilder.() -> Unit): CircuitBreakerConfig","kresil.circuitbreaker.config.circuitBreakerConfig"]},{"name":"fun constantDelay(duration: Duration, randomizationFactor: Double = 0.0)","description":"kresil.retry.config.RetryConfigBuilder.constantDelay","location":"lib/kresil.retry.config/-retry-config-builder/constant-delay.html","searchKeys":["constantDelay","fun constantDelay(duration: Duration, randomizationFactor: Double = 0.0)","kresil.retry.config.RetryConfigBuilder.constantDelay"]},{"name":"fun constantDelayInOpenState(delay: Duration)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.constantDelayInOpenState","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/constant-delay-in-open-state.html","searchKeys":["constantDelayInOpenState","fun constantDelayInOpenState(delay: Duration)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.constantDelayInOpenState"]},{"name":"fun customDelay(delayStrategy: RetryDelayStrategy)","description":"kresil.retry.config.RetryConfigBuilder.customDelay","location":"lib/kresil.retry.config/-retry-config-builder/custom-delay.html","searchKeys":["customDelay","fun customDelay(delayStrategy: RetryDelayStrategy)","kresil.retry.config.RetryConfigBuilder.customDelay"]},{"name":"fun customDelayInOpenState(delayStrategyInOpenState: DelayStrategy)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.customDelayInOpenState","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/custom-delay-in-open-state.html","searchKeys":["customDelayInOpenState","fun customDelayInOpenState(delayStrategyInOpenState: DelayStrategy)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.customDelayInOpenState"]},{"name":"fun customDelayProvider(delayProvider: RetryCtxDelayProvider)","description":"kresil.retry.config.RetryConfigBuilder.customDelayProvider","location":"lib/kresil.retry.config/-retry-config-builder/custom-delay-provider.html","searchKeys":["customDelayProvider","fun customDelayProvider(delayProvider: RetryCtxDelayProvider)","kresil.retry.config.RetryConfigBuilder.customDelayProvider"]},{"name":"fun customDelayProviderInOpenState(delayProvider: DelayProvider)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.customDelayProviderInOpenState","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/custom-delay-provider-in-open-state.html","searchKeys":["customDelayProviderInOpenState","fun customDelayProviderInOpenState(delayProvider: DelayProvider)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.customDelayProviderInOpenState"]},{"name":"fun defaultCircuitBreakerConfig(): CircuitBreakerConfig","description":"kresil.circuitbreaker.config.defaultCircuitBreakerConfig","location":"lib/kresil.circuitbreaker.config/default-circuit-breaker-config.html","searchKeys":["defaultCircuitBreakerConfig","fun defaultCircuitBreakerConfig(): CircuitBreakerConfig","kresil.circuitbreaker.config.defaultCircuitBreakerConfig"]},{"name":"fun defaultRateLimiterConfig(): RateLimiterConfig","description":"kresil.ratelimiter.config.defaultRateLimiterConfig","location":"lib/kresil.ratelimiter.config/default-rate-limiter-config.html","searchKeys":["defaultRateLimiterConfig","fun defaultRateLimiterConfig(): RateLimiterConfig","kresil.ratelimiter.config.defaultRateLimiterConfig"]},{"name":"fun defaultRetryConfig(): RetryConfig","description":"kresil.retry.config.defaultRetryConfig","location":"lib/kresil.retry.config/default-retry-config.html","searchKeys":["defaultRetryConfig","fun defaultRetryConfig(): RetryConfig","kresil.retry.config.defaultRetryConfig"]},{"name":"fun disableExceptionHandler()","description":"kresil.retry.config.RetryConfigBuilder.disableExceptionHandler","location":"lib/kresil.retry.config/-retry-config-builder/disable-exception-handler.html","searchKeys":["disableExceptionHandler","fun disableExceptionHandler()","kresil.retry.config.RetryConfigBuilder.disableExceptionHandler"]},{"name":"fun exceptionHandler(handler: ExceptionHandler)","description":"kresil.retry.config.RetryConfigBuilder.exceptionHandler","location":"lib/kresil.retry.config/-retry-config-builder/exception-handler.html","searchKeys":["exceptionHandler","fun exceptionHandler(handler: ExceptionHandler)","kresil.retry.config.RetryConfigBuilder.exceptionHandler"]},{"name":"fun exponentialDelay(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 2.0, maxDelay: Duration = 1.minutes, randomizationFactor: Double = 0.0)","description":"kresil.retry.config.RetryConfigBuilder.exponentialDelay","location":"lib/kresil.retry.config/-retry-config-builder/exponential-delay.html","searchKeys":["exponentialDelay","fun exponentialDelay(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 2.0, maxDelay: Duration = 1.minutes, randomizationFactor: Double = 0.0)","kresil.retry.config.RetryConfigBuilder.exponentialDelay"]},{"name":"fun exponentialDelayInOpenState(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 2.0, maxDelay: Duration = 1.minutes)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.exponentialDelayInOpenState","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/exponential-delay-in-open-state.html","searchKeys":["exponentialDelayInOpenState","fun exponentialDelayInOpenState(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 2.0, maxDelay: Duration = 1.minutes)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.exponentialDelayInOpenState"]},{"name":"fun interface CtxDelayProvider<TContext>","description":"kresil.core.delay.provider.CtxDelayProvider","location":"lib/kresil.core.delay.provider/-ctx-delay-provider/index.html","searchKeys":["CtxDelayProvider","fun interface CtxDelayProvider<TContext>","kresil.core.delay.provider.CtxDelayProvider"]},{"name":"fun interface DelayProvider","description":"kresil.core.delay.provider.DelayProvider","location":"lib/kresil.core.delay.provider/-delay-provider/index.html","searchKeys":["DelayProvider","fun interface DelayProvider","kresil.core.delay.provider.DelayProvider"]},{"name":"fun interface RetryCtxDelayProvider : CtxDelayProvider<RetryDelayStrategyContext> ","description":"kresil.retry.delay.RetryCtxDelayProvider","location":"lib/kresil.retry.delay/-retry-ctx-delay-provider/index.html","searchKeys":["RetryCtxDelayProvider","fun interface RetryCtxDelayProvider : CtxDelayProvider<RetryDelayStrategyContext> ","kresil.retry.delay.RetryCtxDelayProvider"]},{"name":"fun linearDelay(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 1.0, maxDelay: Duration = 1.minutes, randomizationFactor: Double = 0.0)","description":"kresil.retry.config.RetryConfigBuilder.linearDelay","location":"lib/kresil.retry.config/-retry-config-builder/linear-delay.html","searchKeys":["linearDelay","fun linearDelay(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 1.0, maxDelay: Duration = 1.minutes, randomizationFactor: Double = 0.0)","kresil.retry.config.RetryConfigBuilder.linearDelay"]},{"name":"fun linearDelayInOpenState(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 1.0, maxDelay: Duration = 1.minutes)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.linearDelayInOpenState","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/linear-delay-in-open-state.html","searchKeys":["linearDelayInOpenState","fun linearDelayInOpenState(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 1.0, maxDelay: Duration = 1.minutes)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.linearDelayInOpenState"]},{"name":"fun noDelay()","description":"kresil.retry.config.RetryConfigBuilder.noDelay","location":"lib/kresil.retry.config/-retry-config-builder/no-delay.html","searchKeys":["noDelay","fun noDelay()","kresil.retry.config.RetryConfigBuilder.noDelay"]},{"name":"fun noDelayInOpenState()","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.noDelayInOpenState","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/no-delay-in-open-state.html","searchKeys":["noDelayInOpenState","fun noDelayInOpenState()","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.noDelayInOpenState"]},{"name":"fun onRejected(block: ExceptionHandler)","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.onRejected","location":"lib/kresil.ratelimiter.config/-rate-limiter-config-builder/on-rejected.html","searchKeys":["onRejected","fun onRejected(block: ExceptionHandler)","kresil.ratelimiter.config.RateLimiterConfigBuilder.onRejected"]},{"name":"fun rateLimiterConfig(baseConfig: RateLimiterConfig, configure: RateLimiterConfigBuilder.() -> Unit): RateLimiterConfig","description":"kresil.ratelimiter.config.rateLimiterConfig","location":"lib/kresil.ratelimiter.config/rate-limiter-config.html","searchKeys":["rateLimiterConfig","fun rateLimiterConfig(baseConfig: RateLimiterConfig, configure: RateLimiterConfigBuilder.() -> Unit): RateLimiterConfig","kresil.ratelimiter.config.rateLimiterConfig"]},{"name":"fun rateLimiterConfig(configure: RateLimiterConfigBuilder.() -> Unit): RateLimiterConfig","description":"kresil.ratelimiter.config.rateLimiterConfig","location":"lib/kresil.ratelimiter.config/rate-limiter-config.html","searchKeys":["rateLimiterConfig","fun rateLimiterConfig(configure: RateLimiterConfigBuilder.() -> Unit): RateLimiterConfig","kresil.ratelimiter.config.rateLimiterConfig"]},{"name":"fun recordExceptionPredicate(predicate: OnExceptionPredicate)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.recordExceptionPredicate","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/record-exception-predicate.html","searchKeys":["recordExceptionPredicate","fun recordExceptionPredicate(predicate: OnExceptionPredicate)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.recordExceptionPredicate"]},{"name":"fun recordResultPredicate(predicate: OnResultPredicate)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.recordResultPredicate","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/record-result-predicate.html","searchKeys":["recordResultPredicate","fun recordResultPredicate(predicate: OnResultPredicate)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.recordResultPredicate"]},{"name":"fun retryConfig(baseConfig: RetryConfig, configure: RetryConfigBuilder.() -> Unit): RetryConfig","description":"kresil.retry.config.retryConfig","location":"lib/kresil.retry.config/retry-config.html","searchKeys":["retryConfig","fun retryConfig(baseConfig: RetryConfig, configure: RetryConfigBuilder.() -> Unit): RetryConfig","kresil.retry.config.retryConfig"]},{"name":"fun retryConfig(configure: RetryConfigBuilder.() -> Unit): RetryConfig","description":"kresil.retry.config.retryConfig","location":"lib/kresil.retry.config/retry-config.html","searchKeys":["retryConfig","fun retryConfig(configure: RetryConfigBuilder.() -> Unit): RetryConfig","kresil.retry.config.retryConfig"]},{"name":"fun retryIf(predicate: OnExceptionPredicate)","description":"kresil.retry.config.RetryConfigBuilder.retryIf","location":"lib/kresil.retry.config/-retry-config-builder/retry-if.html","searchKeys":["retryIf","fun retryIf(predicate: OnExceptionPredicate)","kresil.retry.config.RetryConfigBuilder.retryIf"]},{"name":"fun retryOnResult(predicate: OnResultPredicate)","description":"kresil.retry.config.RetryConfigBuilder.retryOnResult","location":"lib/kresil.retry.config/-retry-config-builder/retry-on-result.html","searchKeys":["retryOnResult","fun retryOnResult(predicate: OnResultPredicate)","kresil.retry.config.RetryConfigBuilder.retryOnResult"]},{"name":"fun slidingWindow(size: Int, minimumThroughput: Int = 100, type: SlidingWindowType = COUNT_BASED)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.slidingWindow","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/sliding-window.html","searchKeys":["slidingWindow","fun slidingWindow(size: Int, minimumThroughput: Int = 100, type: SlidingWindowType = COUNT_BASED)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.slidingWindow"]},{"name":"fun valueOf(value: String): CircuitBreakerReducerEvent","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.valueOf","location":"lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CircuitBreakerReducerEvent","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.valueOf"]},{"name":"fun valueOf(value: String): SlidingWindowType","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.valueOf","location":"lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SlidingWindowType","kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.valueOf"]},{"name":"fun values(): Array<CircuitBreakerReducerEvent>","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.values","location":"lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/values.html","searchKeys":["values","fun values(): Array<CircuitBreakerReducerEvent>","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.values"]},{"name":"fun values(): Array<SlidingWindowType>","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.values","location":"lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window-type/values.html","searchKeys":["values","fun values(): Array<SlidingWindowType>","kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.values"]},{"name":"inline fun <A, B, R, T> decorateCtxBiFunction(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxBiFunction<RetryContext, A, B, R>): BiFunction<A, B, T?>","description":"kresil.retry.Retry.decorateCtxBiFunction","location":"lib/kresil.retry/-retry/decorate-ctx-bi-function.html","searchKeys":["decorateCtxBiFunction","inline fun <A, B, R, T> decorateCtxBiFunction(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxBiFunction<RetryContext, A, B, R>): BiFunction<A, B, T?>","kresil.retry.Retry.decorateCtxBiFunction"]},{"name":"inline fun <A, B, R> decorateBiFunction(crossinline block: BiFunction<A, B, R>): BiFunction<A, B, R?>","description":"kresil.retry.Retry.decorateBiFunction","location":"lib/kresil.retry/-retry/decorate-bi-function.html","searchKeys":["decorateBiFunction","inline fun <A, B, R> decorateBiFunction(crossinline block: BiFunction<A, B, R>): BiFunction<A, B, R?>","kresil.retry.Retry.decorateBiFunction"]},{"name":"inline fun <A, R, T> decorateCtxFunction(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxFunction<RetryContext, A, R>): Function<A, T?>","description":"kresil.retry.Retry.decorateCtxFunction","location":"lib/kresil.retry/-retry/decorate-ctx-function.html","searchKeys":["decorateCtxFunction","inline fun <A, R, T> decorateCtxFunction(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxFunction<RetryContext, A, R>): Function<A, T?>","kresil.retry.Retry.decorateCtxFunction"]},{"name":"inline fun <A, R> decorateFunction(crossinline block: Function<A, R>): Function<A, R?>","description":"kresil.retry.Retry.decorateFunction","location":"lib/kresil.retry/-retry/decorate-function.html","searchKeys":["decorateFunction","inline fun <A, R> decorateFunction(crossinline block: Function<A, R>): Function<A, R?>","kresil.retry.Retry.decorateFunction"]},{"name":"inline fun <R, T> decorateCtxSupplier(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxSupplier<RetryContext, R>): Supplier<T?>","description":"kresil.retry.Retry.decorateCtxSupplier","location":"lib/kresil.retry/-retry/decorate-ctx-supplier.html","searchKeys":["decorateCtxSupplier","inline fun <R, T> decorateCtxSupplier(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxSupplier<RetryContext, R>): Supplier<T?>","kresil.retry.Retry.decorateCtxSupplier"]},{"name":"inline fun <R> decorateSupplier(crossinline block: Supplier<R>): Supplier<R?>","description":"kresil.retry.Retry.decorateSupplier","location":"lib/kresil.retry/-retry/decorate-supplier.html","searchKeys":["decorateSupplier","inline fun <R> decorateSupplier(crossinline block: Supplier<R>): Supplier<R?>","kresil.retry.Retry.decorateSupplier"]},{"name":"inline suspend fun <R, T> executeCtxSupplier(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxSupplier<RetryContext, R>): T?","description":"kresil.retry.Retry.executeCtxSupplier","location":"lib/kresil.retry/-retry/execute-ctx-supplier.html","searchKeys":["executeCtxSupplier","inline suspend fun <R, T> executeCtxSupplier(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxSupplier<RetryContext, R>): T?","kresil.retry.Retry.executeCtxSupplier"]},{"name":"inline suspend fun <R> call(key: Key, permits: Int = 1, timeout: Duration = config.baseTimeoutDuration, block: Supplier<R>): R","description":"kresil.ratelimiter.KeyedRateLimiter.call","location":"lib/kresil.ratelimiter/-keyed-rate-limiter/call.html","searchKeys":["call","inline suspend fun <R> call(key: Key, permits: Int = 1, timeout: Duration = config.baseTimeoutDuration, block: Supplier<R>): R","kresil.ratelimiter.KeyedRateLimiter.call"]},{"name":"inline suspend fun <R> call(permits: Int = 1, timeout: Duration = config.baseTimeoutDuration, block: Supplier<R>): R","description":"kresil.ratelimiter.RateLimiter.call","location":"lib/kresil.ratelimiter/-rate-limiter/call.html","searchKeys":["call","inline suspend fun <R> call(permits: Int = 1, timeout: Duration = config.baseTimeoutDuration, block: Supplier<R>): R","kresil.ratelimiter.RateLimiter.call"]},{"name":"inline suspend fun <R> executeSupplier(crossinline block: Supplier<R>): R?","description":"kresil.retry.Retry.executeSupplier","location":"lib/kresil.retry/-retry/execute-supplier.html","searchKeys":["executeSupplier","inline suspend fun <R> executeSupplier(crossinline block: Supplier<R>): R?","kresil.retry.Retry.executeSupplier"]},{"name":"interface ConfigBuilder<TConfig>","description":"kresil.core.builders.ConfigBuilder","location":"lib/kresil.core.builders/-config-builder/index.html","searchKeys":["ConfigBuilder","interface ConfigBuilder<TConfig>","kresil.core.builders.ConfigBuilder"]},{"name":"interface FailureRateSlidingWindow<T>","description":"kresil.core.slidingwindow.FailureRateSlidingWindow","location":"lib/kresil.core.slidingwindow/-failure-rate-sliding-window/index.html","searchKeys":["FailureRateSlidingWindow","interface FailureRateSlidingWindow<T>","kresil.core.slidingwindow.FailureRateSlidingWindow"]},{"name":"interface Node<T>","description":"kresil.core.queue.Node","location":"lib/kresil.core.queue/-node/index.html","searchKeys":["Node","interface Node<T>","kresil.core.queue.Node"]},{"name":"interface Queue<T>","description":"kresil.core.queue.Queue","location":"lib/kresil.core.queue/-queue/index.html","searchKeys":["Queue","interface Queue<T>","kresil.core.queue.Queue"]},{"name":"open class FlowEventListenerImpl<Event> : FlowEventListener<Event> ","description":"kresil.core.events.FlowEventListenerImpl","location":"lib/kresil.core.events/-flow-event-listener-impl/index.html","searchKeys":["FlowEventListenerImpl","open class FlowEventListenerImpl<Event> : FlowEventListener<Event> ","kresil.core.events.FlowEventListenerImpl"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.equals","location":"lib/kresil.circuitbreaker.state/-circuit-breaker-state/-half-open/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"kresil.circuitbreaker.state.CircuitBreakerState.Open.equals","location":"lib/kresil.circuitbreaker.state/-circuit-breaker-state/-open/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","kresil.circuitbreaker.state.CircuitBreakerState.Open.equals"]},{"name":"open override fun build(): CircuitBreakerConfig","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.build","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/build.html","searchKeys":["build","open override fun build(): CircuitBreakerConfig","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.build"]},{"name":"open override fun build(): RateLimiterConfig","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.build","location":"lib/kresil.ratelimiter.config/-rate-limiter-config-builder/build.html","searchKeys":["build","open override fun build(): RateLimiterConfig","kresil.ratelimiter.config.RateLimiterConfigBuilder.build"]},{"name":"open override fun build(): RetryConfig","description":"kresil.retry.config.RetryConfigBuilder.build","location":"lib/kresil.retry.config/-retry-config-builder/build.html","searchKeys":["build","open override fun build(): RetryConfig","kresil.retry.config.RetryConfigBuilder.build"]},{"name":"open override fun cancelListeners()","description":"kresil.core.events.FlowEventListenerImpl.cancelListeners","location":"lib/kresil.core.events/-flow-event-listener-impl/cancel-listeners.html","searchKeys":["cancelListeners","open override fun cancelListeners()","kresil.core.events.FlowEventListenerImpl.cancelListeners"]},{"name":"open override fun close()","description":"kresil.ratelimiter.KeyedRateLimiter.close","location":"lib/kresil.ratelimiter/-keyed-rate-limiter/close.html","searchKeys":["close","open override fun close()","kresil.ratelimiter.KeyedRateLimiter.close"]},{"name":"open override fun close()","description":"kresil.ratelimiter.RateLimiter.close","location":"lib/kresil.ratelimiter/-rate-limiter/close.html","searchKeys":["close","open override fun close()","kresil.ratelimiter.RateLimiter.close"]},{"name":"open override fun hashCode(): Int","description":"kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.hashCode","location":"lib/kresil.circuitbreaker.state/-circuit-breaker-state/-half-open/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.hashCode"]},{"name":"open override fun hashCode(): Int","description":"kresil.circuitbreaker.state.CircuitBreakerState.Open.hashCode","location":"lib/kresil.circuitbreaker.state/-circuit-breaker-state/-open/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","kresil.circuitbreaker.state.CircuitBreakerState.Open.hashCode"]},{"name":"open override fun toString(): String","description":"kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.toString","location":"lib/kresil.circuitbreaker.state/-circuit-breaker-state/-half-open/to-string.html","searchKeys":["toString","open override fun toString(): String","kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.toString"]},{"name":"open override fun toString(): String","description":"kresil.circuitbreaker.state.CircuitBreakerState.Open.toString","location":"lib/kresil.circuitbreaker.state/-circuit-breaker-state/-open/to-string.html","searchKeys":["toString","open override fun toString(): String","kresil.circuitbreaker.state.CircuitBreakerState.Open.toString"]},{"name":"open override val baseConfig: CircuitBreakerConfig","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.baseConfig","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/base-config.html","searchKeys":["baseConfig","open override val baseConfig: CircuitBreakerConfig","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.baseConfig"]},{"name":"open override val baseConfig: RateLimiterConfig","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.baseConfig","location":"lib/kresil.ratelimiter.config/-rate-limiter-config-builder/base-config.html","searchKeys":["baseConfig","open override val baseConfig: RateLimiterConfig","kresil.ratelimiter.config.RateLimiterConfigBuilder.baseConfig"]},{"name":"open override val baseConfig: RetryConfig","description":"kresil.retry.config.RetryConfigBuilder.baseConfig","location":"lib/kresil.retry.config/-retry-config-builder/base-config.html","searchKeys":["baseConfig","open override val baseConfig: RetryConfig","kresil.retry.config.RetryConfigBuilder.baseConfig"]},{"name":"open override val events: MutableSharedFlow<Event>","description":"kresil.core.events.FlowEventListenerImpl.events","location":"lib/kresil.core.events/-flow-event-listener-impl/events.html","searchKeys":["events","open override val events: MutableSharedFlow<Event>","kresil.core.events.FlowEventListenerImpl.events"]},{"name":"open override val queueLength: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.queueLength","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-fixed-window-counter/queue-length.html","searchKeys":["queueLength","open override val queueLength: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.queueLength"]},{"name":"open override val queueLength: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.queueLength","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-sliding-window-counter/queue-length.html","searchKeys":["queueLength","open override val queueLength: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.queueLength"]},{"name":"open override val queueLength: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.queueLength","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-token-bucket/queue-length.html","searchKeys":["queueLength","open override val queueLength: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.queueLength"]},{"name":"open override val replenishmentPeriod: Duration","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.replenishmentPeriod","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-fixed-window-counter/replenishment-period.html","searchKeys":["replenishmentPeriod","open override val replenishmentPeriod: Duration","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.replenishmentPeriod"]},{"name":"open override val replenishmentPeriod: Duration","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.replenishmentPeriod","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-sliding-window-counter/replenishment-period.html","searchKeys":["replenishmentPeriod","open override val replenishmentPeriod: Duration","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.replenishmentPeriod"]},{"name":"open override val replenishmentPeriod: Duration","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.replenishmentPeriod","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-token-bucket/replenishment-period.html","searchKeys":["replenishmentPeriod","open override val replenishmentPeriod: Duration","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.replenishmentPeriod"]},{"name":"open override val scope: CoroutineScope","description":"kresil.core.events.FlowEventListenerImpl.scope","location":"lib/kresil.core.events/-flow-event-listener-impl/scope.html","searchKeys":["scope","open override val scope: CoroutineScope","kresil.core.events.FlowEventListenerImpl.scope"]},{"name":"open override val totalPermits: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.totalPermits","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-fixed-window-counter/total-permits.html","searchKeys":["totalPermits","open override val totalPermits: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.totalPermits"]},{"name":"open override val totalPermits: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.totalPermits","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-sliding-window-counter/total-permits.html","searchKeys":["totalPermits","open override val totalPermits: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.totalPermits"]},{"name":"open override val totalPermits: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.totalPermits","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-token-bucket/total-permits.html","searchKeys":["totalPermits","open override val totalPermits: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.totalPermits"]},{"name":"open suspend override fun acquire(permits: Int, timeout: Duration)","description":"kresil.ratelimiter.RateLimiter.acquire","location":"lib/kresil.ratelimiter/-rate-limiter/acquire.html","searchKeys":["acquire","open suspend override fun acquire(permits: Int, timeout: Duration)","kresil.ratelimiter.RateLimiter.acquire"]},{"name":"open suspend override fun onEvent(action: suspend (CircuitBreakerEvent) -> Unit): Job","description":"kresil.circuitbreaker.CircuitBreaker.onEvent","location":"lib/kresil.circuitbreaker/-circuit-breaker/on-event.html","searchKeys":["onEvent","open suspend override fun onEvent(action: suspend (CircuitBreakerEvent) -> Unit): Job","kresil.circuitbreaker.CircuitBreaker.onEvent"]},{"name":"open suspend override fun onEvent(action: suspend (Event) -> Unit): Job","description":"kresil.core.events.FlowEventListenerImpl.onEvent","location":"lib/kresil.core.events/-flow-event-listener-impl/on-event.html","searchKeys":["onEvent","open suspend override fun onEvent(action: suspend (Event) -> Unit): Job","kresil.core.events.FlowEventListenerImpl.onEvent"]},{"name":"open suspend override fun onEvent(action: suspend (RetryEvent) -> Unit): Job","description":"kresil.retry.Retry.onEvent","location":"lib/kresil.retry/-retry/on-event.html","searchKeys":["onEvent","open suspend override fun onEvent(action: suspend (RetryEvent) -> Unit): Job","kresil.retry.Retry.onEvent"]},{"name":"open suspend override fun release(permits: Int)","description":"kresil.ratelimiter.RateLimiter.release","location":"lib/kresil.ratelimiter/-rate-limiter/release.html","searchKeys":["release","open suspend override fun release(permits: Int)","kresil.ratelimiter.RateLimiter.release"]},{"name":"open val queueLength: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.queueLength","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/queue-length.html","searchKeys":["queueLength","open val queueLength: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.queueLength"]},{"name":"open val replenishmentPeriod: Duration","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.replenishmentPeriod","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/replenishment-period.html","searchKeys":["replenishmentPeriod","open val replenishmentPeriod: Duration","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.replenishmentPeriod"]},{"name":"open val totalPermits: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.totalPermits","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/total-permits.html","searchKeys":["totalPermits","open val totalPermits: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.totalPermits"]},{"name":"sealed class CircuitBreakerEvent","description":"kresil.circuitbreaker.event.CircuitBreakerEvent","location":"lib/kresil.circuitbreaker.event/-circuit-breaker-event/index.html","searchKeys":["CircuitBreakerEvent","sealed class CircuitBreakerEvent","kresil.circuitbreaker.event.CircuitBreakerEvent"]},{"name":"sealed class CircuitBreakerState","description":"kresil.circuitbreaker.state.CircuitBreakerState","location":"lib/kresil.circuitbreaker.state/-circuit-breaker-state/index.html","searchKeys":["CircuitBreakerState","sealed class CircuitBreakerState","kresil.circuitbreaker.state.CircuitBreakerState"]},{"name":"sealed class RateLimiterEvent","description":"kresil.ratelimiter.event.RateLimiterEvent","location":"lib/kresil.ratelimiter.event/-rate-limiter-event/index.html","searchKeys":["RateLimiterEvent","sealed class RateLimiterEvent","kresil.ratelimiter.event.RateLimiterEvent"]},{"name":"sealed class RateLimitingAlgorithm","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/index.html","searchKeys":["RateLimitingAlgorithm","sealed class RateLimitingAlgorithm","kresil.ratelimiter.algorithm.RateLimitingAlgorithm"]},{"name":"sealed class RetryEvent","description":"kresil.retry.event.RetryEvent","location":"lib/kresil.retry.event/-retry-event/index.html","searchKeys":["RetryEvent","sealed class RetryEvent","kresil.retry.event.RetryEvent"]},{"name":"sealed interface CircuitBreakerReducerEffect","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEffect","location":"lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-effect/index.html","searchKeys":["CircuitBreakerReducerEffect","sealed interface CircuitBreakerReducerEffect","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEffect"]},{"name":"suspend fun <R> executeOperation(block: Supplier<R>): R","description":"kresil.circuitbreaker.CircuitBreaker.executeOperation","location":"lib/kresil.circuitbreaker/-circuit-breaker/execute-operation.html","searchKeys":["executeOperation","suspend fun <R> executeOperation(block: Supplier<R>): R","kresil.circuitbreaker.CircuitBreaker.executeOperation"]},{"name":"suspend fun currentState(): CircuitBreakerState","description":"kresil.circuitbreaker.CircuitBreaker.currentState","location":"lib/kresil.circuitbreaker/-circuit-breaker/current-state.html","searchKeys":["currentState","suspend fun currentState(): CircuitBreakerState","kresil.circuitbreaker.CircuitBreaker.currentState"]},{"name":"suspend fun getRateLimiter(key: Key): RateLimiter","description":"kresil.ratelimiter.KeyedRateLimiter.getRateLimiter","location":"lib/kresil.ratelimiter/-keyed-rate-limiter/get-rate-limiter.html","searchKeys":["getRateLimiter","suspend fun getRateLimiter(key: Key): RateLimiter","kresil.ratelimiter.KeyedRateLimiter.getRateLimiter"]},{"name":"suspend fun onCallNotPermitted(action: suspend (CircuitBreakerEvent.CallNotPermitted) -> Unit): Job","description":"kresil.circuitbreaker.CircuitBreaker.onCallNotPermitted","location":"lib/kresil.circuitbreaker/-circuit-breaker/on-call-not-permitted.html","searchKeys":["onCallNotPermitted","suspend fun onCallNotPermitted(action: suspend (CircuitBreakerEvent.CallNotPermitted) -> Unit): Job","kresil.circuitbreaker.CircuitBreaker.onCallNotPermitted"]},{"name":"suspend fun onError(action: suspend (RetryEvent.RetryOnError) -> Unit): Job","description":"kresil.retry.Retry.onError","location":"lib/kresil.retry/-retry/on-error.html","searchKeys":["onError","suspend fun onError(action: suspend (RetryEvent.RetryOnError) -> Unit): Job","kresil.retry.Retry.onError"]},{"name":"suspend fun onIgnoredError(action: suspend (RetryEvent.RetryOnIgnoredError) -> Unit): Job","description":"kresil.retry.Retry.onIgnoredError","location":"lib/kresil.retry/-retry/on-ignored-error.html","searchKeys":["onIgnoredError","suspend fun onIgnoredError(action: suspend (RetryEvent.RetryOnIgnoredError) -> Unit): Job","kresil.retry.Retry.onIgnoredError"]},{"name":"suspend fun onOperationFailure(action: suspend (CircuitBreakerEvent.RecordedFailure) -> Unit): Job","description":"kresil.circuitbreaker.CircuitBreaker.onOperationFailure","location":"lib/kresil.circuitbreaker/-circuit-breaker/on-operation-failure.html","searchKeys":["onOperationFailure","suspend fun onOperationFailure(action: suspend (CircuitBreakerEvent.RecordedFailure) -> Unit): Job","kresil.circuitbreaker.CircuitBreaker.onOperationFailure"]},{"name":"suspend fun onOperationSuccess(action: suspend (CircuitBreakerEvent.RecordedSuccess) -> Unit): Job","description":"kresil.circuitbreaker.CircuitBreaker.onOperationSuccess","location":"lib/kresil.circuitbreaker/-circuit-breaker/on-operation-success.html","searchKeys":["onOperationSuccess","suspend fun onOperationSuccess(action: suspend (CircuitBreakerEvent.RecordedSuccess) -> Unit): Job","kresil.circuitbreaker.CircuitBreaker.onOperationSuccess"]},{"name":"suspend fun onReset(action: suspend (CircuitBreakerEvent.Reset) -> Unit): Job","description":"kresil.circuitbreaker.CircuitBreaker.onReset","location":"lib/kresil.circuitbreaker/-circuit-breaker/on-reset.html","searchKeys":["onReset","suspend fun onReset(action: suspend (CircuitBreakerEvent.Reset) -> Unit): Job","kresil.circuitbreaker.CircuitBreaker.onReset"]},{"name":"suspend fun onRetry(action: suspend (RetryEvent.RetryOnRetry) -> Unit): Job","description":"kresil.retry.Retry.onRetry","location":"lib/kresil.retry/-retry/on-retry.html","searchKeys":["onRetry","suspend fun onRetry(action: suspend (RetryEvent.RetryOnRetry) -> Unit): Job","kresil.retry.Retry.onRetry"]},{"name":"suspend fun onStateTransition(action: suspend (CircuitBreakerEvent.StateTransition) -> Unit): Job","description":"kresil.circuitbreaker.CircuitBreaker.onStateTransition","location":"lib/kresil.circuitbreaker/-circuit-breaker/on-state-transition.html","searchKeys":["onStateTransition","suspend fun onStateTransition(action: suspend (CircuitBreakerEvent.StateTransition) -> Unit): Job","kresil.circuitbreaker.CircuitBreaker.onStateTransition"]},{"name":"suspend fun onSuccess(action: suspend (RetryEvent.RetryOnSuccess) -> Unit): Job","description":"kresil.retry.Retry.onSuccess","location":"lib/kresil.retry/-retry/on-success.html","searchKeys":["onSuccess","suspend fun onSuccess(action: suspend (RetryEvent.RetryOnSuccess) -> Unit): Job","kresil.retry.Retry.onSuccess"]},{"name":"suspend fun recordFailure()","description":"kresil.circuitbreaker.CircuitBreaker.recordFailure","location":"lib/kresil.circuitbreaker/-circuit-breaker/record-failure.html","searchKeys":["recordFailure","suspend fun recordFailure()","kresil.circuitbreaker.CircuitBreaker.recordFailure"]},{"name":"suspend fun recordSuccess()","description":"kresil.circuitbreaker.CircuitBreaker.recordSuccess","location":"lib/kresil.circuitbreaker/-circuit-breaker/record-success.html","searchKeys":["recordSuccess","suspend fun recordSuccess()","kresil.circuitbreaker.CircuitBreaker.recordSuccess"]},{"name":"suspend fun removeRateLimiter(key: Key)","description":"kresil.ratelimiter.KeyedRateLimiter.removeRateLimiter","location":"lib/kresil.ratelimiter/-keyed-rate-limiter/remove-rate-limiter.html","searchKeys":["removeRateLimiter","suspend fun removeRateLimiter(key: Key)","kresil.ratelimiter.KeyedRateLimiter.removeRateLimiter"]},{"name":"suspend fun reset()","description":"kresil.circuitbreaker.CircuitBreaker.reset","location":"lib/kresil.circuitbreaker/-circuit-breaker/reset.html","searchKeys":["reset","suspend fun reset()","kresil.circuitbreaker.CircuitBreaker.reset"]},{"name":"suspend fun transitionToClosedState()","description":"kresil.circuitbreaker.CircuitBreaker.transitionToClosedState","location":"lib/kresil.circuitbreaker/-circuit-breaker/transition-to-closed-state.html","searchKeys":["transitionToClosedState","suspend fun transitionToClosedState()","kresil.circuitbreaker.CircuitBreaker.transitionToClosedState"]},{"name":"suspend fun transitionToHalfOpenState()","description":"kresil.circuitbreaker.CircuitBreaker.transitionToHalfOpenState","location":"lib/kresil.circuitbreaker/-circuit-breaker/transition-to-half-open-state.html","searchKeys":["transitionToHalfOpenState","suspend fun transitionToHalfOpenState()","kresil.circuitbreaker.CircuitBreaker.transitionToHalfOpenState"]},{"name":"suspend fun transitionToOpenState()","description":"kresil.circuitbreaker.CircuitBreaker.transitionToOpenState","location":"lib/kresil.circuitbreaker/-circuit-breaker/transition-to-open-state.html","searchKeys":["transitionToOpenState","suspend fun transitionToOpenState()","kresil.circuitbreaker.CircuitBreaker.transitionToOpenState"]},{"name":"suspend fun wire()","description":"kresil.circuitbreaker.CircuitBreaker.wire","location":"lib/kresil.circuitbreaker/-circuit-breaker/wire.html","searchKeys":["wire","suspend fun wire()","kresil.circuitbreaker.CircuitBreaker.wire"]},{"name":"typealias BiFunction<InputA, InputB, Result> = suspend (InputA, InputB) -> Result","description":"kresil.core.oper.BiFunction","location":"lib/kresil.core.oper/-bi-function/index.html","searchKeys":["BiFunction","typealias BiFunction<InputA, InputB, Result> = suspend (InputA, InputB) -> Result","kresil.core.oper.BiFunction"]},{"name":"typealias CtxBiFunction<Context, InputA, InputB, Result> = suspend (Context, InputA, InputB) -> Result","description":"kresil.core.oper.CtxBiFunction","location":"lib/kresil.core.oper/-ctx-bi-function/index.html","searchKeys":["CtxBiFunction","typealias CtxBiFunction<Context, InputA, InputB, Result> = suspend (Context, InputA, InputB) -> Result","kresil.core.oper.CtxBiFunction"]},{"name":"typealias CtxDelayStrategy<TContext> = suspend (attempt: Int, context: TContext) -> Duration","description":"kresil.core.delay.strategy.CtxDelayStrategy","location":"lib/kresil.core.delay.strategy/-ctx-delay-strategy/index.html","searchKeys":["CtxDelayStrategy","typealias CtxDelayStrategy<TContext> = suspend (attempt: Int, context: TContext) -> Duration","kresil.core.delay.strategy.CtxDelayStrategy"]},{"name":"typealias CtxFunction<Context, Input, Result> = suspend (Context, Input) -> Result","description":"kresil.core.oper.CtxFunction","location":"lib/kresil.core.oper/-ctx-function/index.html","searchKeys":["CtxFunction","typealias CtxFunction<Context, Input, Result> = suspend (Context, Input) -> Result","kresil.core.oper.CtxFunction"]},{"name":"typealias CtxSupplier<Context, Result> = suspend (Context) -> Result","description":"kresil.core.oper.CtxSupplier","location":"lib/kresil.core.oper/-ctx-supplier/index.html","searchKeys":["CtxSupplier","typealias CtxSupplier<Context, Result> = suspend (Context) -> Result","kresil.core.oper.CtxSupplier"]},{"name":"typealias DelayStrategy = suspend (attempt: Int) -> Duration","description":"kresil.core.delay.strategy.DelayStrategy","location":"lib/kresil.core.delay.strategy/-delay-strategy/index.html","searchKeys":["DelayStrategy","typealias DelayStrategy = suspend (attempt: Int) -> Duration","kresil.core.delay.strategy.DelayStrategy"]},{"name":"typealias ExceptionHandler = (Throwable) -> Throwable","description":"kresil.core.callbacks.ExceptionHandler","location":"lib/kresil.core.callbacks/-exception-handler/index.html","searchKeys":["ExceptionHandler","typealias ExceptionHandler = (Throwable) -> Throwable","kresil.core.callbacks.ExceptionHandler"]},{"name":"typealias Function<Input, Result> = suspend (Input) -> Result","description":"kresil.core.oper.Function","location":"lib/kresil.core.oper/-function/index.html","searchKeys":["Function","typealias Function<Input, Result> = suspend (Input) -> Result","kresil.core.oper.Function"]},{"name":"typealias OnExceptionPredicate = (Throwable) -> Boolean","description":"kresil.core.callbacks.OnExceptionPredicate","location":"lib/kresil.core.callbacks/-on-exception-predicate/index.html","searchKeys":["OnExceptionPredicate","typealias OnExceptionPredicate = (Throwable) -> Boolean","kresil.core.callbacks.OnExceptionPredicate"]},{"name":"typealias OnResultPredicate = (result: Any?) -> Boolean","description":"kresil.core.callbacks.OnResultPredicate","location":"lib/kresil.core.callbacks/-on-result-predicate/index.html","searchKeys":["OnResultPredicate","typealias OnResultPredicate = (result: Any?) -> Boolean","kresil.core.callbacks.OnResultPredicate"]},{"name":"typealias ResultMapper<ResultA, ResultB> = (ResultA?, Throwable?) -> ResultB?","description":"kresil.core.callbacks.ResultMapper","location":"lib/kresil.core.callbacks/-result-mapper/index.html","searchKeys":["ResultMapper","typealias ResultMapper<ResultA, ResultB> = (ResultA?, Throwable?) -> ResultB?","kresil.core.callbacks.ResultMapper"]},{"name":"typealias RetryDelayStrategy = CtxDelayStrategy<RetryDelayStrategyContext>","description":"kresil.retry.delay.RetryDelayStrategy","location":"lib/kresil.retry.delay/-retry-delay-strategy/index.html","searchKeys":["RetryDelayStrategy","typealias RetryDelayStrategy = CtxDelayStrategy<RetryDelayStrategyContext>","kresil.retry.delay.RetryDelayStrategy"]},{"name":"typealias Supplier<Result> = suspend () -> Result","description":"kresil.core.oper.Supplier","location":"lib/kresil.core.oper/-supplier/index.html","searchKeys":["Supplier","typealias Supplier<Result> = suspend () -> Result","kresil.core.oper.Supplier"]},{"name":"val algorithm: RateLimitingAlgorithm","description":"kresil.ratelimiter.config.RateLimiterConfig.algorithm","location":"lib/kresil.ratelimiter.config/-rate-limiter-config/algorithm.html","searchKeys":["algorithm","val algorithm: RateLimitingAlgorithm","kresil.ratelimiter.config.RateLimiterConfig.algorithm"]},{"name":"val attempt: Int","description":"kresil.retry.context.RetryContext.attempt","location":"lib/kresil.retry.context/-retry-context/attempt.html","searchKeys":["attempt","val attempt: Int","kresil.retry.context.RetryContext.attempt"]},{"name":"val attempt: Int","description":"kresil.retry.event.RetryEvent.RetryOnRetry.attempt","location":"lib/kresil.retry.event/-retry-event/-retry-on-retry/attempt.html","searchKeys":["attempt","val attempt: Int","kresil.retry.event.RetryEvent.RetryOnRetry.attempt"]},{"name":"val baseTimeoutDuration: Duration","description":"kresil.ratelimiter.config.RateLimiterConfig.baseTimeoutDuration","location":"lib/kresil.ratelimiter.config/-rate-limiter-config/base-timeout-duration.html","searchKeys":["baseTimeoutDuration","val baseTimeoutDuration: Duration","kresil.ratelimiter.config.RateLimiterConfig.baseTimeoutDuration"]},{"name":"val config: CircuitBreakerConfig","description":"kresil.circuitbreaker.CircuitBreaker.config","location":"lib/kresil.circuitbreaker/-circuit-breaker/config.html","searchKeys":["config","val config: CircuitBreakerConfig","kresil.circuitbreaker.CircuitBreaker.config"]},{"name":"val config: RateLimiterConfig","description":"kresil.ratelimiter.KeyedRateLimiter.config","location":"lib/kresil.ratelimiter/-keyed-rate-limiter/config.html","searchKeys":["config","val config: RateLimiterConfig","kresil.ratelimiter.KeyedRateLimiter.config"]},{"name":"val config: RateLimiterConfig","description":"kresil.ratelimiter.RateLimiter.config","location":"lib/kresil.ratelimiter/-rate-limiter/config.html","searchKeys":["config","val config: RateLimiterConfig","kresil.ratelimiter.RateLimiter.config"]},{"name":"val config: RetryConfig","description":"kresil.retry.Retry.config","location":"lib/kresil.retry/-retry/config.html","searchKeys":["config","val config: RetryConfig","kresil.retry.Retry.config"]},{"name":"val delayDuration: Duration","description":"kresil.circuitbreaker.state.CircuitBreakerState.Open.delayDuration","location":"lib/kresil.circuitbreaker.state/-circuit-breaker-state/-open/delay-duration.html","searchKeys":["delayDuration","val delayDuration: Duration","kresil.circuitbreaker.state.CircuitBreakerState.Open.delayDuration"]},{"name":"val delayStrategy: RetryDelayStrategy","description":"kresil.retry.config.RetryConfig.delayStrategy","location":"lib/kresil.retry.config/-retry-config/delay-strategy.html","searchKeys":["delayStrategy","val delayStrategy: RetryDelayStrategy","kresil.retry.config.RetryConfig.delayStrategy"]},{"name":"val delayStrategyInOpenState: CtxDelayStrategy<Unit>","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.delayStrategyInOpenState","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config/delay-strategy-in-open-state.html","searchKeys":["delayStrategyInOpenState","val delayStrategyInOpenState: CtxDelayStrategy<Unit>","kresil.circuitbreaker.config.CircuitBreakerConfig.delayStrategyInOpenState"]},{"name":"val entries: EnumEntries<CircuitBreakerReducerEvent>","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.entries","location":"lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/entries.html","searchKeys":["entries","val entries: EnumEntries<CircuitBreakerReducerEvent>","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.entries"]},{"name":"val entries: EnumEntries<SlidingWindowType>","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.entries","location":"lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window-type/entries.html","searchKeys":["entries","val entries: EnumEntries<SlidingWindowType>","kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.entries"]},{"name":"val exceptionHandler: ExceptionHandler","description":"kresil.retry.config.RetryConfig.exceptionHandler","location":"lib/kresil.retry.config/-retry-config/exception-handler.html","searchKeys":["exceptionHandler","val exceptionHandler: ExceptionHandler","kresil.retry.config.RetryConfig.exceptionHandler"]},{"name":"val failureRate: Double","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedFailure.failureRate","location":"lib/kresil.circuitbreaker.event/-circuit-breaker-event/-recorded-failure/failure-rate.html","searchKeys":["failureRate","val failureRate: Double","kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedFailure.failureRate"]},{"name":"val failureRate: Double","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedSuccess.failureRate","location":"lib/kresil.circuitbreaker.event/-circuit-breaker-event/-recorded-success/failure-rate.html","searchKeys":["failureRate","val failureRate: Double","kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedSuccess.failureRate"]},{"name":"val failureRateThreshold: Double","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.failureRateThreshold","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config/failure-rate-threshold.html","searchKeys":["failureRateThreshold","val failureRateThreshold: Double","kresil.circuitbreaker.config.CircuitBreakerConfig.failureRateThreshold"]},{"name":"val fromState: CircuitBreakerState","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.fromState","location":"lib/kresil.circuitbreaker.event/-circuit-breaker-event/-state-transition/from-state.html","searchKeys":["fromState","val fromState: CircuitBreakerState","kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.fromState"]},{"name":"val isTransitionEvent: Boolean","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.isTransitionEvent","location":"lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/is-transition-event.html","searchKeys":["isTransitionEvent","val isTransitionEvent: Boolean","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.isTransitionEvent"]},{"name":"val lastResult: Any? = null","description":"kresil.retry.delay.RetryDelayStrategyContext.lastResult","location":"lib/kresil.retry.delay/-retry-delay-strategy-context/last-result.html","searchKeys":["lastResult","val lastResult: Any? = null","kresil.retry.delay.RetryDelayStrategyContext.lastResult"]},{"name":"val lastThrowable: Throwable? = null","description":"kresil.retry.delay.RetryDelayStrategyContext.lastThrowable","location":"lib/kresil.retry.delay/-retry-delay-strategy-context/last-throwable.html","searchKeys":["lastThrowable","val lastThrowable: Throwable? = null","kresil.retry.delay.RetryDelayStrategyContext.lastThrowable"]},{"name":"val manual: Boolean = false","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.manual","location":"lib/kresil.circuitbreaker.event/-circuit-breaker-event/-state-transition/manual.html","searchKeys":["manual","val manual: Boolean = false","kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.manual"]},{"name":"val maxAttempts: Int","description":"kresil.retry.config.RetryConfig.maxAttempts","location":"lib/kresil.retry.config/-retry-config/max-attempts.html","searchKeys":["maxAttempts","val maxAttempts: Int","kresil.retry.config.RetryConfig.maxAttempts"]},{"name":"val maxWaitDurationInHalfOpenState: Duration","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.maxWaitDurationInHalfOpenState","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config/max-wait-duration-in-half-open-state.html","searchKeys":["maxWaitDurationInHalfOpenState","val maxWaitDurationInHalfOpenState: Duration","kresil.circuitbreaker.config.CircuitBreakerConfig.maxWaitDurationInHalfOpenState"]},{"name":"val minimumThroughput: Int","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindow.minimumThroughput","location":"lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window/minimum-throughput.html","searchKeys":["minimumThroughput","val minimumThroughput: Int","kresil.circuitbreaker.state.slidingwindow.SlidingWindow.minimumThroughput"]},{"name":"val nrOfCallsAttempted: Int","description":"kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.nrOfCallsAttempted","location":"lib/kresil.circuitbreaker.state/-circuit-breaker-state/-half-open/nr-of-calls-attempted.html","searchKeys":["nrOfCallsAttempted","val nrOfCallsAttempted: Int","kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.nrOfCallsAttempted"]},{"name":"val nrOfTransitionsToOpenStateInACycle: Int","description":"kresil.circuitbreaker.state.CircuitBreakerState.Open.nrOfTransitionsToOpenStateInACycle","location":"lib/kresil.circuitbreaker.state/-circuit-breaker-state/-open/nr-of-transitions-to-open-state-in-a-cycle.html","searchKeys":["nrOfTransitionsToOpenStateInACycle","val nrOfTransitionsToOpenStateInACycle: Int","kresil.circuitbreaker.state.CircuitBreakerState.Open.nrOfTransitionsToOpenStateInACycle"]},{"name":"val onRejected: ExceptionHandler","description":"kresil.ratelimiter.config.RateLimiterConfig.onRejected","location":"lib/kresil.ratelimiter.config/-rate-limiter-config/on-rejected.html","searchKeys":["onRejected","val onRejected: ExceptionHandler","kresil.ratelimiter.config.RateLimiterConfig.onRejected"]},{"name":"val permits: Int","description":"kresil.ratelimiter.event.RateLimiterEvent.Queued.permits","location":"lib/kresil.ratelimiter.event/-rate-limiter-event/-queued/permits.html","searchKeys":["permits","val permits: Int","kresil.ratelimiter.event.RateLimiterEvent.Queued.permits"]},{"name":"val permits: Int","description":"kresil.ratelimiter.event.RateLimiterEvent.Reject.permits","location":"lib/kresil.ratelimiter.event/-rate-limiter-event/-reject/permits.html","searchKeys":["permits","val permits: Int","kresil.ratelimiter.event.RateLimiterEvent.Reject.permits"]},{"name":"val permits: Int","description":"kresil.ratelimiter.event.RateLimiterEvent.Success.permits","location":"lib/kresil.ratelimiter.event/-rate-limiter-event/-success/permits.html","searchKeys":["permits","val permits: Int","kresil.ratelimiter.event.RateLimiterEvent.Success.permits"]},{"name":"val permittedNumberOfCallsInHalfOpenState: Int","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.permittedNumberOfCallsInHalfOpenState","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config/permitted-number-of-calls-in-half-open-state.html","searchKeys":["permittedNumberOfCallsInHalfOpenState","val permittedNumberOfCallsInHalfOpenState: Int","kresil.circuitbreaker.config.CircuitBreakerConfig.permittedNumberOfCallsInHalfOpenState"]},{"name":"val permittedRetryAttempts: Int","description":"kresil.retry.config.RetryConfig.permittedRetryAttempts","location":"lib/kresil.retry.config/-retry-config/permitted-retry-attempts.html","searchKeys":["permittedRetryAttempts","val permittedRetryAttempts: Int","kresil.retry.config.RetryConfig.permittedRetryAttempts"]},{"name":"val recordExceptionPredicate: OnExceptionPredicate","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.recordExceptionPredicate","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config/record-exception-predicate.html","searchKeys":["recordExceptionPredicate","val recordExceptionPredicate: OnExceptionPredicate","kresil.circuitbreaker.config.CircuitBreakerConfig.recordExceptionPredicate"]},{"name":"val recordResultPredicate: OnResultPredicate","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.recordResultPredicate","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config/record-result-predicate.html","searchKeys":["recordResultPredicate","val recordResultPredicate: OnResultPredicate","kresil.circuitbreaker.config.CircuitBreakerConfig.recordResultPredicate"]},{"name":"val retryAfter: Duration","description":"kresil.ratelimiter.event.RateLimiterEvent.Reject.retryAfter","location":"lib/kresil.ratelimiter.event/-rate-limiter-event/-reject/retry-after.html","searchKeys":["retryAfter","val retryAfter: Duration","kresil.ratelimiter.event.RateLimiterEvent.Reject.retryAfter"]},{"name":"val retryAfter: Duration","description":"kresil.ratelimiter.exceptions.RateLimiterRejectedException.retryAfter","location":"lib/kresil.ratelimiter.exceptions/-rate-limiter-rejected-exception/retry-after.html","searchKeys":["retryAfter","val retryAfter: Duration","kresil.ratelimiter.exceptions.RateLimiterRejectedException.retryAfter"]},{"name":"val retryOnResultPredicate: OnResultPredicate","description":"kresil.retry.config.RetryConfig.retryOnResultPredicate","location":"lib/kresil.retry.config/-retry-config/retry-on-result-predicate.html","searchKeys":["retryOnResultPredicate","val retryOnResultPredicate: OnResultPredicate","kresil.retry.config.RetryConfig.retryOnResultPredicate"]},{"name":"val retryPredicate: OnExceptionPredicate","description":"kresil.retry.config.RetryConfig.retryPredicate","location":"lib/kresil.retry.config/-retry-config/retry-predicate.html","searchKeys":["retryPredicate","val retryPredicate: OnExceptionPredicate","kresil.retry.config.RetryConfig.retryPredicate"]},{"name":"val segments: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.segments","location":"lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-sliding-window-counter/segments.html","searchKeys":["segments","val segments: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.segments"]},{"name":"val size: Int","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindow.size","location":"lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window/size.html","searchKeys":["size","val size: Int","kresil.circuitbreaker.state.slidingwindow.SlidingWindow.size"]},{"name":"val slidingWindow: SlidingWindow","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.slidingWindow","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config/sliding-window.html","searchKeys":["slidingWindow","val slidingWindow: SlidingWindow","kresil.circuitbreaker.config.CircuitBreakerConfig.slidingWindow"]},{"name":"val throwable: Throwable","description":"kresil.retry.event.RetryEvent.RetryOnError.throwable","location":"lib/kresil.retry.event/-retry-event/-retry-on-error/throwable.html","searchKeys":["throwable","val throwable: Throwable","kresil.retry.event.RetryEvent.RetryOnError.throwable"]},{"name":"val throwable: Throwable","description":"kresil.retry.event.RetryEvent.RetryOnIgnoredError.throwable","location":"lib/kresil.retry.event/-retry-event/-retry-on-ignored-error/throwable.html","searchKeys":["throwable","val throwable: Throwable","kresil.retry.event.RetryEvent.RetryOnIgnoredError.throwable"]},{"name":"val timeout: Duration","description":"kresil.ratelimiter.event.RateLimiterEvent.Queued.timeout","location":"lib/kresil.ratelimiter.event/-rate-limiter-event/-queued/timeout.html","searchKeys":["timeout","val timeout: Duration","kresil.ratelimiter.event.RateLimiterEvent.Queued.timeout"]},{"name":"val toState: CircuitBreakerState","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.toState","location":"lib/kresil.circuitbreaker.event/-circuit-breaker-event/-state-transition/to-state.html","searchKeys":["toState","val toState: CircuitBreakerState","kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.toState"]},{"name":"val type: SlidingWindowType","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindow.type","location":"lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window/type.html","searchKeys":["type","val type: SlidingWindowType","kresil.circuitbreaker.state.slidingwindow.SlidingWindow.type"]},{"name":"var baseTimeoutDuration: Duration","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.baseTimeoutDuration","location":"lib/kresil.ratelimiter.config/-rate-limiter-config-builder/base-timeout-duration.html","searchKeys":["baseTimeoutDuration","var baseTimeoutDuration: Duration","kresil.ratelimiter.config.RateLimiterConfigBuilder.baseTimeoutDuration"]},{"name":"var failureRateThreshold: Double","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.failureRateThreshold","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/failure-rate-threshold.html","searchKeys":["failureRateThreshold","var failureRateThreshold: Double","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.failureRateThreshold"]},{"name":"var maxAttempts: Int","description":"kresil.retry.config.RetryConfigBuilder.maxAttempts","location":"lib/kresil.retry.config/-retry-config-builder/max-attempts.html","searchKeys":["maxAttempts","var maxAttempts: Int","kresil.retry.config.RetryConfigBuilder.maxAttempts"]},{"name":"var maxWaitDurationInHalfOpenState: Duration","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.maxWaitDurationInHalfOpenState","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/max-wait-duration-in-half-open-state.html","searchKeys":["maxWaitDurationInHalfOpenState","var maxWaitDurationInHalfOpenState: Duration","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.maxWaitDurationInHalfOpenState"]},{"name":"var permittedNumberOfCallsInHalfOpenState: Int","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.permittedNumberOfCallsInHalfOpenState","location":"lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/permitted-number-of-calls-in-half-open-state.html","searchKeys":["permittedNumberOfCallsInHalfOpenState","var permittedNumberOfCallsInHalfOpenState: Int","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.permittedNumberOfCallsInHalfOpenState"]}]
