[{"name":"class CircuitBreakerPluginConfigBuilder(val baseConfig: CircuitBreakerPluginConfig) : ConfigBuilder<CircuitBreakerPluginConfig> ","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/index.html","searchKeys":["CircuitBreakerPluginConfigBuilder","class CircuitBreakerPluginConfigBuilder(val baseConfig: CircuitBreakerPluginConfig) : ConfigBuilder<CircuitBreakerPluginConfig> ","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder"]},{"name":"class RetryPluginConfigBuilder(val baseConfig: RetryPluginConfig) : ConfigBuilder<RetryPluginConfig> ","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/index.html","searchKeys":["RetryPluginConfigBuilder","class RetryPluginConfigBuilder(val baseConfig: RetryPluginConfig) : ConfigBuilder<RetryPluginConfig> ","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder"]},{"name":"constructor()","description":"kresil.ktor.client.plugins.retry.exceptions.RetryOnCallException.RetryOnCallException","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.exceptions/-retry-on-call-exception/-retry-on-call-exception.html","searchKeys":["RetryOnCallException","constructor()","kresil.ktor.client.plugins.retry.exceptions.RetryOnCallException.RetryOnCallException"]},{"name":"constructor(baseConfig: CircuitBreakerPluginConfig)","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.CircuitBreakerPluginConfigBuilder","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/-circuit-breaker-plugin-config-builder.html","searchKeys":["CircuitBreakerPluginConfigBuilder","constructor(baseConfig: CircuitBreakerPluginConfig)","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.CircuitBreakerPluginConfigBuilder"]},{"name":"constructor(baseConfig: RetryPluginConfig)","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.RetryPluginConfigBuilder","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/-retry-plugin-config-builder.html","searchKeys":["RetryPluginConfigBuilder","constructor(baseConfig: RetryPluginConfig)","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.RetryPluginConfigBuilder"]},{"name":"constructor(circuitBreakerConfig: CircuitBreakerConfig, recordResponseAsFailurePredicate: RecordResponsePredicate)","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfig.CircuitBreakerPluginConfig","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config/-circuit-breaker-plugin-config.html","searchKeys":["CircuitBreakerPluginConfig","constructor(circuitBreakerConfig: CircuitBreakerConfig, recordResponseAsFailurePredicate: RecordResponsePredicate)","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfig.CircuitBreakerPluginConfig"]},{"name":"constructor(retryConfig: RetryConfig, modifyRequestOnRetry: ModifyRequestOnRetry, retryOnCallPredicate: RetryOnCallPredicate)","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfig.RetryPluginConfig","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config/-retry-plugin-config.html","searchKeys":["RetryPluginConfig","constructor(retryConfig: RetryConfig, modifyRequestOnRetry: ModifyRequestOnRetry, retryOnCallPredicate: RetryOnCallPredicate)","kresil.ktor.client.plugins.retry.config.RetryPluginConfig.RetryPluginConfig"]},{"name":"data class CircuitBreakerPluginConfig(val circuitBreakerConfig: CircuitBreakerConfig, val recordResponseAsFailurePredicate: RecordResponsePredicate)","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfig","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config/index.html","searchKeys":["CircuitBreakerPluginConfig","data class CircuitBreakerPluginConfig(val circuitBreakerConfig: CircuitBreakerConfig, val recordResponseAsFailurePredicate: RecordResponsePredicate)","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfig"]},{"name":"data class RetryPluginConfig(val retryConfig: RetryConfig, val modifyRequestOnRetry: ModifyRequestOnRetry, val retryOnCallPredicate: RetryOnCallPredicate)","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfig","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config/index.html","searchKeys":["RetryPluginConfig","data class RetryPluginConfig(val retryConfig: RetryConfig, val modifyRequestOnRetry: ModifyRequestOnRetry, val retryOnCallPredicate: RetryOnCallPredicate)","kresil.ktor.client.plugins.retry.config.RetryPluginConfig"]},{"name":"fun HttpRequestBuilder.kRetry(disable: Boolean = false, configure: RetryPluginConfigBuilder.() -> Unit = {})","description":"kresil.ktor.client.plugins.retry.kRetry","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry/k-retry.html","searchKeys":["kRetry","fun HttpRequestBuilder.kRetry(disable: Boolean = false, configure: RetryPluginConfigBuilder.() -> Unit = {})","kresil.ktor.client.plugins.retry.kRetry"]},{"name":"fun constantDelay(duration: Duration, randomizationFactor: Double = 0.0)","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.constantDelay","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/constant-delay.html","searchKeys":["constantDelay","fun constantDelay(duration: Duration, randomizationFactor: Double = 0.0)","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.constantDelay"]},{"name":"fun constantDelayInOpenState(delay: Duration)","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.constantDelayInOpenState","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/constant-delay-in-open-state.html","searchKeys":["constantDelayInOpenState","fun constantDelayInOpenState(delay: Duration)","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.constantDelayInOpenState"]},{"name":"fun customDelay(delayStrategy: RetryDelayStrategy)","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.customDelay","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/custom-delay.html","searchKeys":["customDelay","fun customDelay(delayStrategy: RetryDelayStrategy)","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.customDelay"]},{"name":"fun customDelayInOpenState(delayStrategyInOpenState: DelayStrategy)","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.customDelayInOpenState","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/custom-delay-in-open-state.html","searchKeys":["customDelayInOpenState","fun customDelayInOpenState(delayStrategyInOpenState: DelayStrategy)","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.customDelayInOpenState"]},{"name":"fun customDelayProvider(delayProvider: RetryCtxDelayProvider)","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.customDelayProvider","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/custom-delay-provider.html","searchKeys":["customDelayProvider","fun customDelayProvider(delayProvider: RetryCtxDelayProvider)","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.customDelayProvider"]},{"name":"fun customDelayProviderInOpenState(delayProvider: DelayProvider)","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.customDelayProviderInOpenState","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/custom-delay-provider-in-open-state.html","searchKeys":["customDelayProviderInOpenState","fun customDelayProviderInOpenState(delayProvider: DelayProvider)","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.customDelayProviderInOpenState"]},{"name":"fun disableRetry()","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.disableRetry","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/disable-retry.html","searchKeys":["disableRetry","fun disableRetry()","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.disableRetry"]},{"name":"fun exponentialDelay(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 2.0, maxDelay: Duration = 1.minutes, randomizationFactor: Double = 0.0)","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.exponentialDelay","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/exponential-delay.html","searchKeys":["exponentialDelay","fun exponentialDelay(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 2.0, maxDelay: Duration = 1.minutes, randomizationFactor: Double = 0.0)","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.exponentialDelay"]},{"name":"fun exponentialDelayInOpenState(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 2.0, maxDelay: Duration = 1.minutes)","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.exponentialDelayInOpenState","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/exponential-delay-in-open-state.html","searchKeys":["exponentialDelayInOpenState","fun exponentialDelayInOpenState(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 2.0, maxDelay: Duration = 1.minutes)","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.exponentialDelayInOpenState"]},{"name":"fun linearDelay(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 1.0, maxDelay: Duration = 1.minutes, randomizationFactor: Double = 0.0)","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.linearDelay","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/linear-delay.html","searchKeys":["linearDelay","fun linearDelay(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 1.0, maxDelay: Duration = 1.minutes, randomizationFactor: Double = 0.0)","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.linearDelay"]},{"name":"fun linearDelayInOpenState(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 1.0, maxDelay: Duration = 1.minutes)","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.linearDelayInOpenState","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/linear-delay-in-open-state.html","searchKeys":["linearDelayInOpenState","fun linearDelayInOpenState(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 1.0, maxDelay: Duration = 1.minutes)","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.linearDelayInOpenState"]},{"name":"fun modifyRequestOnRetry(block: (builder: HttpRequestBuilder, attempt: Int) -> Unit)","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.modifyRequestOnRetry","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/modify-request-on-retry.html","searchKeys":["modifyRequestOnRetry","fun modifyRequestOnRetry(block: (builder: HttpRequestBuilder, attempt: Int) -> Unit)","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.modifyRequestOnRetry"]},{"name":"fun noDelay()","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.noDelay","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/no-delay.html","searchKeys":["noDelay","fun noDelay()","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.noDelay"]},{"name":"fun noDelayInOpenState()","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.noDelayInOpenState","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/no-delay-in-open-state.html","searchKeys":["noDelayInOpenState","fun noDelayInOpenState()","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.noDelayInOpenState"]},{"name":"fun recordFailure(predicate: RecordResponsePredicate)","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.recordFailure","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/record-failure.html","searchKeys":["recordFailure","fun recordFailure(predicate: RecordResponsePredicate)","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.recordFailure"]},{"name":"fun recordFailureOnServerErrors()","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.recordFailureOnServerErrors","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/record-failure-on-server-errors.html","searchKeys":["recordFailureOnServerErrors","fun recordFailureOnServerErrors()","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.recordFailureOnServerErrors"]},{"name":"fun retryOnCall(block: (request: HttpRequest, response: HttpResponse) -> Boolean)","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryOnCall","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/retry-on-call.html","searchKeys":["retryOnCall","fun retryOnCall(block: (request: HttpRequest, response: HttpResponse) -> Boolean)","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryOnCall"]},{"name":"fun retryOnException(predicate: OnExceptionPredicate)","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryOnException","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/retry-on-exception.html","searchKeys":["retryOnException","fun retryOnException(predicate: OnExceptionPredicate)","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryOnException"]},{"name":"fun retryOnServerErrors()","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryOnServerErrors","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/retry-on-server-errors.html","searchKeys":["retryOnServerErrors","fun retryOnServerErrors()","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryOnServerErrors"]},{"name":"fun retryOnServerErrorsIfIdempotent(range: IntRange = 500..599)","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryOnServerErrorsIfIdempotent","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/retry-on-server-errors-if-idempotent.html","searchKeys":["retryOnServerErrorsIfIdempotent","fun retryOnServerErrorsIfIdempotent(range: IntRange = 500..599)","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryOnServerErrorsIfIdempotent"]},{"name":"fun retryOnTimeout()","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryOnTimeout","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/retry-on-timeout.html","searchKeys":["retryOnTimeout","fun retryOnTimeout()","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryOnTimeout"]},{"name":"fun slidingWindow(size: Int, minimumThroughput: Int = 100, type: SlidingWindowType = COUNT_BASED)","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.slidingWindow","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/sliding-window.html","searchKeys":["slidingWindow","fun slidingWindow(size: Int, minimumThroughput: Int = 100, type: SlidingWindowType = COUNT_BASED)","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.slidingWindow"]},{"name":"internal class RetryOnCallException : Exception","description":"kresil.ktor.client.plugins.retry.exceptions.RetryOnCallException","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.exceptions/-retry-on-call-exception/index.html","searchKeys":["RetryOnCallException","internal class RetryOnCallException : Exception","kresil.ktor.client.plugins.retry.exceptions.RetryOnCallException"]},{"name":"internal typealias ModifyRequestOnRetry = (HttpRequestBuilder, attempt: Int) -> Unit","description":"kresil.ktor.client.plugins.retry.config.ModifyRequestOnRetry","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-modify-request-on-retry/index.html","searchKeys":["ModifyRequestOnRetry","internal typealias ModifyRequestOnRetry = (HttpRequestBuilder, attempt: Int) -> Unit","kresil.ktor.client.plugins.retry.config.ModifyRequestOnRetry"]},{"name":"internal typealias RecordResponsePredicate = (HttpResponse) -> Boolean","description":"kresil.ktor.client.plugins.circuitbreaker.config.RecordResponsePredicate","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-record-response-predicate/index.html","searchKeys":["RecordResponsePredicate","internal typealias RecordResponsePredicate = (HttpResponse) -> Boolean","kresil.ktor.client.plugins.circuitbreaker.config.RecordResponsePredicate"]},{"name":"internal typealias RetryOnCallPredicate = (HttpRequest, HttpResponse) -> Boolean","description":"kresil.ktor.client.plugins.retry.config.RetryOnCallPredicate","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-on-call-predicate/index.html","searchKeys":["RetryOnCallPredicate","internal typealias RetryOnCallPredicate = (HttpRequest, HttpResponse) -> Boolean","kresil.ktor.client.plugins.retry.config.RetryOnCallPredicate"]},{"name":"open override fun build(): CircuitBreakerPluginConfig","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.build","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/build.html","searchKeys":["build","open override fun build(): CircuitBreakerPluginConfig","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.build"]},{"name":"open override fun build(): RetryPluginConfig","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.build","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/build.html","searchKeys":["build","open override fun build(): RetryPluginConfig","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.build"]},{"name":"open override val baseConfig: CircuitBreakerPluginConfig","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.baseConfig","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/base-config.html","searchKeys":["baseConfig","open override val baseConfig: CircuitBreakerPluginConfig","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.baseConfig"]},{"name":"open override val baseConfig: RetryPluginConfig","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.baseConfig","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/base-config.html","searchKeys":["baseConfig","open override val baseConfig: RetryPluginConfig","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.baseConfig"]},{"name":"private fun Throwable.isTimeoutException(): Boolean","description":"kresil.ktor.client.plugins.retry.config.isTimeoutException","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/is-timeout-exception.html","searchKeys":["isTimeoutException","private fun Throwable.isTimeoutException(): Boolean","kresil.ktor.client.plugins.retry.config.isTimeoutException"]},{"name":"private fun aggregateRetryPredicates(throwable: Throwable): Boolean","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.aggregateRetryPredicates","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/aggregate-retry-predicates.html","searchKeys":["aggregateRetryPredicates","private fun aggregateRetryPredicates(throwable: Throwable): Boolean","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.aggregateRetryPredicates"]},{"name":"private fun copyRequestAndPropagateCompletion(request: HttpRequestBuilder): HttpRequestBuilder","description":"kresil.ktor.client.plugins.retry.copyRequestAndPropagateCompletion","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry/copy-request-and-propagate-completion.html","searchKeys":["copyRequestAndPropagateCompletion","private fun copyRequestAndPropagateCompletion(request: HttpRequestBuilder): HttpRequestBuilder","kresil.ktor.client.plugins.retry.copyRequestAndPropagateCompletion"]},{"name":"private lateinit var globalConfig: RetryPluginConfig","description":"kresil.ktor.client.plugins.retry.globalConfig","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry/global-config.html","searchKeys":["globalConfig","private lateinit var globalConfig: RetryPluginConfig","kresil.ktor.client.plugins.retry.globalConfig"]},{"name":"private val RetryPluginConfigBuilderPerRequestAttributeKey: AttributeKey<RetryPluginConfigBuilder>","description":"kresil.ktor.client.plugins.retry.RetryPluginConfigBuilderPerRequestAttributeKey","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry/-retry-plugin-config-builder-per-request-attribute-key.html","searchKeys":["RetryPluginConfigBuilderPerRequestAttributeKey","private val RetryPluginConfigBuilderPerRequestAttributeKey: AttributeKey<RetryPluginConfigBuilder>","kresil.ktor.client.plugins.retry.RetryPluginConfigBuilderPerRequestAttributeKey"]},{"name":"private val baseCbreakerConfig: CircuitBreakerConfig","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.baseCbreakerConfig","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/base-cbreaker-config.html","searchKeys":["baseCbreakerConfig","private val baseCbreakerConfig: CircuitBreakerConfig","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.baseCbreakerConfig"]},{"name":"private val cbreakerConfigBuilder: CircuitBreakerConfigBuilder","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.cbreakerConfigBuilder","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/cbreaker-config-builder.html","searchKeys":["cbreakerConfigBuilder","private val cbreakerConfigBuilder: CircuitBreakerConfigBuilder","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.cbreakerConfigBuilder"]},{"name":"private val defaultCircuitBreakerPluginConfig: CircuitBreakerPluginConfig","description":"kresil.ktor.client.plugins.circuitbreaker.defaultCircuitBreakerPluginConfig","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker/default-circuit-breaker-plugin-config.html","searchKeys":["defaultCircuitBreakerPluginConfig","private val defaultCircuitBreakerPluginConfig: CircuitBreakerPluginConfig","kresil.ktor.client.plugins.circuitbreaker.defaultCircuitBreakerPluginConfig"]},{"name":"private val defaultRetryPluginConfig: RetryPluginConfig","description":"kresil.ktor.client.plugins.retry.defaultRetryPluginConfig","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry/default-retry-plugin-config.html","searchKeys":["defaultRetryPluginConfig","private val defaultRetryPluginConfig: RetryPluginConfig","kresil.ktor.client.plugins.retry.defaultRetryPluginConfig"]},{"name":"private val logger: Logger","description":"kresil.ktor.client.plugins.circuitbreaker.logger","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker/logger.html","searchKeys":["logger","private val logger: Logger","kresil.ktor.client.plugins.circuitbreaker.logger"]},{"name":"private val logger: Logger","description":"kresil.ktor.client.plugins.retry.logger","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry/logger.html","searchKeys":["logger","private val logger: Logger","kresil.ktor.client.plugins.retry.logger"]},{"name":"private val retryConfigBuilder: RetryConfigBuilder","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryConfigBuilder","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/retry-config-builder.html","searchKeys":["retryConfigBuilder","private val retryConfigBuilder: RetryConfigBuilder","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryConfigBuilder"]},{"name":"private var modifyRequest: ModifyRequestOnRetry","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.modifyRequest","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/modify-request.html","searchKeys":["modifyRequest","private var modifyRequest: ModifyRequestOnRetry","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.modifyRequest"]},{"name":"private var recordResponseAsFailurePredicate: RecordResponsePredicate","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.recordResponseAsFailurePredicate","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/record-response-as-failure-predicate.html","searchKeys":["recordResponseAsFailurePredicate","private var recordResponseAsFailurePredicate: RecordResponsePredicate","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.recordResponseAsFailurePredicate"]},{"name":"private var retryOnCallPredicate: RetryOnCallPredicate","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryOnCallPredicate","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/retry-on-call-predicate.html","searchKeys":["retryOnCallPredicate","private var retryOnCallPredicate: RetryOnCallPredicate","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryOnCallPredicate"]},{"name":"private var retryPredicate: OnExceptionPredicate","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryPredicate","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/retry-predicate.html","searchKeys":["retryPredicate","private var retryPredicate: OnExceptionPredicate","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.retryPredicate"]},{"name":"val KresilCircuitBreakerPlugin: ClientPlugin<CircuitBreakerPluginConfigBuilder>","description":"kresil.ktor.client.plugins.circuitbreaker.KresilCircuitBreakerPlugin","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker/-kresil-circuit-breaker-plugin.html","searchKeys":["KresilCircuitBreakerPlugin","val KresilCircuitBreakerPlugin: ClientPlugin<CircuitBreakerPluginConfigBuilder>","kresil.ktor.client.plugins.circuitbreaker.KresilCircuitBreakerPlugin"]},{"name":"val KresilRetryPlugin: ClientPlugin<RetryPluginConfigBuilder>","description":"kresil.ktor.client.plugins.retry.KresilRetryPlugin","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry/-kresil-retry-plugin.html","searchKeys":["KresilRetryPlugin","val KresilRetryPlugin: ClientPlugin<RetryPluginConfigBuilder>","kresil.ktor.client.plugins.retry.KresilRetryPlugin"]},{"name":"val circuitBreakerConfig: CircuitBreakerConfig","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfig.circuitBreakerConfig","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config/circuit-breaker-config.html","searchKeys":["circuitBreakerConfig","val circuitBreakerConfig: CircuitBreakerConfig","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfig.circuitBreakerConfig"]},{"name":"val modifyRequestOnRetry: ModifyRequestOnRetry","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfig.modifyRequestOnRetry","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config/modify-request-on-retry.html","searchKeys":["modifyRequestOnRetry","val modifyRequestOnRetry: ModifyRequestOnRetry","kresil.ktor.client.plugins.retry.config.RetryPluginConfig.modifyRequestOnRetry"]},{"name":"val recordResponseAsFailurePredicate: RecordResponsePredicate","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfig.recordResponseAsFailurePredicate","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config/record-response-as-failure-predicate.html","searchKeys":["recordResponseAsFailurePredicate","val recordResponseAsFailurePredicate: RecordResponsePredicate","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfig.recordResponseAsFailurePredicate"]},{"name":"val retryConfig: RetryConfig","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfig.retryConfig","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config/retry-config.html","searchKeys":["retryConfig","val retryConfig: RetryConfig","kresil.ktor.client.plugins.retry.config.RetryPluginConfig.retryConfig"]},{"name":"val retryOnCallPredicate: RetryOnCallPredicate","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfig.retryOnCallPredicate","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config/retry-on-call-predicate.html","searchKeys":["retryOnCallPredicate","val retryOnCallPredicate: RetryOnCallPredicate","kresil.ktor.client.plugins.retry.config.RetryPluginConfig.retryOnCallPredicate"]},{"name":"var failureRateThreshold: Double","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.failureRateThreshold","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/failure-rate-threshold.html","searchKeys":["failureRateThreshold","var failureRateThreshold: Double","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.failureRateThreshold"]},{"name":"var maxAttempts: Int","description":"kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.maxAttempts","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.retry.config/-retry-plugin-config-builder/max-attempts.html","searchKeys":["maxAttempts","var maxAttempts: Int","kresil.ktor.client.plugins.retry.config.RetryPluginConfigBuilder.maxAttempts"]},{"name":"var maxWaitDurationInHalfOpenState: Duration","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.maxWaitDurationInHalfOpenState","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/max-wait-duration-in-half-open-state.html","searchKeys":["maxWaitDurationInHalfOpenState","var maxWaitDurationInHalfOpenState: Duration","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.maxWaitDurationInHalfOpenState"]},{"name":"var permittedNumberOfCallsInHalfOpenState: Int","description":"kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.permittedNumberOfCallsInHalfOpenState","location":"ktor-client-plugins/shared/kresil.ktor.client.plugins.circuitbreaker.config/-circuit-breaker-plugin-config-builder/permitted-number-of-calls-in-half-open-state.html","searchKeys":["permittedNumberOfCallsInHalfOpenState","var permittedNumberOfCallsInHalfOpenState: Int","kresil.ktor.client.plugins.circuitbreaker.config.CircuitBreakerPluginConfigBuilder.permittedNumberOfCallsInHalfOpenState"]},{"name":"class RateLimiterPluginConfigBuilder(val baseConfig: RateLimiterPluginConfig)","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/index.html","searchKeys":["RateLimiterPluginConfigBuilder","class RateLimiterPluginConfigBuilder(val baseConfig: RateLimiterPluginConfig)","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder"]},{"name":"constructor(baseConfig: RateLimiterPluginConfig)","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.RateLimiterPluginConfigBuilder","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/-rate-limiter-plugin-config-builder.html","searchKeys":["RateLimiterPluginConfigBuilder","constructor(baseConfig: RateLimiterPluginConfig)","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.RateLimiterPluginConfigBuilder"]},{"name":"constructor(rateLimiter: <Error class: unknown class>, permits: Int, key: Any)","description":"kresil.ktor.server.plugins.ratelimiter.RateLimiterAcquisitionData.RateLimiterAcquisitionData","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter/-rate-limiter-acquisition-data/-rate-limiter-acquisition-data.html","searchKeys":["RateLimiterAcquisitionData","constructor(rateLimiter: <Error class: unknown class>, permits: Int, key: Any)","kresil.ktor.server.plugins.ratelimiter.RateLimiterAcquisitionData.RateLimiterAcquisitionData"]},{"name":"constructor(rateLimiterConfig: <Error class: unknown class>, keyResolver: KeyResolver, onRejectedCall: OnRejectedCall, onSuccessCall: OnSuccessCall, excludePredicate: ExcludePredicate, interceptPhase: <Error class: unknown class><suspend (<Error class: unknown class>) -> Unit>, callWeight: CallWeight)","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.RateLimiterPluginConfig","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config/-rate-limiter-plugin-config.html","searchKeys":["RateLimiterPluginConfig","constructor(rateLimiterConfig: <Error class: unknown class>, keyResolver: KeyResolver, onRejectedCall: OnRejectedCall, onSuccessCall: OnSuccessCall, excludePredicate: ExcludePredicate, interceptPhase: <Error class: unknown class><suspend (<Error class: unknown class>) -> Unit>, callWeight: CallWeight)","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.RateLimiterPluginConfig"]},{"name":"data class RateLimiterPluginConfig(val rateLimiterConfig: <Error class: unknown class>, val keyResolver: KeyResolver, val onRejectedCall: OnRejectedCall, val onSuccessCall: OnSuccessCall, val excludePredicate: ExcludePredicate, val interceptPhase: <Error class: unknown class><suspend (<Error class: unknown class>) -> Unit>, val callWeight: CallWeight)","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config/index.html","searchKeys":["RateLimiterPluginConfig","data class RateLimiterPluginConfig(val rateLimiterConfig: <Error class: unknown class>, val keyResolver: KeyResolver, val onRejectedCall: OnRejectedCall, val onSuccessCall: OnSuccessCall, val excludePredicate: ExcludePredicate, val interceptPhase: <Error class: unknown class><suspend (<Error class: unknown class>) -> Unit>, val callWeight: CallWeight)","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig"]},{"name":"fun algorithm(algorithm: <Error class: unknown class>)","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.algorithm","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/algorithm.html","searchKeys":["algorithm","fun algorithm(algorithm: <Error class: unknown class>)","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.algorithm"]},{"name":"fun callWeight(callWeight: CallWeight)","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.callWeight","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/call-weight.html","searchKeys":["callWeight","fun callWeight(callWeight: CallWeight)","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.callWeight"]},{"name":"fun excludeFromRateLimiting(excludePredicate: ExcludePredicate)","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.excludeFromRateLimiting","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/exclude-from-rate-limiting.html","searchKeys":["excludeFromRateLimiting","fun excludeFromRateLimiting(excludePredicate: ExcludePredicate)","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.excludeFromRateLimiting"]},{"name":"fun interceptPhase(interceptPhase: <Error class: unknown class><suspend (<Error class: unknown class>) -> Unit>)","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.interceptPhase","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/intercept-phase.html","searchKeys":["interceptPhase","fun interceptPhase(interceptPhase: <Error class: unknown class><suspend (<Error class: unknown class>) -> Unit>)","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.interceptPhase"]},{"name":"fun keyResolver(keyResolver: KeyResolver)","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.keyResolver","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/key-resolver.html","searchKeys":["keyResolver","fun keyResolver(keyResolver: KeyResolver)","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.keyResolver"]},{"name":"fun onRejectedCall(onRejectedCall: OnRejectedCall)","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.onRejectedCall","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/on-rejected-call.html","searchKeys":["onRejectedCall","fun onRejectedCall(onRejectedCall: OnRejectedCall)","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.onRejectedCall"]},{"name":"fun onSuccessCall(onSuccessCall: OnSuccessCall)","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.onSuccessCall","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/on-success-call.html","searchKeys":["onSuccessCall","fun onSuccessCall(onSuccessCall: OnSuccessCall)","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.onSuccessCall"]},{"name":"internal fun <Error class: unknown class><RateLimiterPluginConfigBuilder>.buildRateLimiterPlugin(logger: <Error class: unknown class>)","description":"kresil.ktor.server.plugins.ratelimiter.buildRateLimiterPlugin","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter/build-rate-limiter-plugin.html","searchKeys":["buildRateLimiterPlugin","internal fun <Error class: unknown class><RateLimiterPluginConfigBuilder>.buildRateLimiterPlugin(logger: <Error class: unknown class>)","kresil.ktor.server.plugins.ratelimiter.buildRateLimiterPlugin"]},{"name":"internal fun createRateLimiterConfigBuilder(): () -> RateLimiterPluginConfigBuilder","description":"kresil.ktor.server.plugins.ratelimiter.createRateLimiterConfigBuilder","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter/create-rate-limiter-config-builder.html","searchKeys":["createRateLimiterConfigBuilder","internal fun createRateLimiterConfigBuilder(): () -> RateLimiterPluginConfigBuilder","kresil.ktor.server.plugins.ratelimiter.createRateLimiterConfigBuilder"]},{"name":"internal typealias CallWeight = suspend (<Error class: unknown class>) -> Int","description":"kresil.ktor.server.plugins.ratelimiter.config.CallWeight","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-call-weight/index.html","searchKeys":["CallWeight","internal typealias CallWeight = suspend (<Error class: unknown class>) -> Int","kresil.ktor.server.plugins.ratelimiter.config.CallWeight"]},{"name":"internal typealias ExcludePredicate = suspend (<Error class: unknown class>) -> Boolean","description":"kresil.ktor.server.plugins.ratelimiter.config.ExcludePredicate","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-exclude-predicate/index.html","searchKeys":["ExcludePredicate","internal typealias ExcludePredicate = suspend (<Error class: unknown class>) -> Boolean","kresil.ktor.server.plugins.ratelimiter.config.ExcludePredicate"]},{"name":"internal typealias InterceptPhase = <Error class: unknown class><suspend (<Error class: unknown class>) -> Unit>","description":"kresil.ktor.server.plugins.ratelimiter.config.InterceptPhase","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-intercept-phase/index.html","searchKeys":["InterceptPhase","internal typealias InterceptPhase = <Error class: unknown class><suspend (<Error class: unknown class>) -> Unit>","kresil.ktor.server.plugins.ratelimiter.config.InterceptPhase"]},{"name":"internal typealias KeyResolver = suspend (<Error class: unknown class>) -> Any","description":"kresil.ktor.server.plugins.ratelimiter.config.KeyResolver","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-key-resolver/index.html","searchKeys":["KeyResolver","internal typealias KeyResolver = suspend (<Error class: unknown class>) -> Any","kresil.ktor.server.plugins.ratelimiter.config.KeyResolver"]},{"name":"internal typealias OnRejectedCall = suspend (<Error class: unknown class>, <Error class: unknown class>) -> Unit","description":"kresil.ktor.server.plugins.ratelimiter.config.OnRejectedCall","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-on-rejected-call/index.html","searchKeys":["OnRejectedCall","internal typealias OnRejectedCall = suspend (<Error class: unknown class>, <Error class: unknown class>) -> Unit","kresil.ktor.server.plugins.ratelimiter.config.OnRejectedCall"]},{"name":"internal typealias OnSuccessCall = suspend (<Error class: unknown class>) -> Unit","description":"kresil.ktor.server.plugins.ratelimiter.config.OnSuccessCall","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-on-success-call/index.html","searchKeys":["OnSuccessCall","internal typealias OnSuccessCall = suspend (<Error class: unknown class>) -> Unit","kresil.ktor.server.plugins.ratelimiter.config.OnSuccessCall"]},{"name":"open fun build(): RateLimiterPluginConfig","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.build","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/build.html","searchKeys":["build","open fun build(): RateLimiterPluginConfig","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.build"]},{"name":"open val baseConfig: RateLimiterPluginConfig","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.baseConfig","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/base-config.html","searchKeys":["baseConfig","open val baseConfig: RateLimiterPluginConfig","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.baseConfig"]},{"name":"private data class RateLimiterAcquisitionData(val rateLimiter: <Error class: unknown class>, val permits: Int, val key: Any)","description":"kresil.ktor.server.plugins.ratelimiter.RateLimiterAcquisitionData","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter/-rate-limiter-acquisition-data/index.html","searchKeys":["RateLimiterAcquisitionData","private data class RateLimiterAcquisitionData(val rateLimiter: <Error class: unknown class>, val permits: Int, val key: Any)","kresil.ktor.server.plugins.ratelimiter.RateLimiterAcquisitionData"]},{"name":"private val RequestWasNotRateLimitedKey: <Error class: unknown class>","description":"kresil.ktor.server.plugins.ratelimiter.RequestWasNotRateLimitedKey","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter/-request-was-not-rate-limited-key.html","searchKeys":["RequestWasNotRateLimitedKey","private val RequestWasNotRateLimitedKey: <Error class: unknown class>","kresil.ktor.server.plugins.ratelimiter.RequestWasNotRateLimitedKey"]},{"name":"private val RequestWentThroughRateLimiterKey: <Error class: unknown class>","description":"kresil.ktor.server.plugins.ratelimiter.RequestWentThroughRateLimiterKey","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter/-request-went-through-rate-limiter-key.html","searchKeys":["RequestWentThroughRateLimiterKey","private val RequestWentThroughRateLimiterKey: <Error class: unknown class>","kresil.ktor.server.plugins.ratelimiter.RequestWentThroughRateLimiterKey"]},{"name":"private val defaultRateLimiterPluginConfig: RateLimiterPluginConfig","description":"kresil.ktor.server.plugins.ratelimiter.defaultRateLimiterPluginConfig","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter/default-rate-limiter-plugin-config.html","searchKeys":["defaultRateLimiterPluginConfig","private val defaultRateLimiterPluginConfig: RateLimiterPluginConfig","kresil.ktor.server.plugins.ratelimiter.defaultRateLimiterPluginConfig"]},{"name":"private val logger: <Error class: unknown class>","description":"kresil.ktor.server.plugins.ratelimiter.logger","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter/logger.html","searchKeys":["logger","private val logger: <Error class: unknown class>","kresil.ktor.server.plugins.ratelimiter.logger"]},{"name":"private val rateLimiterConfig: <Error class: unknown class>","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.rateLimiterConfig","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/rate-limiter-config.html","searchKeys":["rateLimiterConfig","private val rateLimiterConfig: <Error class: unknown class>","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.rateLimiterConfig"]},{"name":"private val rateLimiterConfigBuilder: <Error class: unknown class>","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.rateLimiterConfigBuilder","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/rate-limiter-config-builder.html","searchKeys":["rateLimiterConfigBuilder","private val rateLimiterConfigBuilder: <Error class: unknown class>","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.rateLimiterConfigBuilder"]},{"name":"private var callWeight: CallWeight","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.callWeight","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/call-weight.html","searchKeys":["callWeight","private var callWeight: CallWeight","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.callWeight"]},{"name":"private var excludeFromRateLimiting: ExcludePredicate","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.excludeFromRateLimiting","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/exclude-from-rate-limiting.html","searchKeys":["excludeFromRateLimiting","private var excludeFromRateLimiting: ExcludePredicate","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.excludeFromRateLimiting"]},{"name":"private var interceptPhase: <Error class: unknown class><suspend (<Error class: unknown class>) -> Unit>","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.interceptPhase","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/intercept-phase.html","searchKeys":["interceptPhase","private var interceptPhase: <Error class: unknown class><suspend (<Error class: unknown class>) -> Unit>","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.interceptPhase"]},{"name":"private var keyResolver: KeyResolver","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.keyResolver","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/key-resolver.html","searchKeys":["keyResolver","private var keyResolver: KeyResolver","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.keyResolver"]},{"name":"private var onRejectedCall: OnRejectedCall","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.onRejectedCall","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/on-rejected-call.html","searchKeys":["onRejectedCall","private var onRejectedCall: OnRejectedCall","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.onRejectedCall"]},{"name":"private var onSuccessCall: OnSuccessCall","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.onSuccessCall","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/on-success-call.html","searchKeys":["onSuccessCall","private var onSuccessCall: OnSuccessCall","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.onSuccessCall"]},{"name":"val KresilRateLimiterPlugin: <Error class: unknown class>","description":"kresil.ktor.server.plugins.ratelimiter.KresilRateLimiterPlugin","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter/-kresil-rate-limiter-plugin.html","searchKeys":["KresilRateLimiterPlugin","val KresilRateLimiterPlugin: <Error class: unknown class>","kresil.ktor.server.plugins.ratelimiter.KresilRateLimiterPlugin"]},{"name":"val KresilRouteRateLimiterPlugin: <Error class: unknown class>","description":"kresil.ktor.server.plugins.ratelimiter.KresilRouteRateLimiterPlugin","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter/-kresil-route-rate-limiter-plugin.html","searchKeys":["KresilRouteRateLimiterPlugin","val KresilRouteRateLimiterPlugin: <Error class: unknown class>","kresil.ktor.server.plugins.ratelimiter.KresilRouteRateLimiterPlugin"]},{"name":"val callWeight: CallWeight","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.callWeight","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config/call-weight.html","searchKeys":["callWeight","val callWeight: CallWeight","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.callWeight"]},{"name":"val excludePredicate: ExcludePredicate","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.excludePredicate","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config/exclude-predicate.html","searchKeys":["excludePredicate","val excludePredicate: ExcludePredicate","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.excludePredicate"]},{"name":"val interceptPhase: <Error class: unknown class><suspend (<Error class: unknown class>) -> Unit>","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.interceptPhase","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config/intercept-phase.html","searchKeys":["interceptPhase","val interceptPhase: <Error class: unknown class><suspend (<Error class: unknown class>) -> Unit>","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.interceptPhase"]},{"name":"val key: Any","description":"kresil.ktor.server.plugins.ratelimiter.RateLimiterAcquisitionData.key","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter/-rate-limiter-acquisition-data/key.html","searchKeys":["key","val key: Any","kresil.ktor.server.plugins.ratelimiter.RateLimiterAcquisitionData.key"]},{"name":"val keyResolver: KeyResolver","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.keyResolver","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config/key-resolver.html","searchKeys":["keyResolver","val keyResolver: KeyResolver","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.keyResolver"]},{"name":"val onRejectedCall: OnRejectedCall","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.onRejectedCall","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config/on-rejected-call.html","searchKeys":["onRejectedCall","val onRejectedCall: OnRejectedCall","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.onRejectedCall"]},{"name":"val onSuccessCall: OnSuccessCall","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.onSuccessCall","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config/on-success-call.html","searchKeys":["onSuccessCall","val onSuccessCall: OnSuccessCall","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.onSuccessCall"]},{"name":"val permits: Int","description":"kresil.ktor.server.plugins.ratelimiter.RateLimiterAcquisitionData.permits","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter/-rate-limiter-acquisition-data/permits.html","searchKeys":["permits","val permits: Int","kresil.ktor.server.plugins.ratelimiter.RateLimiterAcquisitionData.permits"]},{"name":"val rateLimiter: <Error class: unknown class>","description":"kresil.ktor.server.plugins.ratelimiter.RateLimiterAcquisitionData.rateLimiter","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter/-rate-limiter-acquisition-data/rate-limiter.html","searchKeys":["rateLimiter","val rateLimiter: <Error class: unknown class>","kresil.ktor.server.plugins.ratelimiter.RateLimiterAcquisitionData.rateLimiter"]},{"name":"val rateLimiterConfig: <Error class: unknown class>","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.rateLimiterConfig","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config/rate-limiter-config.html","searchKeys":["rateLimiterConfig","val rateLimiterConfig: <Error class: unknown class>","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfig.rateLimiterConfig"]},{"name":"var baseTimeoutDuration: <Error class: unknown class>","description":"kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.baseTimeoutDuration","location":"ktor-server-plugins/shared/kresil.ktor.server.plugins.ratelimiter.config/-rate-limiter-plugin-config-builder/base-timeout-duration.html","searchKeys":["baseTimeoutDuration","var baseTimeoutDuration: <Error class: unknown class>","kresil.ktor.server.plugins.ratelimiter.config.RateLimiterPluginConfigBuilder.baseTimeoutDuration"]},{"name":"COUNT_BASED","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.COUNT_BASED","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window-type/-c-o-u-n-t_-b-a-s-e-d/index.html","searchKeys":["COUNT_BASED","COUNT_BASED","kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.COUNT_BASED"]},{"name":"FORCE_STATE_UPDATE","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.FORCE_STATE_UPDATE","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-f-o-r-c-e_-s-t-a-t-e_-u-p-d-a-t-e/index.html","searchKeys":["FORCE_STATE_UPDATE","FORCE_STATE_UPDATE","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.FORCE_STATE_UPDATE"]},{"name":"OPERATION_FAILURE","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.OPERATION_FAILURE","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-o-p-e-r-a-t-i-o-n_-f-a-i-l-u-r-e/index.html","searchKeys":["OPERATION_FAILURE","OPERATION_FAILURE","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.OPERATION_FAILURE"]},{"name":"OPERATION_SUCCESS","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.OPERATION_SUCCESS","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-o-p-e-r-a-t-i-o-n_-s-u-c-c-e-s-s/index.html","searchKeys":["OPERATION_SUCCESS","OPERATION_SUCCESS","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.OPERATION_SUCCESS"]},{"name":"RESET","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.RESET","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-r-e-s-e-t/index.html","searchKeys":["RESET","RESET","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.RESET"]},{"name":"TIME_BASED","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.TIME_BASED","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window-type/-t-i-m-e_-b-a-s-e-d/index.html","searchKeys":["TIME_BASED","TIME_BASED","kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.TIME_BASED"]},{"name":"TRANSITION_TO_CLOSED_STATE","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.TRANSITION_TO_CLOSED_STATE","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-t-r-a-n-s-i-t-i-o-n_-t-o_-c-l-o-s-e-d_-s-t-a-t-e/index.html","searchKeys":["TRANSITION_TO_CLOSED_STATE","TRANSITION_TO_CLOSED_STATE","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.TRANSITION_TO_CLOSED_STATE"]},{"name":"TRANSITION_TO_HALF_OPEN_STATE","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.TRANSITION_TO_HALF_OPEN_STATE","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-t-r-a-n-s-i-t-i-o-n_-t-o_-h-a-l-f_-o-p-e-n_-s-t-a-t-e/index.html","searchKeys":["TRANSITION_TO_HALF_OPEN_STATE","TRANSITION_TO_HALF_OPEN_STATE","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.TRANSITION_TO_HALF_OPEN_STATE"]},{"name":"TRANSITION_TO_OPEN_STATE","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.TRANSITION_TO_OPEN_STATE","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-t-r-a-n-s-i-t-i-o-n_-t-o_-o-p-e-n_-s-t-a-t-e/index.html","searchKeys":["TRANSITION_TO_OPEN_STATE","TRANSITION_TO_OPEN_STATE","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.TRANSITION_TO_OPEN_STATE"]},{"name":"abstract class Reducer<State, Event, Effect>","description":"kresil.core.reducer.Reducer","location":"kresil-lib/lib/kresil.core.reducer/-reducer/index.html","searchKeys":["Reducer","abstract class Reducer<State, Event, Effect>","kresil.core.reducer.Reducer"]},{"name":"abstract class SemaphoreState : AutoCloseable","description":"kresil.ratelimiter.semaphore.state.SemaphoreState","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.state/-semaphore-state/index.html","searchKeys":["SemaphoreState","abstract class SemaphoreState : AutoCloseable","kresil.ratelimiter.semaphore.state.SemaphoreState"]},{"name":"abstract fun build(): TConfig","description":"kresil.core.builders.ConfigBuilder.build","location":"kresil-lib/lib/kresil.core.builders/-config-builder/build.html","searchKeys":["build","abstract fun build(): TConfig","kresil.core.builders.ConfigBuilder.build"]},{"name":"abstract fun cancelListeners()","description":"kresil.core.events.FlowEventListener.cancelListeners","location":"kresil-lib/lib/kresil.core.events/-flow-event-listener/cancel-listeners.html","searchKeys":["cancelListeners","abstract fun cancelListeners()","kresil.core.events.FlowEventListener.cancelListeners"]},{"name":"abstract fun clear()","description":"kresil.core.slidingwindow.FailureRateSlidingWindow.clear","location":"kresil-lib/lib/kresil.core.slidingwindow/-failure-rate-sliding-window/clear.html","searchKeys":["clear","abstract fun clear()","kresil.core.slidingwindow.FailureRateSlidingWindow.clear"]},{"name":"abstract fun currentFailureRate(): Double","description":"kresil.core.slidingwindow.FailureRateSlidingWindow.currentFailureRate","location":"kresil-lib/lib/kresil.core.slidingwindow/-failure-rate-sliding-window/current-failure-rate.html","searchKeys":["currentFailureRate","abstract fun currentFailureRate(): Double","kresil.core.slidingwindow.FailureRateSlidingWindow.currentFailureRate"]},{"name":"abstract fun recordFailure()","description":"kresil.core.slidingwindow.FailureRateSlidingWindow.recordFailure","location":"kresil-lib/lib/kresil.core.slidingwindow/-failure-rate-sliding-window/record-failure.html","searchKeys":["recordFailure","abstract fun recordFailure()","kresil.core.slidingwindow.FailureRateSlidingWindow.recordFailure"]},{"name":"abstract fun recordSuccess()","description":"kresil.core.slidingwindow.FailureRateSlidingWindow.recordSuccess","location":"kresil-lib/lib/kresil.core.slidingwindow/-failure-rate-sliding-window/record-success.html","searchKeys":["recordSuccess","abstract fun recordSuccess()","kresil.core.slidingwindow.FailureRateSlidingWindow.recordSuccess"]},{"name":"abstract fun setPermits(updateFunction: (Int) -> Int)","description":"kresil.ratelimiter.semaphore.state.SemaphoreState.setPermits","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.state/-semaphore-state/set-permits.html","searchKeys":["setPermits","abstract fun setPermits(updateFunction: (Int) -> Int)","kresil.ratelimiter.semaphore.state.SemaphoreState.setPermits"]},{"name":"abstract fun setReplenishmentTimeMark(value: ComparableTimeMark)","description":"kresil.ratelimiter.semaphore.state.SemaphoreState.setReplenishmentTimeMark","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.state/-semaphore-state/set-replenishment-time-mark.html","searchKeys":["setReplenishmentTimeMark","abstract fun setReplenishmentTimeMark(value: ComparableTimeMark)","kresil.ratelimiter.semaphore.state.SemaphoreState.setReplenishmentTimeMark"]},{"name":"abstract suspend fun acquire(permits: Int, timeout: Duration)","description":"kresil.core.semaphore.SuspendableSemaphore.acquire","location":"kresil-lib/lib/kresil.core.semaphore/-suspendable-semaphore/acquire.html","searchKeys":["acquire","abstract suspend fun acquire(permits: Int, timeout: Duration)","kresil.core.semaphore.SuspendableSemaphore.acquire"]},{"name":"abstract suspend fun currentState(): State","description":"kresil.core.reducer.Reducer.currentState","location":"kresil-lib/lib/kresil.core.reducer/-reducer/current-state.html","searchKeys":["currentState","abstract suspend fun currentState(): State","kresil.core.reducer.Reducer.currentState"]},{"name":"abstract suspend fun delay(attempt: Int): Duration","description":"kresil.core.delay.provider.DelayProvider.delay","location":"kresil-lib/lib/kresil.core.delay.provider/-delay-provider/delay.html","searchKeys":["delay","abstract suspend fun delay(attempt: Int): Duration","kresil.core.delay.provider.DelayProvider.delay"]},{"name":"abstract suspend fun delay(attempt: Int, context: TContext): Duration","description":"kresil.core.delay.provider.CtxDelayProvider.delay","location":"kresil-lib/lib/kresil.core.delay.provider/-ctx-delay-provider/delay.html","searchKeys":["delay","abstract suspend fun delay(attempt: Int, context: TContext): Duration","kresil.core.delay.provider.CtxDelayProvider.delay"]},{"name":"abstract suspend fun dequeue(): Node<T>","description":"kresil.core.queue.Queue.dequeue","location":"kresil-lib/lib/kresil.core.queue/-queue/dequeue.html","searchKeys":["dequeue","abstract suspend fun dequeue(): Node<T>","kresil.core.queue.Queue.dequeue"]},{"name":"abstract suspend fun dispatch(event: Event)","description":"kresil.core.reducer.Reducer.dispatch","location":"kresil-lib/lib/kresil.core.reducer/-reducer/dispatch.html","searchKeys":["dispatch","abstract suspend fun dispatch(event: Event)","kresil.core.reducer.Reducer.dispatch"]},{"name":"abstract suspend fun enqueue(value: T): Node<T>","description":"kresil.core.queue.Queue.enqueue","location":"kresil-lib/lib/kresil.core.queue/-queue/enqueue.html","searchKeys":["enqueue","abstract suspend fun enqueue(value: T): Node<T>","kresil.core.queue.Queue.enqueue"]},{"name":"abstract suspend fun headCondition(cond: (T) -> Boolean): Boolean","description":"kresil.core.queue.Queue.headCondition","location":"kresil-lib/lib/kresil.core.queue/-queue/head-condition.html","searchKeys":["headCondition","abstract suspend fun headCondition(cond: (T) -> Boolean): Boolean","kresil.core.queue.Queue.headCondition"]},{"name":"abstract suspend fun onError(throwable: Throwable): Boolean","description":"kresil.retry.context.RetryAsyncContext.onError","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context/on-error.html","searchKeys":["onError","abstract suspend fun onError(throwable: Throwable): Boolean","kresil.retry.context.RetryAsyncContext.onError"]},{"name":"abstract suspend fun onEvent(action: suspend (Event) -> Unit): Job","description":"kresil.core.events.FlowEventListener.onEvent","location":"kresil-lib/lib/kresil.core.events/-flow-event-listener/on-event.html","searchKeys":["onEvent","abstract suspend fun onEvent(action: suspend (Event) -> Unit): Job","kresil.core.events.FlowEventListener.onEvent"]},{"name":"abstract suspend fun onResult(result: Any?): Boolean","description":"kresil.retry.context.RetryAsyncContext.onResult","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context/on-result.html","searchKeys":["onResult","abstract suspend fun onResult(result: Any?): Boolean","kresil.retry.context.RetryAsyncContext.onResult"]},{"name":"abstract suspend fun onRetry()","description":"kresil.retry.context.RetryAsyncContext.onRetry","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context/on-retry.html","searchKeys":["onRetry","abstract suspend fun onRetry()","kresil.retry.context.RetryAsyncContext.onRetry"]},{"name":"abstract suspend fun onSuccess()","description":"kresil.retry.context.RetryAsyncContext.onSuccess","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context/on-success.html","searchKeys":["onSuccess","abstract suspend fun onSuccess()","kresil.retry.context.RetryAsyncContext.onSuccess"]},{"name":"abstract suspend fun release(permits: Int)","description":"kresil.core.semaphore.SuspendableSemaphore.release","location":"kresil-lib/lib/kresil.core.semaphore/-suspendable-semaphore/release.html","searchKeys":["release","abstract suspend fun release(permits: Int)","kresil.core.semaphore.SuspendableSemaphore.release"]},{"name":"abstract suspend fun remove(node: Node<T>)","description":"kresil.core.queue.Queue.remove","location":"kresil-lib/lib/kresil.core.queue/-queue/remove.html","searchKeys":["remove","abstract suspend fun remove(node: Node<T>)","kresil.core.queue.Queue.remove"]},{"name":"abstract val baseConfig: TConfig","description":"kresil.core.builders.ConfigBuilder.baseConfig","location":"kresil-lib/lib/kresil.core.builders/-config-builder/base-config.html","searchKeys":["baseConfig","abstract val baseConfig: TConfig","kresil.core.builders.ConfigBuilder.baseConfig"]},{"name":"abstract val capacity: Int","description":"kresil.core.slidingwindow.FailureRateSlidingWindow.capacity","location":"kresil-lib/lib/kresil.core.slidingwindow/-failure-rate-sliding-window/capacity.html","searchKeys":["capacity","abstract val capacity: Int","kresil.core.slidingwindow.FailureRateSlidingWindow.capacity"]},{"name":"abstract val events: MutableSharedFlow<Event>","description":"kresil.core.events.FlowEventListener.events","location":"kresil-lib/lib/kresil.core.events/-flow-event-listener/events.html","searchKeys":["events","abstract val events: MutableSharedFlow<Event>","kresil.core.events.FlowEventListener.events"]},{"name":"abstract val permitsInUse: Int","description":"kresil.ratelimiter.semaphore.state.SemaphoreState.permitsInUse","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.state/-semaphore-state/permits-in-use.html","searchKeys":["permitsInUse","abstract val permitsInUse: Int","kresil.ratelimiter.semaphore.state.SemaphoreState.permitsInUse"]},{"name":"abstract val replenishmentTimeMark: ComparableTimeMark","description":"kresil.ratelimiter.semaphore.state.SemaphoreState.replenishmentTimeMark","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.state/-semaphore-state/replenishment-time-mark.html","searchKeys":["replenishmentTimeMark","abstract val replenishmentTimeMark: ComparableTimeMark","kresil.ratelimiter.semaphore.state.SemaphoreState.replenishmentTimeMark"]},{"name":"abstract val scope: CoroutineScope","description":"kresil.core.events.FlowEventListener.scope","location":"kresil-lib/lib/kresil.core.events/-flow-event-listener/scope.html","searchKeys":["scope","abstract val scope: CoroutineScope","kresil.core.events.FlowEventListener.scope"]},{"name":"abstract val size: Int","description":"kresil.core.queue.Queue.size","location":"kresil-lib/lib/kresil.core.queue/-queue/size.html","searchKeys":["size","abstract val size: Int","kresil.core.queue.Queue.size"]},{"name":"abstract val value: T","description":"kresil.core.queue.Node.value","location":"kresil-lib/lib/kresil.core.queue/-node/value.html","searchKeys":["value","abstract val value: T","kresil.core.queue.Node.value"]},{"name":"class CallNotPermittedException(message: String = \"A call to a protected operation by a circuit breaker was not permitted.\") : IllegalStateException","description":"kresil.circuitbreaker.exceptions.CallNotPermittedException","location":"kresil-lib/lib/kresil.circuitbreaker.exceptions/-call-not-permitted-exception/index.html","searchKeys":["CallNotPermittedException","class CallNotPermittedException(message: String = \"A call to a protected operation by a circuit breaker was not permitted.\") : IllegalStateException","kresil.circuitbreaker.exceptions.CallNotPermittedException"]},{"name":"class CircuitBreaker(val config: CircuitBreakerConfig = defaultCircuitBreakerConfig()) : FlowEventListenerImpl<CircuitBreakerEvent> ","description":"kresil.circuitbreaker.CircuitBreaker","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/index.html","searchKeys":["CircuitBreaker","class CircuitBreaker(val config: CircuitBreakerConfig = defaultCircuitBreakerConfig()) : FlowEventListenerImpl<CircuitBreakerEvent> ","kresil.circuitbreaker.CircuitBreaker"]},{"name":"class CircuitBreakerConfigBuilder(val baseConfig: CircuitBreakerConfig = defaultCircuitBreakerConfig) : ConfigBuilder<CircuitBreakerConfig> ","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/index.html","searchKeys":["CircuitBreakerConfigBuilder","class CircuitBreakerConfigBuilder(val baseConfig: CircuitBreakerConfig = defaultCircuitBreakerConfig) : ConfigBuilder<CircuitBreakerConfig> ","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder"]},{"name":"class KeyedRateLimiter<Key>(val config: RateLimiterConfig = defaultRateLimiterConfig(), val semaphoreStateFactory: () -> SemaphoreState = { InMemorySemaphoreState() }) : AutoCloseable","description":"kresil.ratelimiter.KeyedRateLimiter","location":"kresil-lib/lib/kresil.ratelimiter/-keyed-rate-limiter/index.html","searchKeys":["KeyedRateLimiter","class KeyedRateLimiter<Key>(val config: RateLimiterConfig = defaultRateLimiterConfig(), val semaphoreStateFactory: () -> SemaphoreState = { InMemorySemaphoreState() }) : AutoCloseable","kresil.ratelimiter.KeyedRateLimiter"]},{"name":"class RateLimiter(val config: RateLimiterConfig = defaultRateLimiterConfig(), val semaphoreState: SemaphoreState = InMemorySemaphoreState()) : FlowEventListenerImpl<RateLimiterEvent> , SuspendableSemaphore, AutoCloseable","description":"kresil.ratelimiter.RateLimiter","location":"kresil-lib/lib/kresil.ratelimiter/-rate-limiter/index.html","searchKeys":["RateLimiter","class RateLimiter(val config: RateLimiterConfig = defaultRateLimiterConfig(), val semaphoreState: SemaphoreState = InMemorySemaphoreState()) : FlowEventListenerImpl<RateLimiterEvent> , SuspendableSemaphore, AutoCloseable","kresil.ratelimiter.RateLimiter"]},{"name":"class RateLimiterConfigBuilder(val baseConfig: RateLimiterConfig = defaultRateLimiterConfig) : ConfigBuilder<RateLimiterConfig> ","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config-builder/index.html","searchKeys":["RateLimiterConfigBuilder","class RateLimiterConfigBuilder(val baseConfig: RateLimiterConfig = defaultRateLimiterConfig) : ConfigBuilder<RateLimiterConfig> ","kresil.ratelimiter.config.RateLimiterConfigBuilder"]},{"name":"class RateLimiterRejectedException(val retryAfter: Duration) : IllegalStateException","description":"kresil.ratelimiter.exceptions.RateLimiterRejectedException","location":"kresil-lib/lib/kresil.ratelimiter.exceptions/-rate-limiter-rejected-exception/index.html","searchKeys":["RateLimiterRejectedException","class RateLimiterRejectedException(val retryAfter: Duration) : IllegalStateException","kresil.ratelimiter.exceptions.RateLimiterRejectedException"]},{"name":"class Retry(val config: RetryConfig = defaultRetryConfig()) : FlowEventListenerImpl<RetryEvent> ","description":"kresil.retry.Retry","location":"kresil-lib/lib/kresil.retry/-retry/index.html","searchKeys":["Retry","class Retry(val config: RetryConfig = defaultRetryConfig()) : FlowEventListenerImpl<RetryEvent> ","kresil.retry.Retry"]},{"name":"class RetryConfigBuilder(val baseConfig: RetryConfig = defaultRetryConfig) : ConfigBuilder<RetryConfig> ","description":"kresil.retry.config.RetryConfigBuilder","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/index.html","searchKeys":["RetryConfigBuilder","class RetryConfigBuilder(val baseConfig: RetryConfig = defaultRetryConfig) : ConfigBuilder<RetryConfig> ","kresil.retry.config.RetryConfigBuilder"]},{"name":"const val INITIAL_NON_RETRY_ATTEMPT: Int = 0","description":"kresil.retry.context.RetryAsyncContextImpl.Companion.INITIAL_NON_RETRY_ATTEMPT","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/-companion/-i-n-i-t-i-a-l_-n-o-n_-r-e-t-r-y_-a-t-t-e-m-p-t.html","searchKeys":["INITIAL_NON_RETRY_ATTEMPT","const val INITIAL_NON_RETRY_ATTEMPT: Int = 0","kresil.retry.context.RetryAsyncContextImpl.Companion.INITIAL_NON_RETRY_ATTEMPT"]},{"name":"const val MAX_FAILURE_RATE_THRESHOLD: Double = 1.0","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.Companion.MAX_FAILURE_RATE_THRESHOLD","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/-companion/-m-a-x_-f-a-i-l-u-r-e_-r-a-t-e_-t-h-r-e-s-h-o-l-d.html","searchKeys":["MAX_FAILURE_RATE_THRESHOLD","const val MAX_FAILURE_RATE_THRESHOLD: Double = 1.0","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.Companion.MAX_FAILURE_RATE_THRESHOLD"]},{"name":"const val MIN_FAILURE_RATE_THRESHOLD: Double = 0.0","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.Companion.MIN_FAILURE_RATE_THRESHOLD","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/-companion/-m-i-n_-f-a-i-l-u-r-e_-r-a-t-e_-t-h-r-e-s-h-o-l-d.html","searchKeys":["MIN_FAILURE_RATE_THRESHOLD","const val MIN_FAILURE_RATE_THRESHOLD: Double = 0.0","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.Companion.MIN_FAILURE_RATE_THRESHOLD"]},{"name":"const val MIN_QUEUE_LENGTH: Int = 0","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.Companion.MIN_QUEUE_LENGTH","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config-builder/-companion/-m-i-n_-q-u-e-u-e_-l-e-n-g-t-h.html","searchKeys":["MIN_QUEUE_LENGTH","const val MIN_QUEUE_LENGTH: Int = 0","kresil.ratelimiter.config.RateLimiterConfigBuilder.Companion.MIN_QUEUE_LENGTH"]},{"name":"const val MIN_TOTAL_PERMITS: Int = 1","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.Companion.MIN_TOTAL_PERMITS","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config-builder/-companion/-m-i-n_-t-o-t-a-l_-p-e-r-m-i-t-s.html","searchKeys":["MIN_TOTAL_PERMITS","const val MIN_TOTAL_PERMITS: Int = 1","kresil.ratelimiter.config.RateLimiterConfigBuilder.Companion.MIN_TOTAL_PERMITS"]},{"name":"constructor()","description":"kresil.core.reducer.Reducer.Reducer","location":"kresil-lib/lib/kresil.core.reducer/-reducer/-reducer.html","searchKeys":["Reducer","constructor()","kresil.core.reducer.Reducer.Reducer"]},{"name":"constructor()","description":"kresil.core.utils.CircularDoublyLinkedList.CircularDoublyLinkedList","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/-circular-doubly-linked-list.html","searchKeys":["CircularDoublyLinkedList","constructor()","kresil.core.utils.CircularDoublyLinkedList.CircularDoublyLinkedList"]},{"name":"constructor()","description":"kresil.ratelimiter.semaphore.state.InMemorySemaphoreState.InMemorySemaphoreState","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.state/-in-memory-semaphore-state/-in-memory-semaphore-state.html","searchKeys":["InMemorySemaphoreState","constructor()","kresil.ratelimiter.semaphore.state.InMemorySemaphoreState.InMemorySemaphoreState"]},{"name":"constructor()","description":"kresil.ratelimiter.semaphore.state.SemaphoreState.SemaphoreState","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.state/-semaphore-state/-semaphore-state.html","searchKeys":["SemaphoreState","constructor()","kresil.ratelimiter.semaphore.state.SemaphoreState.SemaphoreState"]},{"name":"constructor()","description":"kresil.retry.exceptions.MaxRetriesExceededException.MaxRetriesExceededException","location":"kresil-lib/lib/kresil.retry.exceptions/-max-retries-exceeded-exception/-max-retries-exceeded-exception.html","searchKeys":["MaxRetriesExceededException","constructor()","kresil.retry.exceptions.MaxRetriesExceededException.MaxRetriesExceededException"]},{"name":"constructor(algorithm: RateLimitingAlgorithm, baseTimeoutDuration: Duration, onRejected: ExceptionHandler)","description":"kresil.ratelimiter.config.RateLimiterConfig.RateLimiterConfig","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config/-rate-limiter-config.html","searchKeys":["RateLimiterConfig","constructor(algorithm: RateLimitingAlgorithm, baseTimeoutDuration: Duration, onRejected: ExceptionHandler)","kresil.ratelimiter.config.RateLimiterConfig.RateLimiterConfig"]},{"name":"constructor(attempt: Int)","description":"kresil.retry.context.RetryContext.RetryContext","location":"kresil-lib/lib/kresil.retry.context/-retry-context/-retry-context.html","searchKeys":["RetryContext","constructor(attempt: Int)","kresil.retry.context.RetryContext.RetryContext"]},{"name":"constructor(attempt: Int)","description":"kresil.retry.event.RetryEvent.RetryOnRetry.RetryOnRetry","location":"kresil-lib/lib/kresil.retry.event/-retry-event/-retry-on-retry/-retry-on-retry.html","searchKeys":["RetryOnRetry","constructor(attempt: Int)","kresil.retry.event.RetryEvent.RetryOnRetry.RetryOnRetry"]},{"name":"constructor(baseConfig: CircuitBreakerConfig = defaultCircuitBreakerConfig)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.CircuitBreakerConfigBuilder","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/-circuit-breaker-config-builder.html","searchKeys":["CircuitBreakerConfigBuilder","constructor(baseConfig: CircuitBreakerConfig = defaultCircuitBreakerConfig)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.CircuitBreakerConfigBuilder"]},{"name":"constructor(baseConfig: RateLimiterConfig = defaultRateLimiterConfig)","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.RateLimiterConfigBuilder","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config-builder/-rate-limiter-config-builder.html","searchKeys":["RateLimiterConfigBuilder","constructor(baseConfig: RateLimiterConfig = defaultRateLimiterConfig)","kresil.ratelimiter.config.RateLimiterConfigBuilder.RateLimiterConfigBuilder"]},{"name":"constructor(baseConfig: RetryConfig = defaultRetryConfig)","description":"kresil.retry.config.RetryConfigBuilder.RetryConfigBuilder","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/-retry-config-builder.html","searchKeys":["RetryConfigBuilder","constructor(baseConfig: RetryConfig = defaultRetryConfig)","kresil.retry.config.RetryConfigBuilder.RetryConfigBuilder"]},{"name":"constructor(capacity: Int)","description":"kresil.core.utils.RingBuffer.RingBuffer","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/-ring-buffer.html","searchKeys":["RingBuffer","constructor(capacity: Int)","kresil.core.utils.RingBuffer.RingBuffer"]},{"name":"constructor(capacity: Int, minimumThroughput: Int)","description":"kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.CountBasedSlidingWindow","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-count-based-sliding-window/-count-based-sliding-window.html","searchKeys":["CountBasedSlidingWindow","constructor(capacity: Int, minimumThroughput: Int)","kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.CountBasedSlidingWindow"]},{"name":"constructor(config: CircuitBreakerConfig = defaultCircuitBreakerConfig())","description":"kresil.circuitbreaker.CircuitBreaker.CircuitBreaker","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/-circuit-breaker.html","searchKeys":["CircuitBreaker","constructor(config: CircuitBreakerConfig = defaultCircuitBreakerConfig())","kresil.circuitbreaker.CircuitBreaker.CircuitBreaker"]},{"name":"constructor(config: RateLimiterConfig = defaultRateLimiterConfig(), semaphoreState: SemaphoreState = InMemorySemaphoreState())","description":"kresil.ratelimiter.RateLimiter.RateLimiter","location":"kresil-lib/lib/kresil.ratelimiter/-rate-limiter/-rate-limiter.html","searchKeys":["RateLimiter","constructor(config: RateLimiterConfig = defaultRateLimiterConfig(), semaphoreState: SemaphoreState = InMemorySemaphoreState())","kresil.ratelimiter.RateLimiter.RateLimiter"]},{"name":"constructor(config: RateLimiterConfig = defaultRateLimiterConfig(), semaphoreStateFactory: () -> SemaphoreState = { InMemorySemaphoreState() })","description":"kresil.ratelimiter.KeyedRateLimiter.KeyedRateLimiter","location":"kresil-lib/lib/kresil.ratelimiter/-keyed-rate-limiter/-keyed-rate-limiter.html","searchKeys":["KeyedRateLimiter","constructor(config: RateLimiterConfig = defaultRateLimiterConfig(), semaphoreStateFactory: () -> SemaphoreState = { InMemorySemaphoreState() })","kresil.ratelimiter.KeyedRateLimiter.KeyedRateLimiter"]},{"name":"constructor(config: RateLimiterConfig, semaphoreState: SemaphoreState)","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.SemaphoreBasedRateLimiter","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/-semaphore-based-rate-limiter.html","searchKeys":["SemaphoreBasedRateLimiter","constructor(config: RateLimiterConfig, semaphoreState: SemaphoreState)","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.SemaphoreBasedRateLimiter"]},{"name":"constructor(config: RateLimiterConfig, semaphoreState: SemaphoreState)","description":"kresil.ratelimiter.semaphore.implementations.FixedWindowSemaphoreBasedRateLimiter.FixedWindowSemaphoreBasedRateLimiter","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-fixed-window-semaphore-based-rate-limiter/-fixed-window-semaphore-based-rate-limiter.html","searchKeys":["FixedWindowSemaphoreBasedRateLimiter","constructor(config: RateLimiterConfig, semaphoreState: SemaphoreState)","kresil.ratelimiter.semaphore.implementations.FixedWindowSemaphoreBasedRateLimiter.FixedWindowSemaphoreBasedRateLimiter"]},{"name":"constructor(config: RateLimiterConfig, semaphoreState: SemaphoreState)","description":"kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.SlidingWindowSemaphoreBasedRateLimiter","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-sliding-window-semaphore-based-rate-limiter/-sliding-window-semaphore-based-rate-limiter.html","searchKeys":["SlidingWindowSemaphoreBasedRateLimiter","constructor(config: RateLimiterConfig, semaphoreState: SemaphoreState)","kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.SlidingWindowSemaphoreBasedRateLimiter"]},{"name":"constructor(config: RateLimiterConfig, semaphoreState: SemaphoreState)","description":"kresil.ratelimiter.semaphore.implementations.TokenBucketSemaphoreBasedRateLimiter.TokenBucketSemaphoreBasedRateLimiter","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-token-bucket-semaphore-based-rate-limiter/-token-bucket-semaphore-based-rate-limiter.html","searchKeys":["TokenBucketSemaphoreBasedRateLimiter","constructor(config: RateLimiterConfig, semaphoreState: SemaphoreState)","kresil.ratelimiter.semaphore.implementations.TokenBucketSemaphoreBasedRateLimiter.TokenBucketSemaphoreBasedRateLimiter"]},{"name":"constructor(config: RetryConfig = defaultRetryConfig())","description":"kresil.retry.Retry.Retry","location":"kresil-lib/lib/kresil.retry/-retry/-retry.html","searchKeys":["Retry","constructor(config: RetryConfig = defaultRetryConfig())","kresil.retry.Retry.Retry"]},{"name":"constructor(config: RetryConfig, eventFlow: MutableSharedFlow<RetryEvent>)","description":"kresil.retry.context.RetryAsyncContextImpl.RetryAsyncContextImpl","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/-retry-async-context-impl.html","searchKeys":["RetryAsyncContextImpl","constructor(config: RetryConfig, eventFlow: MutableSharedFlow<RetryEvent>)","kresil.retry.context.RetryAsyncContextImpl.RetryAsyncContextImpl"]},{"name":"constructor(failureRate: Double)","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedFailure.RecordedFailure","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/-recorded-failure/-recorded-failure.html","searchKeys":["RecordedFailure","constructor(failureRate: Double)","kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedFailure.RecordedFailure"]},{"name":"constructor(failureRate: Double)","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedSuccess.RecordedSuccess","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/-recorded-success/-recorded-success.html","searchKeys":["RecordedSuccess","constructor(failureRate: Double)","kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedSuccess.RecordedSuccess"]},{"name":"constructor(failureRateThreshold: Double, slidingWindow: SlidingWindow, permittedNumberOfCallsInHalfOpenState: Int, delayStrategyInOpenState: CtxDelayStrategy<Unit>, maxWaitDurationInHalfOpenState: Duration, recordExceptionPredicate: OnExceptionPredicate, recordResultPredicate: OnResultPredicate)","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.CircuitBreakerConfig","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config/-circuit-breaker-config.html","searchKeys":["CircuitBreakerConfig","constructor(failureRateThreshold: Double, slidingWindow: SlidingWindow, permittedNumberOfCallsInHalfOpenState: Int, delayStrategyInOpenState: CtxDelayStrategy<Unit>, maxWaitDurationInHalfOpenState: Duration, recordExceptionPredicate: OnExceptionPredicate, recordResultPredicate: OnResultPredicate)","kresil.circuitbreaker.config.CircuitBreakerConfig.CircuitBreakerConfig"]},{"name":"constructor(fromState: CircuitBreakerState, toState: CircuitBreakerState, manual: Boolean = false)","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.StateTransition","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/-state-transition/-state-transition.html","searchKeys":["StateTransition","constructor(fromState: CircuitBreakerState, toState: CircuitBreakerState, manual: Boolean = false)","kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.StateTransition"]},{"name":"constructor(lastThrowable: Throwable? = null, lastResult: Any? = null)","description":"kresil.retry.delay.RetryDelayStrategyContext.RetryDelayStrategyContext","location":"kresil-lib/lib/kresil.retry.delay/-retry-delay-strategy-context/-retry-delay-strategy-context.html","searchKeys":["RetryDelayStrategyContext","constructor(lastThrowable: Throwable? = null, lastResult: Any? = null)","kresil.retry.delay.RetryDelayStrategyContext.RetryDelayStrategyContext"]},{"name":"constructor(maxAttempts: Int, retryPredicate: OnExceptionPredicate, retryOnResultPredicate: OnResultPredicate, delayStrategy: RetryDelayStrategy, exceptionHandler: ExceptionHandler)","description":"kresil.retry.config.RetryConfig.RetryConfig","location":"kresil-lib/lib/kresil.retry.config/-retry-config/-retry-config.html","searchKeys":["RetryConfig","constructor(maxAttempts: Int, retryPredicate: OnExceptionPredicate, retryOnResultPredicate: OnResultPredicate, delayStrategy: RetryDelayStrategy, exceptionHandler: ExceptionHandler)","kresil.retry.config.RetryConfig.RetryConfig"]},{"name":"constructor(maybeValue: T?)","description":"kresil.core.utils.CircularDoublyLinkedList.NodeImpl.NodeImpl","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/-node-impl/-node-impl.html","searchKeys":["NodeImpl","constructor(maybeValue: T?)","kresil.core.utils.CircularDoublyLinkedList.NodeImpl.NodeImpl"]},{"name":"constructor(maybeValue: T?, n: CircularDoublyLinkedList.NodeImpl<T>, p: CircularDoublyLinkedList.NodeImpl<T>)","description":"kresil.core.utils.CircularDoublyLinkedList.NodeImpl.NodeImpl","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/-node-impl/-node-impl.html","searchKeys":["NodeImpl","constructor(maybeValue: T?, n: CircularDoublyLinkedList.NodeImpl<T>, p: CircularDoublyLinkedList.NodeImpl<T>)","kresil.core.utils.CircularDoublyLinkedList.NodeImpl.NodeImpl"]},{"name":"constructor(message: String = \"A call to a protected operation by a circuit breaker was not permitted.\")","description":"kresil.circuitbreaker.exceptions.CallNotPermittedException.CallNotPermittedException","location":"kresil-lib/lib/kresil.circuitbreaker.exceptions/-call-not-permitted-exception/-call-not-permitted-exception.html","searchKeys":["CallNotPermittedException","constructor(message: String = \"A call to a protected operation by a circuit breaker was not permitted.\")","kresil.circuitbreaker.exceptions.CallNotPermittedException.CallNotPermittedException"]},{"name":"constructor(permits: Int)","description":"kresil.ratelimiter.event.RateLimiterEvent.Success.Success","location":"kresil-lib/lib/kresil.ratelimiter.event/-rate-limiter-event/-success/-success.html","searchKeys":["Success","constructor(permits: Int)","kresil.ratelimiter.event.RateLimiterEvent.Success.Success"]},{"name":"constructor(permits: Int, continuation: Continuation<Unit>, canResume: Boolean = false)","description":"kresil.ratelimiter.semaphore.request.RateLimitedRequest.RateLimitedRequest","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.request/-rate-limited-request/-rate-limited-request.html","searchKeys":["RateLimitedRequest","constructor(permits: Int, continuation: Continuation<Unit>, canResume: Boolean = false)","kresil.ratelimiter.semaphore.request.RateLimitedRequest.RateLimitedRequest"]},{"name":"constructor(permits: Int, retryAfter: Duration)","description":"kresil.ratelimiter.event.RateLimiterEvent.Reject.Reject","location":"kresil-lib/lib/kresil.ratelimiter.event/-rate-limiter-event/-reject/-reject.html","searchKeys":["Reject","constructor(permits: Int, retryAfter: Duration)","kresil.ratelimiter.event.RateLimiterEvent.Reject.Reject"]},{"name":"constructor(permits: Int, timeout: Duration)","description":"kresil.ratelimiter.event.RateLimiterEvent.Queued.Queued","location":"kresil-lib/lib/kresil.ratelimiter.event/-rate-limiter-event/-queued/-queued.html","searchKeys":["Queued","constructor(permits: Int, timeout: Duration)","kresil.ratelimiter.event.RateLimiterEvent.Queued.Queued"]},{"name":"constructor(retryAfter: Duration)","description":"kresil.ratelimiter.exceptions.RateLimiterRejectedException.RateLimiterRejectedException","location":"kresil-lib/lib/kresil.ratelimiter.exceptions/-rate-limiter-rejected-exception/-rate-limiter-rejected-exception.html","searchKeys":["RateLimiterRejectedException","constructor(retryAfter: Duration)","kresil.ratelimiter.exceptions.RateLimiterRejectedException.RateLimiterRejectedException"]},{"name":"constructor(size: Int, minimumThroughput: Int, type: SlidingWindowType)","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindow.SlidingWindow","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window/-sliding-window.html","searchKeys":["SlidingWindow","constructor(size: Int, minimumThroughput: Int, type: SlidingWindowType)","kresil.circuitbreaker.state.slidingwindow.SlidingWindow.SlidingWindow"]},{"name":"constructor(slidingWindow: FailureRateSlidingWindow<T>, config: CircuitBreakerConfig, events: MutableSharedFlow<CircuitBreakerEvent>)","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.CircuitBreakerStateReducer","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/-circuit-breaker-state-reducer.html","searchKeys":["CircuitBreakerStateReducer","constructor(slidingWindow: FailureRateSlidingWindow<T>, config: CircuitBreakerConfig, events: MutableSharedFlow<CircuitBreakerEvent>)","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.CircuitBreakerStateReducer"]},{"name":"constructor(throwable: Throwable)","description":"kresil.retry.event.RetryEvent.RetryOnError.RetryOnError","location":"kresil-lib/lib/kresil.retry.event/-retry-event/-retry-on-error/-retry-on-error.html","searchKeys":["RetryOnError","constructor(throwable: Throwable)","kresil.retry.event.RetryEvent.RetryOnError.RetryOnError"]},{"name":"constructor(throwable: Throwable)","description":"kresil.retry.event.RetryEvent.RetryOnIgnoredError.RetryOnIgnoredError","location":"kresil-lib/lib/kresil.retry.event/-retry-event/-retry-on-ignored-error/-retry-on-ignored-error.html","searchKeys":["RetryOnIgnoredError","constructor(throwable: Throwable)","kresil.retry.event.RetryEvent.RetryOnIgnoredError.RetryOnIgnoredError"]},{"name":"constructor(totalPermits: Int, replenishmentPeriod: Duration, queueLength: Int)","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.FixedWindowCounter","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-fixed-window-counter/-fixed-window-counter.html","searchKeys":["FixedWindowCounter","constructor(totalPermits: Int, replenishmentPeriod: Duration, queueLength: Int)","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.FixedWindowCounter"]},{"name":"constructor(totalPermits: Int, replenishmentPeriod: Duration, queueLength: Int)","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.TokenBucket","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-token-bucket/-token-bucket.html","searchKeys":["TokenBucket","constructor(totalPermits: Int, replenishmentPeriod: Duration, queueLength: Int)","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.TokenBucket"]},{"name":"constructor(totalPermits: Int, replenishmentPeriod: Duration, segments: Int, queueLength: Int)","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.SlidingWindowCounter","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-sliding-window-counter/-sliding-window-counter.html","searchKeys":["SlidingWindowCounter","constructor(totalPermits: Int, replenishmentPeriod: Duration, segments: Int, queueLength: Int)","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.SlidingWindowCounter"]},{"name":"data class CircuitBreakerConfig(val failureRateThreshold: Double, val slidingWindow: SlidingWindow, val permittedNumberOfCallsInHalfOpenState: Int, val delayStrategyInOpenState: CtxDelayStrategy<Unit>, val maxWaitDurationInHalfOpenState: Duration, val recordExceptionPredicate: OnExceptionPredicate, val recordResultPredicate: OnResultPredicate)","description":"kresil.circuitbreaker.config.CircuitBreakerConfig","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config/index.html","searchKeys":["CircuitBreakerConfig","data class CircuitBreakerConfig(val failureRateThreshold: Double, val slidingWindow: SlidingWindow, val permittedNumberOfCallsInHalfOpenState: Int, val delayStrategyInOpenState: CtxDelayStrategy<Unit>, val maxWaitDurationInHalfOpenState: Duration, val recordExceptionPredicate: OnExceptionPredicate, val recordResultPredicate: OnResultPredicate)","kresil.circuitbreaker.config.CircuitBreakerConfig"]},{"name":"data class FixedWindowCounter(val totalPermits: Int, val replenishmentPeriod: Duration, val queueLength: Int) : RateLimitingAlgorithm","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-fixed-window-counter/index.html","searchKeys":["FixedWindowCounter","data class FixedWindowCounter(val totalPermits: Int, val replenishmentPeriod: Duration, val queueLength: Int) : RateLimitingAlgorithm","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter"]},{"name":"data class HalfOpen(val nrOfCallsAttempted: Int, val startTimerMark: ComparableTimeMark?, val nrOfTransitionsToOpenStateInACycle: Int) : CircuitBreakerState","description":"kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-half-open/index.html","searchKeys":["HalfOpen","data class HalfOpen(val nrOfCallsAttempted: Int, val startTimerMark: ComparableTimeMark?, val nrOfTransitionsToOpenStateInACycle: Int) : CircuitBreakerState","kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen"]},{"name":"data class Open(val delayDuration: Duration, val startTimerMark: ComparableTimeMark, val nrOfTransitionsToOpenStateInACycle: Int) : CircuitBreakerState","description":"kresil.circuitbreaker.state.CircuitBreakerState.Open","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-open/index.html","searchKeys":["Open","data class Open(val delayDuration: Duration, val startTimerMark: ComparableTimeMark, val nrOfTransitionsToOpenStateInACycle: Int) : CircuitBreakerState","kresil.circuitbreaker.state.CircuitBreakerState.Open"]},{"name":"data class Queued(val permits: Int, val timeout: Duration) : RateLimiterEvent","description":"kresil.ratelimiter.event.RateLimiterEvent.Queued","location":"kresil-lib/lib/kresil.ratelimiter.event/-rate-limiter-event/-queued/index.html","searchKeys":["Queued","data class Queued(val permits: Int, val timeout: Duration) : RateLimiterEvent","kresil.ratelimiter.event.RateLimiterEvent.Queued"]},{"name":"data class RateLimiterConfig(val algorithm: RateLimitingAlgorithm, val baseTimeoutDuration: Duration, val onRejected: ExceptionHandler)","description":"kresil.ratelimiter.config.RateLimiterConfig","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config/index.html","searchKeys":["RateLimiterConfig","data class RateLimiterConfig(val algorithm: RateLimitingAlgorithm, val baseTimeoutDuration: Duration, val onRejected: ExceptionHandler)","kresil.ratelimiter.config.RateLimiterConfig"]},{"name":"data class RecordedFailure(val failureRate: Double) : CircuitBreakerEvent","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedFailure","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/-recorded-failure/index.html","searchKeys":["RecordedFailure","data class RecordedFailure(val failureRate: Double) : CircuitBreakerEvent","kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedFailure"]},{"name":"data class RecordedSuccess(val failureRate: Double) : CircuitBreakerEvent","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedSuccess","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/-recorded-success/index.html","searchKeys":["RecordedSuccess","data class RecordedSuccess(val failureRate: Double) : CircuitBreakerEvent","kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedSuccess"]},{"name":"data class Reject(val permits: Int, val retryAfter: Duration) : RateLimiterEvent","description":"kresil.ratelimiter.event.RateLimiterEvent.Reject","location":"kresil-lib/lib/kresil.ratelimiter.event/-rate-limiter-event/-reject/index.html","searchKeys":["Reject","data class Reject(val permits: Int, val retryAfter: Duration) : RateLimiterEvent","kresil.ratelimiter.event.RateLimiterEvent.Reject"]},{"name":"data class RetryConfig(val maxAttempts: Int, val retryPredicate: OnExceptionPredicate, val retryOnResultPredicate: OnResultPredicate, val delayStrategy: RetryDelayStrategy, val exceptionHandler: ExceptionHandler)","description":"kresil.retry.config.RetryConfig","location":"kresil-lib/lib/kresil.retry.config/-retry-config/index.html","searchKeys":["RetryConfig","data class RetryConfig(val maxAttempts: Int, val retryPredicate: OnExceptionPredicate, val retryOnResultPredicate: OnResultPredicate, val delayStrategy: RetryDelayStrategy, val exceptionHandler: ExceptionHandler)","kresil.retry.config.RetryConfig"]},{"name":"data class RetryContext(val attempt: Int)","description":"kresil.retry.context.RetryContext","location":"kresil-lib/lib/kresil.retry.context/-retry-context/index.html","searchKeys":["RetryContext","data class RetryContext(val attempt: Int)","kresil.retry.context.RetryContext"]},{"name":"data class RetryDelayStrategyContext(val lastThrowable: Throwable? = null, val lastResult: Any? = null)","description":"kresil.retry.delay.RetryDelayStrategyContext","location":"kresil-lib/lib/kresil.retry.delay/-retry-delay-strategy-context/index.html","searchKeys":["RetryDelayStrategyContext","data class RetryDelayStrategyContext(val lastThrowable: Throwable? = null, val lastResult: Any? = null)","kresil.retry.delay.RetryDelayStrategyContext"]},{"name":"data class RetryOnError(val throwable: Throwable) : RetryEvent","description":"kresil.retry.event.RetryEvent.RetryOnError","location":"kresil-lib/lib/kresil.retry.event/-retry-event/-retry-on-error/index.html","searchKeys":["RetryOnError","data class RetryOnError(val throwable: Throwable) : RetryEvent","kresil.retry.event.RetryEvent.RetryOnError"]},{"name":"data class RetryOnIgnoredError(val throwable: Throwable) : RetryEvent","description":"kresil.retry.event.RetryEvent.RetryOnIgnoredError","location":"kresil-lib/lib/kresil.retry.event/-retry-event/-retry-on-ignored-error/index.html","searchKeys":["RetryOnIgnoredError","data class RetryOnIgnoredError(val throwable: Throwable) : RetryEvent","kresil.retry.event.RetryEvent.RetryOnIgnoredError"]},{"name":"data class RetryOnRetry(val attempt: Int) : RetryEvent","description":"kresil.retry.event.RetryEvent.RetryOnRetry","location":"kresil-lib/lib/kresil.retry.event/-retry-event/-retry-on-retry/index.html","searchKeys":["RetryOnRetry","data class RetryOnRetry(val attempt: Int) : RetryEvent","kresil.retry.event.RetryEvent.RetryOnRetry"]},{"name":"data class SlidingWindow(val size: Int, val minimumThroughput: Int, val type: SlidingWindowType)","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindow","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window/index.html","searchKeys":["SlidingWindow","data class SlidingWindow(val size: Int, val minimumThroughput: Int, val type: SlidingWindowType)","kresil.circuitbreaker.state.slidingwindow.SlidingWindow"]},{"name":"data class SlidingWindowCounter(val totalPermits: Int, val replenishmentPeriod: Duration, val segments: Int, val queueLength: Int) : RateLimitingAlgorithm","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-sliding-window-counter/index.html","searchKeys":["SlidingWindowCounter","data class SlidingWindowCounter(val totalPermits: Int, val replenishmentPeriod: Duration, val segments: Int, val queueLength: Int) : RateLimitingAlgorithm","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter"]},{"name":"data class StateTransition(val fromState: CircuitBreakerState, val toState: CircuitBreakerState, val manual: Boolean = false) : CircuitBreakerEvent","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/-state-transition/index.html","searchKeys":["StateTransition","data class StateTransition(val fromState: CircuitBreakerState, val toState: CircuitBreakerState, val manual: Boolean = false) : CircuitBreakerEvent","kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition"]},{"name":"data class Success(val permits: Int) : RateLimiterEvent","description":"kresil.ratelimiter.event.RateLimiterEvent.Success","location":"kresil-lib/lib/kresil.ratelimiter.event/-rate-limiter-event/-success/index.html","searchKeys":["Success","data class Success(val permits: Int) : RateLimiterEvent","kresil.ratelimiter.event.RateLimiterEvent.Success"]},{"name":"data class TokenBucket(val totalPermits: Int, val replenishmentPeriod: Duration, val queueLength: Int) : RateLimitingAlgorithm","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-token-bucket/index.html","searchKeys":["TokenBucket","data class TokenBucket(val totalPermits: Int, val replenishmentPeriod: Duration, val queueLength: Int) : RateLimitingAlgorithm","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket"]},{"name":"data object CallNotPermitted : CircuitBreakerEvent","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.CallNotPermitted","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/-call-not-permitted/index.html","searchKeys":["CallNotPermitted","data object CallNotPermitted : CircuitBreakerEvent","kresil.circuitbreaker.event.CircuitBreakerEvent.CallNotPermitted"]},{"name":"data object Closed : CircuitBreakerState","description":"kresil.circuitbreaker.state.CircuitBreakerState.Closed","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-closed/index.html","searchKeys":["Closed","data object Closed : CircuitBreakerState","kresil.circuitbreaker.state.CircuitBreakerState.Closed"]},{"name":"data object Reset : CircuitBreakerEvent","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.Reset","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/-reset/index.html","searchKeys":["Reset","data object Reset : CircuitBreakerEvent","kresil.circuitbreaker.event.CircuitBreakerEvent.Reset"]},{"name":"data object RetryOnSuccess : RetryEvent","description":"kresil.retry.event.RetryEvent.RetryOnSuccess","location":"kresil-lib/lib/kresil.retry.event/-retry-event/-retry-on-success/index.html","searchKeys":["RetryOnSuccess","data object RetryOnSuccess : RetryEvent","kresil.retry.event.RetryEvent.RetryOnSuccess"]},{"name":"enum CircuitBreakerReducerEvent(val isTransitionEvent: Boolean) : Enum<CircuitBreakerReducerEvent> ","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/index.html","searchKeys":["CircuitBreakerReducerEvent","enum CircuitBreakerReducerEvent(val isTransitionEvent: Boolean) : Enum<CircuitBreakerReducerEvent> ","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent"]},{"name":"enum SlidingWindowType : Enum<SlidingWindowType> ","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindowType","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window-type/index.html","searchKeys":["SlidingWindowType","enum SlidingWindowType : Enum<SlidingWindowType> ","kresil.circuitbreaker.state.slidingwindow.SlidingWindowType"]},{"name":"fun <TContext> customProvider(provider: CtxDelayProvider<TContext>): CtxDelayStrategy<TContext>","description":"kresil.core.delay.strategy.DelayStrategyOptions.customProvider","location":"kresil-lib/lib/kresil.core.delay.strategy/-delay-strategy-options/custom-provider.html","searchKeys":["customProvider","fun <TContext> customProvider(provider: CtxDelayProvider<TContext>): CtxDelayStrategy<TContext>","kresil.core.delay.strategy.DelayStrategyOptions.customProvider"]},{"name":"fun DelayStrategy.toEmptyCtxDelayStrategy(): CtxDelayStrategy<Unit>","description":"kresil.core.delay.strategy.DelayStrategyOptions.toEmptyCtxDelayStrategy","location":"kresil-lib/lib/kresil.core.delay.strategy/-delay-strategy-options/to-empty-ctx-delay-strategy.html","searchKeys":["toEmptyCtxDelayStrategy","fun DelayStrategy.toEmptyCtxDelayStrategy(): CtxDelayStrategy<Unit>","kresil.core.delay.strategy.DelayStrategyOptions.toEmptyCtxDelayStrategy"]},{"name":"fun add(element: T)","description":"kresil.core.utils.RingBuffer.add","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/add.html","searchKeys":["add","fun add(element: T)","kresil.core.utils.RingBuffer.add"]},{"name":"fun algorithm(algorithm: RateLimitingAlgorithm)","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.algorithm","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config-builder/algorithm.html","searchKeys":["algorithm","fun algorithm(algorithm: RateLimitingAlgorithm)","kresil.ratelimiter.config.RateLimiterConfigBuilder.algorithm"]},{"name":"fun circuitBreakerConfig(baseConfig: CircuitBreakerConfig, configure: CircuitBreakerConfigBuilder.() -> Unit): CircuitBreakerConfig","description":"kresil.circuitbreaker.config.circuitBreakerConfig","location":"kresil-lib/lib/kresil.circuitbreaker.config/circuit-breaker-config.html","searchKeys":["circuitBreakerConfig","fun circuitBreakerConfig(baseConfig: CircuitBreakerConfig, configure: CircuitBreakerConfigBuilder.() -> Unit): CircuitBreakerConfig","kresil.circuitbreaker.config.circuitBreakerConfig"]},{"name":"fun circuitBreakerConfig(configure: CircuitBreakerConfigBuilder.() -> Unit): CircuitBreakerConfig","description":"kresil.circuitbreaker.config.circuitBreakerConfig","location":"kresil-lib/lib/kresil.circuitbreaker.config/circuit-breaker-config.html","searchKeys":["circuitBreakerConfig","fun circuitBreakerConfig(configure: CircuitBreakerConfigBuilder.() -> Unit): CircuitBreakerConfig","kresil.circuitbreaker.config.circuitBreakerConfig"]},{"name":"fun clear()","description":"kresil.core.utils.RingBuffer.clear","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/clear.html","searchKeys":["clear","fun clear()","kresil.core.utils.RingBuffer.clear"]},{"name":"fun constant(delay: Duration, randomizationFactor: Double = 0.0): DelayStrategy","description":"kresil.core.delay.strategy.DelayStrategyOptions.constant","location":"kresil-lib/lib/kresil.core.delay.strategy/-delay-strategy-options/constant.html","searchKeys":["constant","fun constant(delay: Duration, randomizationFactor: Double = 0.0): DelayStrategy","kresil.core.delay.strategy.DelayStrategyOptions.constant"]},{"name":"fun constantDelay(duration: Duration, randomizationFactor: Double = 0.0)","description":"kresil.retry.config.RetryConfigBuilder.constantDelay","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/constant-delay.html","searchKeys":["constantDelay","fun constantDelay(duration: Duration, randomizationFactor: Double = 0.0)","kresil.retry.config.RetryConfigBuilder.constantDelay"]},{"name":"fun constantDelayInOpenState(delay: Duration)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.constantDelayInOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/constant-delay-in-open-state.html","searchKeys":["constantDelayInOpenState","fun constantDelayInOpenState(delay: Duration)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.constantDelayInOpenState"]},{"name":"fun customDelay(delayStrategy: RetryDelayStrategy)","description":"kresil.retry.config.RetryConfigBuilder.customDelay","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/custom-delay.html","searchKeys":["customDelay","fun customDelay(delayStrategy: RetryDelayStrategy)","kresil.retry.config.RetryConfigBuilder.customDelay"]},{"name":"fun customDelayInOpenState(delayStrategyInOpenState: DelayStrategy)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.customDelayInOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/custom-delay-in-open-state.html","searchKeys":["customDelayInOpenState","fun customDelayInOpenState(delayStrategyInOpenState: DelayStrategy)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.customDelayInOpenState"]},{"name":"fun customDelayProvider(delayProvider: RetryCtxDelayProvider)","description":"kresil.retry.config.RetryConfigBuilder.customDelayProvider","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/custom-delay-provider.html","searchKeys":["customDelayProvider","fun customDelayProvider(delayProvider: RetryCtxDelayProvider)","kresil.retry.config.RetryConfigBuilder.customDelayProvider"]},{"name":"fun customDelayProviderInOpenState(delayProvider: DelayProvider)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.customDelayProviderInOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/custom-delay-provider-in-open-state.html","searchKeys":["customDelayProviderInOpenState","fun customDelayProviderInOpenState(delayProvider: DelayProvider)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.customDelayProviderInOpenState"]},{"name":"fun customProvider(provider: DelayProvider): DelayStrategy","description":"kresil.core.delay.strategy.DelayStrategyOptions.customProvider","location":"kresil-lib/lib/kresil.core.delay.strategy/-delay-strategy-options/custom-provider.html","searchKeys":["customProvider","fun customProvider(provider: DelayProvider): DelayStrategy","kresil.core.delay.strategy.DelayStrategyOptions.customProvider"]},{"name":"fun defaultCircuitBreakerConfig(): CircuitBreakerConfig","description":"kresil.circuitbreaker.config.defaultCircuitBreakerConfig","location":"kresil-lib/lib/kresil.circuitbreaker.config/default-circuit-breaker-config.html","searchKeys":["defaultCircuitBreakerConfig","fun defaultCircuitBreakerConfig(): CircuitBreakerConfig","kresil.circuitbreaker.config.defaultCircuitBreakerConfig"]},{"name":"fun defaultRateLimiterConfig(): RateLimiterConfig","description":"kresil.ratelimiter.config.defaultRateLimiterConfig","location":"kresil-lib/lib/kresil.ratelimiter.config/default-rate-limiter-config.html","searchKeys":["defaultRateLimiterConfig","fun defaultRateLimiterConfig(): RateLimiterConfig","kresil.ratelimiter.config.defaultRateLimiterConfig"]},{"name":"fun defaultRetryConfig(): RetryConfig","description":"kresil.retry.config.defaultRetryConfig","location":"kresil-lib/lib/kresil.retry.config/default-retry-config.html","searchKeys":["defaultRetryConfig","fun defaultRetryConfig(): RetryConfig","kresil.retry.config.defaultRetryConfig"]},{"name":"fun disableExceptionHandler()","description":"kresil.retry.config.RetryConfigBuilder.disableExceptionHandler","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/disable-exception-handler.html","searchKeys":["disableExceptionHandler","fun disableExceptionHandler()","kresil.retry.config.RetryConfigBuilder.disableExceptionHandler"]},{"name":"fun exceptionHandler(handler: ExceptionHandler)","description":"kresil.retry.config.RetryConfigBuilder.exceptionHandler","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/exception-handler.html","searchKeys":["exceptionHandler","fun exceptionHandler(handler: ExceptionHandler)","kresil.retry.config.RetryConfigBuilder.exceptionHandler"]},{"name":"fun exponential(initialDelay: Duration, maxDelay: Duration = Duration.INFINITE, multiplier: Double = 2.0, randomizationFactor: Double = 0.0): DelayStrategy","description":"kresil.core.delay.strategy.DelayStrategyOptions.exponential","location":"kresil-lib/lib/kresil.core.delay.strategy/-delay-strategy-options/exponential.html","searchKeys":["exponential","fun exponential(initialDelay: Duration, maxDelay: Duration = Duration.INFINITE, multiplier: Double = 2.0, randomizationFactor: Double = 0.0): DelayStrategy","kresil.core.delay.strategy.DelayStrategyOptions.exponential"]},{"name":"fun exponentialDelay(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 2.0, maxDelay: Duration = 1.minutes, randomizationFactor: Double = 0.0)","description":"kresil.retry.config.RetryConfigBuilder.exponentialDelay","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/exponential-delay.html","searchKeys":["exponentialDelay","fun exponentialDelay(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 2.0, maxDelay: Duration = 1.minutes, randomizationFactor: Double = 0.0)","kresil.retry.config.RetryConfigBuilder.exponentialDelay"]},{"name":"fun exponentialDelayInOpenState(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 2.0, maxDelay: Duration = 1.minutes)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.exponentialDelayInOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/exponential-delay-in-open-state.html","searchKeys":["exponentialDelayInOpenState","fun exponentialDelayInOpenState(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 2.0, maxDelay: Duration = 1.minutes)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.exponentialDelayInOpenState"]},{"name":"fun interface CtxDelayProvider<TContext>","description":"kresil.core.delay.provider.CtxDelayProvider","location":"kresil-lib/lib/kresil.core.delay.provider/-ctx-delay-provider/index.html","searchKeys":["CtxDelayProvider","fun interface CtxDelayProvider<TContext>","kresil.core.delay.provider.CtxDelayProvider"]},{"name":"fun interface DelayProvider","description":"kresil.core.delay.provider.DelayProvider","location":"kresil-lib/lib/kresil.core.delay.provider/-delay-provider/index.html","searchKeys":["DelayProvider","fun interface DelayProvider","kresil.core.delay.provider.DelayProvider"]},{"name":"fun interface RetryCtxDelayProvider : CtxDelayProvider<RetryDelayStrategyContext> ","description":"kresil.retry.delay.RetryCtxDelayProvider","location":"kresil-lib/lib/kresil.retry.delay/-retry-ctx-delay-provider/index.html","searchKeys":["RetryCtxDelayProvider","fun interface RetryCtxDelayProvider : CtxDelayProvider<RetryDelayStrategyContext> ","kresil.retry.delay.RetryCtxDelayProvider"]},{"name":"fun isHeadNode(node: Node<T>): Boolean","description":"kresil.core.utils.CircularDoublyLinkedList.isHeadNode","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/is-head-node.html","searchKeys":["isHeadNode","fun isHeadNode(node: Node<T>): Boolean","kresil.core.utils.CircularDoublyLinkedList.isHeadNode"]},{"name":"fun linear(initialDelay: Duration, multiplier: Double = 1.0, maxDelay: Duration = Duration.INFINITE, randomizationFactor: Double = 0.0): DelayStrategy","description":"kresil.core.delay.strategy.DelayStrategyOptions.linear","location":"kresil-lib/lib/kresil.core.delay.strategy/-delay-strategy-options/linear.html","searchKeys":["linear","fun linear(initialDelay: Duration, multiplier: Double = 1.0, maxDelay: Duration = Duration.INFINITE, randomizationFactor: Double = 0.0): DelayStrategy","kresil.core.delay.strategy.DelayStrategyOptions.linear"]},{"name":"fun linearDelay(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 1.0, maxDelay: Duration = 1.minutes, randomizationFactor: Double = 0.0)","description":"kresil.retry.config.RetryConfigBuilder.linearDelay","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/linear-delay.html","searchKeys":["linearDelay","fun linearDelay(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 1.0, maxDelay: Duration = 1.minutes, randomizationFactor: Double = 0.0)","kresil.retry.config.RetryConfigBuilder.linearDelay"]},{"name":"fun linearDelayInOpenState(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 1.0, maxDelay: Duration = 1.minutes)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.linearDelayInOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/linear-delay-in-open-state.html","searchKeys":["linearDelayInOpenState","fun linearDelayInOpenState(initialDelay: Duration = 500L.milliseconds, multiplier: Double = 1.0, maxDelay: Duration = 1.minutes)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.linearDelayInOpenState"]},{"name":"fun noDelay()","description":"kresil.retry.config.RetryConfigBuilder.noDelay","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/no-delay.html","searchKeys":["noDelay","fun noDelay()","kresil.retry.config.RetryConfigBuilder.noDelay"]},{"name":"fun noDelay(): DelayStrategy","description":"kresil.core.delay.strategy.DelayStrategyOptions.noDelay","location":"kresil-lib/lib/kresil.core.delay.strategy/-delay-strategy-options/no-delay.html","searchKeys":["noDelay","fun noDelay(): DelayStrategy","kresil.core.delay.strategy.DelayStrategyOptions.noDelay"]},{"name":"fun noDelayInOpenState()","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.noDelayInOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/no-delay-in-open-state.html","searchKeys":["noDelayInOpenState","fun noDelayInOpenState()","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.noDelayInOpenState"]},{"name":"fun onRejected(block: ExceptionHandler)","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.onRejected","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config-builder/on-rejected.html","searchKeys":["onRejected","fun onRejected(block: ExceptionHandler)","kresil.ratelimiter.config.RateLimiterConfigBuilder.onRejected"]},{"name":"fun rateLimiterConfig(baseConfig: RateLimiterConfig, configure: RateLimiterConfigBuilder.() -> Unit): RateLimiterConfig","description":"kresil.ratelimiter.config.rateLimiterConfig","location":"kresil-lib/lib/kresil.ratelimiter.config/rate-limiter-config.html","searchKeys":["rateLimiterConfig","fun rateLimiterConfig(baseConfig: RateLimiterConfig, configure: RateLimiterConfigBuilder.() -> Unit): RateLimiterConfig","kresil.ratelimiter.config.rateLimiterConfig"]},{"name":"fun rateLimiterConfig(configure: RateLimiterConfigBuilder.() -> Unit): RateLimiterConfig","description":"kresil.ratelimiter.config.rateLimiterConfig","location":"kresil-lib/lib/kresil.ratelimiter.config/rate-limiter-config.html","searchKeys":["rateLimiterConfig","fun rateLimiterConfig(configure: RateLimiterConfigBuilder.() -> Unit): RateLimiterConfig","kresil.ratelimiter.config.rateLimiterConfig"]},{"name":"fun recordExceptionPredicate(predicate: OnExceptionPredicate)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.recordExceptionPredicate","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/record-exception-predicate.html","searchKeys":["recordExceptionPredicate","fun recordExceptionPredicate(predicate: OnExceptionPredicate)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.recordExceptionPredicate"]},{"name":"fun recordResultPredicate(predicate: OnResultPredicate)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.recordResultPredicate","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/record-result-predicate.html","searchKeys":["recordResultPredicate","fun recordResultPredicate(predicate: OnResultPredicate)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.recordResultPredicate"]},{"name":"fun retryConfig(baseConfig: RetryConfig, configure: RetryConfigBuilder.() -> Unit): RetryConfig","description":"kresil.retry.config.retryConfig","location":"kresil-lib/lib/kresil.retry.config/retry-config.html","searchKeys":["retryConfig","fun retryConfig(baseConfig: RetryConfig, configure: RetryConfigBuilder.() -> Unit): RetryConfig","kresil.retry.config.retryConfig"]},{"name":"fun retryConfig(configure: RetryConfigBuilder.() -> Unit): RetryConfig","description":"kresil.retry.config.retryConfig","location":"kresil-lib/lib/kresil.retry.config/retry-config.html","searchKeys":["retryConfig","fun retryConfig(configure: RetryConfigBuilder.() -> Unit): RetryConfig","kresil.retry.config.retryConfig"]},{"name":"fun retryIf(predicate: OnExceptionPredicate)","description":"kresil.retry.config.RetryConfigBuilder.retryIf","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/retry-if.html","searchKeys":["retryIf","fun retryIf(predicate: OnExceptionPredicate)","kresil.retry.config.RetryConfigBuilder.retryIf"]},{"name":"fun retryOnResult(predicate: OnResultPredicate)","description":"kresil.retry.config.RetryConfigBuilder.retryOnResult","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/retry-on-result.html","searchKeys":["retryOnResult","fun retryOnResult(predicate: OnResultPredicate)","kresil.retry.config.RetryConfigBuilder.retryOnResult"]},{"name":"fun slidingWindow(size: Int, minimumThroughput: Int = 100, type: SlidingWindowType = COUNT_BASED)","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.slidingWindow","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/sliding-window.html","searchKeys":["slidingWindow","fun slidingWindow(size: Int, minimumThroughput: Int = 100, type: SlidingWindowType = COUNT_BASED)","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.slidingWindow"]},{"name":"fun toList(): List<T?>","description":"kresil.core.utils.RingBuffer.toList","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/to-list.html","searchKeys":["toList","fun toList(): List<T?>","kresil.core.utils.RingBuffer.toList"]},{"name":"fun valueOf(value: String): CircuitBreakerReducerEvent","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.valueOf","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CircuitBreakerReducerEvent","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.valueOf"]},{"name":"fun valueOf(value: String): SlidingWindowType","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.valueOf","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SlidingWindowType","kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.valueOf"]},{"name":"fun values(): Array<CircuitBreakerReducerEvent>","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.values","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/values.html","searchKeys":["values","fun values(): Array<CircuitBreakerReducerEvent>","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.values"]},{"name":"fun values(): Array<SlidingWindowType>","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.values","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window-type/values.html","searchKeys":["values","fun values(): Array<SlidingWindowType>","kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.values"]},{"name":"inline fun <A, B, R, T> decorateCtxBiFunction(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxBiFunction<RetryContext, A, B, R>): BiFunction<A, B, T?>","description":"kresil.retry.Retry.decorateCtxBiFunction","location":"kresil-lib/lib/kresil.retry/-retry/decorate-ctx-bi-function.html","searchKeys":["decorateCtxBiFunction","inline fun <A, B, R, T> decorateCtxBiFunction(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxBiFunction<RetryContext, A, B, R>): BiFunction<A, B, T?>","kresil.retry.Retry.decorateCtxBiFunction"]},{"name":"inline fun <A, B, R> decorateBiFunction(crossinline block: BiFunction<A, B, R>): BiFunction<A, B, R?>","description":"kresil.retry.Retry.decorateBiFunction","location":"kresil-lib/lib/kresil.retry/-retry/decorate-bi-function.html","searchKeys":["decorateBiFunction","inline fun <A, B, R> decorateBiFunction(crossinline block: BiFunction<A, B, R>): BiFunction<A, B, R?>","kresil.retry.Retry.decorateBiFunction"]},{"name":"inline fun <A, R, T> decorateCtxFunction(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxFunction<RetryContext, A, R>): Function<A, T?>","description":"kresil.retry.Retry.decorateCtxFunction","location":"kresil-lib/lib/kresil.retry/-retry/decorate-ctx-function.html","searchKeys":["decorateCtxFunction","inline fun <A, R, T> decorateCtxFunction(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxFunction<RetryContext, A, R>): Function<A, T?>","kresil.retry.Retry.decorateCtxFunction"]},{"name":"inline fun <A, R> decorateFunction(crossinline block: Function<A, R>): Function<A, R?>","description":"kresil.retry.Retry.decorateFunction","location":"kresil-lib/lib/kresil.retry/-retry/decorate-function.html","searchKeys":["decorateFunction","inline fun <A, R> decorateFunction(crossinline block: Function<A, R>): Function<A, R?>","kresil.retry.Retry.decorateFunction"]},{"name":"inline fun <R, T> decorateCtxSupplier(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxSupplier<RetryContext, R>): Supplier<T?>","description":"kresil.retry.Retry.decorateCtxSupplier","location":"kresil-lib/lib/kresil.retry/-retry/decorate-ctx-supplier.html","searchKeys":["decorateCtxSupplier","inline fun <R, T> decorateCtxSupplier(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxSupplier<RetryContext, R>): Supplier<T?>","kresil.retry.Retry.decorateCtxSupplier"]},{"name":"inline fun <R> decorateSupplier(crossinline block: Supplier<R>): Supplier<R?>","description":"kresil.retry.Retry.decorateSupplier","location":"kresil-lib/lib/kresil.retry/-retry/decorate-supplier.html","searchKeys":["decorateSupplier","inline fun <R> decorateSupplier(crossinline block: Supplier<R>): Supplier<R?>","kresil.retry.Retry.decorateSupplier"]},{"name":"inline suspend fun <R, T> executeCtxSupplier(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxSupplier<RetryContext, R>): T?","description":"kresil.retry.Retry.executeCtxSupplier","location":"kresil-lib/lib/kresil.retry/-retry/execute-ctx-supplier.html","searchKeys":["executeCtxSupplier","inline suspend fun <R, T> executeCtxSupplier(noinline resultMapper: ResultMapper<R, T> = defaultResultMapper(), crossinline block: CtxSupplier<RetryContext, R>): T?","kresil.retry.Retry.executeCtxSupplier"]},{"name":"inline suspend fun <R> call(key: Key, permits: Int = 1, timeout: Duration = config.baseTimeoutDuration, block: Supplier<R>): R","description":"kresil.ratelimiter.KeyedRateLimiter.call","location":"kresil-lib/lib/kresil.ratelimiter/-keyed-rate-limiter/call.html","searchKeys":["call","inline suspend fun <R> call(key: Key, permits: Int = 1, timeout: Duration = config.baseTimeoutDuration, block: Supplier<R>): R","kresil.ratelimiter.KeyedRateLimiter.call"]},{"name":"inline suspend fun <R> call(permits: Int = 1, timeout: Duration = config.baseTimeoutDuration, block: Supplier<R>): R","description":"kresil.ratelimiter.RateLimiter.call","location":"kresil-lib/lib/kresil.ratelimiter/-rate-limiter/call.html","searchKeys":["call","inline suspend fun <R> call(permits: Int = 1, timeout: Duration = config.baseTimeoutDuration, block: Supplier<R>): R","kresil.ratelimiter.RateLimiter.call"]},{"name":"inline suspend fun <R> executeSupplier(crossinline block: Supplier<R>): R?","description":"kresil.retry.Retry.executeSupplier","location":"kresil-lib/lib/kresil.retry/-retry/execute-supplier.html","searchKeys":["executeSupplier","inline suspend fun <R> executeSupplier(crossinline block: Supplier<R>): R?","kresil.retry.Retry.executeSupplier"]},{"name":"interface ConfigBuilder<TConfig>","description":"kresil.core.builders.ConfigBuilder","location":"kresil-lib/lib/kresil.core.builders/-config-builder/index.html","searchKeys":["ConfigBuilder","interface ConfigBuilder<TConfig>","kresil.core.builders.ConfigBuilder"]},{"name":"interface FailureRateSlidingWindow<T>","description":"kresil.core.slidingwindow.FailureRateSlidingWindow","location":"kresil-lib/lib/kresil.core.slidingwindow/-failure-rate-sliding-window/index.html","searchKeys":["FailureRateSlidingWindow","interface FailureRateSlidingWindow<T>","kresil.core.slidingwindow.FailureRateSlidingWindow"]},{"name":"interface Node<T>","description":"kresil.core.queue.Node","location":"kresil-lib/lib/kresil.core.queue/-node/index.html","searchKeys":["Node","interface Node<T>","kresil.core.queue.Node"]},{"name":"interface Queue<T>","description":"kresil.core.queue.Queue","location":"kresil-lib/lib/kresil.core.queue/-queue/index.html","searchKeys":["Queue","interface Queue<T>","kresil.core.queue.Queue"]},{"name":"internal abstract class SemaphoreBasedRateLimiter(val config: RateLimiterConfig, val semaphoreState: SemaphoreState) : SuspendableSemaphore","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/index.html","searchKeys":["SemaphoreBasedRateLimiter","internal abstract class SemaphoreBasedRateLimiter(val config: RateLimiterConfig, val semaphoreState: SemaphoreState) : SuspendableSemaphore","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter"]},{"name":"internal class CircuitBreakerStateReducer<T>(val slidingWindow: FailureRateSlidingWindow<T>, val config: CircuitBreakerConfig, val events: MutableSharedFlow<CircuitBreakerEvent>) : Reducer<CircuitBreakerState, CircuitBreakerReducerEvent, CircuitBreakerReducerEffect> ","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/index.html","searchKeys":["CircuitBreakerStateReducer","internal class CircuitBreakerStateReducer<T>(val slidingWindow: FailureRateSlidingWindow<T>, val config: CircuitBreakerConfig, val events: MutableSharedFlow<CircuitBreakerEvent>) : Reducer<CircuitBreakerState, CircuitBreakerReducerEvent, CircuitBreakerReducerEffect> ","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer"]},{"name":"internal class CircularDoublyLinkedList<T> : Queue<T> ","description":"kresil.core.utils.CircularDoublyLinkedList","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/index.html","searchKeys":["CircularDoublyLinkedList","internal class CircularDoublyLinkedList<T> : Queue<T> ","kresil.core.utils.CircularDoublyLinkedList"]},{"name":"internal class CountBasedSlidingWindow(val capacity: Int, val minimumThroughput: Int) : FailureRateSlidingWindow<Boolean> ","description":"kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-count-based-sliding-window/index.html","searchKeys":["CountBasedSlidingWindow","internal class CountBasedSlidingWindow(val capacity: Int, val minimumThroughput: Int) : FailureRateSlidingWindow<Boolean> ","kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow"]},{"name":"internal class FixedWindowSemaphoreBasedRateLimiter(val config: RateLimiterConfig, val semaphoreState: SemaphoreState) : SemaphoreBasedRateLimiter","description":"kresil.ratelimiter.semaphore.implementations.FixedWindowSemaphoreBasedRateLimiter","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-fixed-window-semaphore-based-rate-limiter/index.html","searchKeys":["FixedWindowSemaphoreBasedRateLimiter","internal class FixedWindowSemaphoreBasedRateLimiter(val config: RateLimiterConfig, val semaphoreState: SemaphoreState) : SemaphoreBasedRateLimiter","kresil.ratelimiter.semaphore.implementations.FixedWindowSemaphoreBasedRateLimiter"]},{"name":"internal class InMemorySemaphoreState : SemaphoreState","description":"kresil.ratelimiter.semaphore.state.InMemorySemaphoreState","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.state/-in-memory-semaphore-state/index.html","searchKeys":["InMemorySemaphoreState","internal class InMemorySemaphoreState : SemaphoreState","kresil.ratelimiter.semaphore.state.InMemorySemaphoreState"]},{"name":"internal class MaxRetriesExceededException : IllegalStateException","description":"kresil.retry.exceptions.MaxRetriesExceededException","location":"kresil-lib/lib/kresil.retry.exceptions/-max-retries-exceeded-exception/index.html","searchKeys":["MaxRetriesExceededException","internal class MaxRetriesExceededException : IllegalStateException","kresil.retry.exceptions.MaxRetriesExceededException"]},{"name":"internal class RateLimitedRequest(val permits: Int, val continuation: Continuation<Unit>, var canResume: Boolean = false)","description":"kresil.ratelimiter.semaphore.request.RateLimitedRequest","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.request/-rate-limited-request/index.html","searchKeys":["RateLimitedRequest","internal class RateLimitedRequest(val permits: Int, val continuation: Continuation<Unit>, var canResume: Boolean = false)","kresil.ratelimiter.semaphore.request.RateLimitedRequest"]},{"name":"internal class RetryAsyncContextImpl(val config: RetryConfig, val eventFlow: MutableSharedFlow<RetryEvent>) : RetryAsyncContext","description":"kresil.retry.context.RetryAsyncContextImpl","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/index.html","searchKeys":["RetryAsyncContextImpl","internal class RetryAsyncContextImpl(val config: RetryConfig, val eventFlow: MutableSharedFlow<RetryEvent>) : RetryAsyncContext","kresil.retry.context.RetryAsyncContextImpl"]},{"name":"internal class RingBuffer<T>(val capacity: Int) : Iterable<T> ","description":"kresil.core.utils.RingBuffer","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/index.html","searchKeys":["RingBuffer","internal class RingBuffer<T>(val capacity: Int) : Iterable<T> ","kresil.core.utils.RingBuffer"]},{"name":"internal class SlidingWindowSemaphoreBasedRateLimiter(val config: RateLimiterConfig, val semaphoreState: SemaphoreState) : SemaphoreBasedRateLimiter","description":"kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-sliding-window-semaphore-based-rate-limiter/index.html","searchKeys":["SlidingWindowSemaphoreBasedRateLimiter","internal class SlidingWindowSemaphoreBasedRateLimiter(val config: RateLimiterConfig, val semaphoreState: SemaphoreState) : SemaphoreBasedRateLimiter","kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter"]},{"name":"internal class TokenBucketSemaphoreBasedRateLimiter(val config: RateLimiterConfig, val semaphoreState: SemaphoreState) : SemaphoreBasedRateLimiter","description":"kresil.ratelimiter.semaphore.implementations.TokenBucketSemaphoreBasedRateLimiter","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-token-bucket-semaphore-based-rate-limiter/index.html","searchKeys":["TokenBucketSemaphoreBasedRateLimiter","internal class TokenBucketSemaphoreBasedRateLimiter(val config: RateLimiterConfig, val semaphoreState: SemaphoreState) : SemaphoreBasedRateLimiter","kresil.ratelimiter.semaphore.implementations.TokenBucketSemaphoreBasedRateLimiter"]},{"name":"internal constructor()","description":"kresil.core.events.FlowEventListenerImpl.FlowEventListenerImpl","location":"kresil-lib/lib/kresil.core.events/-flow-event-listener-impl/-flow-event-listener-impl.html","searchKeys":["FlowEventListenerImpl","internal constructor()","kresil.core.events.FlowEventListenerImpl.FlowEventListenerImpl"]},{"name":"internal constructor(delayDuration: Duration, startTimerMark: ComparableTimeMark, nrOfTransitionsToOpenStateInACycle: Int)","description":"kresil.circuitbreaker.state.CircuitBreakerState.Open.Open","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-open/-open.html","searchKeys":["Open","internal constructor(delayDuration: Duration, startTimerMark: ComparableTimeMark, nrOfTransitionsToOpenStateInACycle: Int)","kresil.circuitbreaker.state.CircuitBreakerState.Open.Open"]},{"name":"internal constructor(nrOfCallsAttempted: Int, startTimerMark: ComparableTimeMark?, nrOfTransitionsToOpenStateInACycle: Int)","description":"kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.HalfOpen","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-half-open/-half-open.html","searchKeys":["HalfOpen","internal constructor(nrOfCallsAttempted: Int, startTimerMark: ComparableTimeMark?, nrOfTransitionsToOpenStateInACycle: Int)","kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.HalfOpen"]},{"name":"internal fun <R, T> defaultResultMapper(): ResultMapper<R, T>","description":"kresil.retry.Retry.defaultResultMapper","location":"kresil-lib/lib/kresil.retry/-retry/default-result-mapper.html","searchKeys":["defaultResultMapper","internal fun <R, T> defaultResultMapper(): ResultMapper<R, T>","kresil.retry.Retry.defaultResultMapper"]},{"name":"internal fun <TBuilder : ConfigBuilder<TConfig>, TConfig> mechanismConfigBuilder(builder: TBuilder, configure: TBuilder.() -> Unit): TConfig","description":"kresil.core.builders.mechanismConfigBuilder","location":"kresil-lib/lib/kresil.core.builders/mechanism-config-builder.html","searchKeys":["mechanismConfigBuilder","internal fun <TBuilder : ConfigBuilder<TConfig>, TConfig> mechanismConfigBuilder(builder: TBuilder, configure: TBuilder.() -> Unit): TConfig","kresil.core.builders.mechanismConfigBuilder"]},{"name":"internal fun Duration.requireNonNegative(qualifier: String)","description":"kresil.core.delay.requireNonNegative","location":"kresil-lib/lib/kresil.core.delay/require-non-negative.html","searchKeys":["requireNonNegative","internal fun Duration.requireNonNegative(qualifier: String)","kresil.core.delay.requireNonNegative"]},{"name":"internal fun Duration.requirePositive(qualifier: String)","description":"kresil.core.delay.requirePositive","location":"kresil-lib/lib/kresil.core.delay/require-positive.html","searchKeys":["requirePositive","internal fun Duration.requirePositive(qualifier: String)","kresil.core.delay.requirePositive"]},{"name":"internal fun checkDisposed()","description":"kresil.ratelimiter.RateLimiter.checkDisposed","location":"kresil-lib/lib/kresil.ratelimiter/-rate-limiter/check-disposed.html","searchKeys":["checkDisposed","internal fun checkDisposed()","kresil.ratelimiter.RateLimiter.checkDisposed"]},{"name":"internal fun getCurrentTimeMark(): ComparableTimeMark","description":"kresil.core.timemark.getCurrentTimeMark","location":"kresil-lib/lib/kresil.core.timemark/get-current-time-mark.html","searchKeys":["getCurrentTimeMark","internal fun getCurrentTimeMark(): ComparableTimeMark","kresil.core.timemark.getCurrentTimeMark"]},{"name":"internal fun getRemainingDuration(timeMark: ComparableTimeMark, duration: Duration): Duration","description":"kresil.core.timemark.getRemainingDuration","location":"kresil-lib/lib/kresil.core.timemark/get-remaining-duration.html","searchKeys":["getRemainingDuration","internal fun getRemainingDuration(timeMark: ComparableTimeMark, duration: Duration): Duration","kresil.core.timemark.getRemainingDuration"]},{"name":"internal fun hasExceededDuration(timeMark: ComparableTimeMark, duration: Duration): Boolean","description":"kresil.core.timemark.hasExceededDuration","location":"kresil-lib/lib/kresil.core.timemark/has-exceeded-duration.html","searchKeys":["hasExceededDuration","internal fun hasExceededDuration(timeMark: ComparableTimeMark, duration: Duration): Boolean","kresil.core.timemark.hasExceededDuration"]},{"name":"internal interface FlowEventListener<Event>","description":"kresil.core.events.FlowEventListener","location":"kresil-lib/lib/kresil.core.events/-flow-event-listener/index.html","searchKeys":["FlowEventListener","internal interface FlowEventListener<Event>","kresil.core.events.FlowEventListener"]},{"name":"internal interface RetryAsyncContext","description":"kresil.retry.context.RetryAsyncContext","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context/index.html","searchKeys":["RetryAsyncContext","internal interface RetryAsyncContext","kresil.retry.context.RetryAsyncContext"]},{"name":"internal interface SuspendableSemaphore","description":"kresil.core.semaphore.SuspendableSemaphore","location":"kresil-lib/lib/kresil.core.semaphore/-suspendable-semaphore/index.html","searchKeys":["SuspendableSemaphore","internal interface SuspendableSemaphore","kresil.core.semaphore.SuspendableSemaphore"]},{"name":"internal object DelayStrategyOptions","description":"kresil.core.delay.strategy.DelayStrategyOptions","location":"kresil-lib/lib/kresil.core.delay.strategy/-delay-strategy-options/index.html","searchKeys":["DelayStrategyOptions","internal object DelayStrategyOptions","kresil.core.delay.strategy.DelayStrategyOptions"]},{"name":"internal suspend fun <A, B, R, T> executeOperation(inputA: A, inputB: B, resultMapper: ResultMapper<R, T>, block: CtxBiFunction<RetryContext, A, B, R>): T?","description":"kresil.retry.Retry.executeOperation","location":"kresil-lib/lib/kresil.retry/-retry/execute-operation.html","searchKeys":["executeOperation","internal suspend fun <A, B, R, T> executeOperation(inputA: A, inputB: B, resultMapper: ResultMapper<R, T>, block: CtxBiFunction<RetryContext, A, B, R>): T?","kresil.retry.Retry.executeOperation"]},{"name":"internal val nrOfTransitionsToOpenStateInACycle: Int","description":"kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.nrOfTransitionsToOpenStateInACycle","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-half-open/nr-of-transitions-to-open-state-in-a-cycle.html","searchKeys":["nrOfTransitionsToOpenStateInACycle","internal val nrOfTransitionsToOpenStateInACycle: Int","kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.nrOfTransitionsToOpenStateInACycle"]},{"name":"internal val queue: CircularDoublyLinkedList<RateLimitedRequest>","description":"kresil.ratelimiter.semaphore.state.SemaphoreState.queue","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.state/-semaphore-state/queue.html","searchKeys":["queue","internal val queue: CircularDoublyLinkedList<RateLimitedRequest>","kresil.ratelimiter.semaphore.state.SemaphoreState.queue"]},{"name":"internal val startTimerMark: ComparableTimeMark","description":"kresil.circuitbreaker.state.CircuitBreakerState.Open.startTimerMark","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-open/start-timer-mark.html","searchKeys":["startTimerMark","internal val startTimerMark: ComparableTimeMark","kresil.circuitbreaker.state.CircuitBreakerState.Open.startTimerMark"]},{"name":"internal val startTimerMark: ComparableTimeMark?","description":"kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.startTimerMark","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-half-open/start-timer-mark.html","searchKeys":["startTimerMark","internal val startTimerMark: ComparableTimeMark?","kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.startTimerMark"]},{"name":"internal val wasDisposed: AtomicBoolean","description":"kresil.ratelimiter.KeyedRateLimiter.wasDisposed","location":"kresil-lib/lib/kresil.ratelimiter/-keyed-rate-limiter/was-disposed.html","searchKeys":["wasDisposed","internal val wasDisposed: AtomicBoolean","kresil.ratelimiter.KeyedRateLimiter.wasDisposed"]},{"name":"lateinit var next: CircularDoublyLinkedList.NodeImpl<T>","description":"kresil.core.utils.CircularDoublyLinkedList.NodeImpl.next","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/-node-impl/next.html","searchKeys":["next","lateinit var next: CircularDoublyLinkedList.NodeImpl<T>","kresil.core.utils.CircularDoublyLinkedList.NodeImpl.next"]},{"name":"lateinit var prev: CircularDoublyLinkedList.NodeImpl<T>","description":"kresil.core.utils.CircularDoublyLinkedList.NodeImpl.prev","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/-node-impl/prev.html","searchKeys":["prev","lateinit var prev: CircularDoublyLinkedList.NodeImpl<T>","kresil.core.utils.CircularDoublyLinkedList.NodeImpl.prev"]},{"name":"object Companion","description":"kresil.retry.context.RetryAsyncContextImpl.Companion","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/-companion/index.html","searchKeys":["Companion","object Companion","kresil.retry.context.RetryAsyncContextImpl.Companion"]},{"name":"open class FlowEventListenerImpl<Event> : FlowEventListener<Event> ","description":"kresil.core.events.FlowEventListenerImpl","location":"kresil-lib/lib/kresil.core.events/-flow-event-listener-impl/index.html","searchKeys":["FlowEventListenerImpl","open class FlowEventListenerImpl<Event> : FlowEventListener<Event> ","kresil.core.events.FlowEventListenerImpl"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.equals","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-half-open/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"kresil.circuitbreaker.state.CircuitBreakerState.Open.equals","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-open/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","kresil.circuitbreaker.state.CircuitBreakerState.Open.equals"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"kresil.core.utils.RingBuffer.iterator","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","kresil.core.utils.RingBuffer.iterator"]},{"name":"open override fun build(): CircuitBreakerConfig","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.build","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/build.html","searchKeys":["build","open override fun build(): CircuitBreakerConfig","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.build"]},{"name":"open override fun build(): RateLimiterConfig","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.build","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config-builder/build.html","searchKeys":["build","open override fun build(): RateLimiterConfig","kresil.ratelimiter.config.RateLimiterConfigBuilder.build"]},{"name":"open override fun build(): RetryConfig","description":"kresil.retry.config.RetryConfigBuilder.build","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/build.html","searchKeys":["build","open override fun build(): RetryConfig","kresil.retry.config.RetryConfigBuilder.build"]},{"name":"open override fun cancelListeners()","description":"kresil.core.events.FlowEventListenerImpl.cancelListeners","location":"kresil-lib/lib/kresil.core.events/-flow-event-listener-impl/cancel-listeners.html","searchKeys":["cancelListeners","open override fun cancelListeners()","kresil.core.events.FlowEventListenerImpl.cancelListeners"]},{"name":"open override fun clear()","description":"kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.clear","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-count-based-sliding-window/clear.html","searchKeys":["clear","open override fun clear()","kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.clear"]},{"name":"open override fun close()","description":"kresil.ratelimiter.KeyedRateLimiter.close","location":"kresil-lib/lib/kresil.ratelimiter/-keyed-rate-limiter/close.html","searchKeys":["close","open override fun close()","kresil.ratelimiter.KeyedRateLimiter.close"]},{"name":"open override fun close()","description":"kresil.ratelimiter.RateLimiter.close","location":"kresil-lib/lib/kresil.ratelimiter/-rate-limiter/close.html","searchKeys":["close","open override fun close()","kresil.ratelimiter.RateLimiter.close"]},{"name":"open override fun close()","description":"kresil.ratelimiter.semaphore.state.InMemorySemaphoreState.close","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.state/-in-memory-semaphore-state/close.html","searchKeys":["close","open override fun close()","kresil.ratelimiter.semaphore.state.InMemorySemaphoreState.close"]},{"name":"open override fun currentFailureRate(): Double","description":"kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.currentFailureRate","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-count-based-sliding-window/current-failure-rate.html","searchKeys":["currentFailureRate","open override fun currentFailureRate(): Double","kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.currentFailureRate"]},{"name":"open override fun hashCode(): Int","description":"kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.hashCode","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-half-open/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.hashCode"]},{"name":"open override fun hashCode(): Int","description":"kresil.circuitbreaker.state.CircuitBreakerState.Open.hashCode","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-open/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","kresil.circuitbreaker.state.CircuitBreakerState.Open.hashCode"]},{"name":"open override fun recordFailure()","description":"kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.recordFailure","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-count-based-sliding-window/record-failure.html","searchKeys":["recordFailure","open override fun recordFailure()","kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.recordFailure"]},{"name":"open override fun recordSuccess()","description":"kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.recordSuccess","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-count-based-sliding-window/record-success.html","searchKeys":["recordSuccess","open override fun recordSuccess()","kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.recordSuccess"]},{"name":"open override fun setPermits(updateFunction: (Int) -> Int)","description":"kresil.ratelimiter.semaphore.state.InMemorySemaphoreState.setPermits","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.state/-in-memory-semaphore-state/set-permits.html","searchKeys":["setPermits","open override fun setPermits(updateFunction: (Int) -> Int)","kresil.ratelimiter.semaphore.state.InMemorySemaphoreState.setPermits"]},{"name":"open override fun setReplenishmentTimeMark(value: ComparableTimeMark)","description":"kresil.ratelimiter.semaphore.state.InMemorySemaphoreState.setReplenishmentTimeMark","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.state/-in-memory-semaphore-state/set-replenishment-time-mark.html","searchKeys":["setReplenishmentTimeMark","open override fun setReplenishmentTimeMark(value: ComparableTimeMark)","kresil.ratelimiter.semaphore.state.InMemorySemaphoreState.setReplenishmentTimeMark"]},{"name":"open override fun toString(): String","description":"kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.toString","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-half-open/to-string.html","searchKeys":["toString","open override fun toString(): String","kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.toString"]},{"name":"open override fun toString(): String","description":"kresil.circuitbreaker.state.CircuitBreakerState.Open.toString","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-open/to-string.html","searchKeys":["toString","open override fun toString(): String","kresil.circuitbreaker.state.CircuitBreakerState.Open.toString"]},{"name":"open override val baseConfig: CircuitBreakerConfig","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.baseConfig","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/base-config.html","searchKeys":["baseConfig","open override val baseConfig: CircuitBreakerConfig","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.baseConfig"]},{"name":"open override val baseConfig: RateLimiterConfig","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.baseConfig","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config-builder/base-config.html","searchKeys":["baseConfig","open override val baseConfig: RateLimiterConfig","kresil.ratelimiter.config.RateLimiterConfigBuilder.baseConfig"]},{"name":"open override val baseConfig: RetryConfig","description":"kresil.retry.config.RetryConfigBuilder.baseConfig","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/base-config.html","searchKeys":["baseConfig","open override val baseConfig: RetryConfig","kresil.retry.config.RetryConfigBuilder.baseConfig"]},{"name":"open override val capacity: Int","description":"kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.capacity","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-count-based-sliding-window/capacity.html","searchKeys":["capacity","open override val capacity: Int","kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.capacity"]},{"name":"open override val events: MutableSharedFlow<Event>","description":"kresil.core.events.FlowEventListenerImpl.events","location":"kresil-lib/lib/kresil.core.events/-flow-event-listener-impl/events.html","searchKeys":["events","open override val events: MutableSharedFlow<Event>","kresil.core.events.FlowEventListenerImpl.events"]},{"name":"open override val queueLength: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.queueLength","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-fixed-window-counter/queue-length.html","searchKeys":["queueLength","open override val queueLength: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.queueLength"]},{"name":"open override val queueLength: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.queueLength","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-sliding-window-counter/queue-length.html","searchKeys":["queueLength","open override val queueLength: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.queueLength"]},{"name":"open override val queueLength: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.queueLength","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-token-bucket/queue-length.html","searchKeys":["queueLength","open override val queueLength: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.queueLength"]},{"name":"open override val replenishmentPeriod: Duration","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.replenishmentPeriod","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-fixed-window-counter/replenishment-period.html","searchKeys":["replenishmentPeriod","open override val replenishmentPeriod: Duration","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.replenishmentPeriod"]},{"name":"open override val replenishmentPeriod: Duration","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.replenishmentPeriod","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-sliding-window-counter/replenishment-period.html","searchKeys":["replenishmentPeriod","open override val replenishmentPeriod: Duration","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.replenishmentPeriod"]},{"name":"open override val replenishmentPeriod: Duration","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.replenishmentPeriod","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-token-bucket/replenishment-period.html","searchKeys":["replenishmentPeriod","open override val replenishmentPeriod: Duration","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.replenishmentPeriod"]},{"name":"open override val scope: CoroutineScope","description":"kresil.core.events.FlowEventListenerImpl.scope","location":"kresil-lib/lib/kresil.core.events/-flow-event-listener-impl/scope.html","searchKeys":["scope","open override val scope: CoroutineScope","kresil.core.events.FlowEventListenerImpl.scope"]},{"name":"open override val totalPermits: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.totalPermits","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-fixed-window-counter/total-permits.html","searchKeys":["totalPermits","open override val totalPermits: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.FixedWindowCounter.totalPermits"]},{"name":"open override val totalPermits: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.totalPermits","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-sliding-window-counter/total-permits.html","searchKeys":["totalPermits","open override val totalPermits: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.totalPermits"]},{"name":"open override val totalPermits: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.totalPermits","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-token-bucket/total-permits.html","searchKeys":["totalPermits","open override val totalPermits: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.TokenBucket.totalPermits"]},{"name":"open override val value: T","description":"kresil.core.utils.CircularDoublyLinkedList.NodeImpl.value","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/-node-impl/value.html","searchKeys":["value","open override val value: T","kresil.core.utils.CircularDoublyLinkedList.NodeImpl.value"]},{"name":"open override var permitsInUse: Int","description":"kresil.ratelimiter.semaphore.state.InMemorySemaphoreState.permitsInUse","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.state/-in-memory-semaphore-state/permits-in-use.html","searchKeys":["permitsInUse","open override var permitsInUse: Int","kresil.ratelimiter.semaphore.state.InMemorySemaphoreState.permitsInUse"]},{"name":"open override var replenishmentTimeMark: ComparableTimeMark","description":"kresil.ratelimiter.semaphore.state.InMemorySemaphoreState.replenishmentTimeMark","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.state/-in-memory-semaphore-state/replenishment-time-mark.html","searchKeys":["replenishmentTimeMark","open override var replenishmentTimeMark: ComparableTimeMark","kresil.ratelimiter.semaphore.state.InMemorySemaphoreState.replenishmentTimeMark"]},{"name":"open override var size: Int","description":"kresil.core.utils.CircularDoublyLinkedList.size","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/size.html","searchKeys":["size","open override var size: Int","kresil.core.utils.CircularDoublyLinkedList.size"]},{"name":"open suspend override fun acquire(permits: Int, timeout: Duration)","description":"kresil.ratelimiter.RateLimiter.acquire","location":"kresil-lib/lib/kresil.ratelimiter/-rate-limiter/acquire.html","searchKeys":["acquire","open suspend override fun acquire(permits: Int, timeout: Duration)","kresil.ratelimiter.RateLimiter.acquire"]},{"name":"open suspend override fun acquire(permits: Int, timeout: Duration)","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.acquire","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/acquire.html","searchKeys":["acquire","open suspend override fun acquire(permits: Int, timeout: Duration)","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.acquire"]},{"name":"open suspend override fun currentState(): CircuitBreakerState","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.currentState","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/current-state.html","searchKeys":["currentState","open suspend override fun currentState(): CircuitBreakerState","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.currentState"]},{"name":"open suspend override fun dequeue(): Node<T>","description":"kresil.core.utils.CircularDoublyLinkedList.dequeue","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/dequeue.html","searchKeys":["dequeue","open suspend override fun dequeue(): Node<T>","kresil.core.utils.CircularDoublyLinkedList.dequeue"]},{"name":"open suspend override fun dispatch(event: CircuitBreakerReducerEvent)","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.dispatch","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/dispatch.html","searchKeys":["dispatch","open suspend override fun dispatch(event: CircuitBreakerReducerEvent)","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.dispatch"]},{"name":"open suspend override fun enqueue(value: T): Node<T>","description":"kresil.core.utils.CircularDoublyLinkedList.enqueue","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/enqueue.html","searchKeys":["enqueue","open suspend override fun enqueue(value: T): Node<T>","kresil.core.utils.CircularDoublyLinkedList.enqueue"]},{"name":"open suspend override fun headCondition(cond: (T) -> Boolean): Boolean","description":"kresil.core.utils.CircularDoublyLinkedList.headCondition","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/head-condition.html","searchKeys":["headCondition","open suspend override fun headCondition(cond: (T) -> Boolean): Boolean","kresil.core.utils.CircularDoublyLinkedList.headCondition"]},{"name":"open suspend override fun onError(throwable: Throwable): Boolean","description":"kresil.retry.context.RetryAsyncContextImpl.onError","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/on-error.html","searchKeys":["onError","open suspend override fun onError(throwable: Throwable): Boolean","kresil.retry.context.RetryAsyncContextImpl.onError"]},{"name":"open suspend override fun onEvent(action: suspend (CircuitBreakerEvent) -> Unit): Job","description":"kresil.circuitbreaker.CircuitBreaker.onEvent","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/on-event.html","searchKeys":["onEvent","open suspend override fun onEvent(action: suspend (CircuitBreakerEvent) -> Unit): Job","kresil.circuitbreaker.CircuitBreaker.onEvent"]},{"name":"open suspend override fun onEvent(action: suspend (Event) -> Unit): Job","description":"kresil.core.events.FlowEventListenerImpl.onEvent","location":"kresil-lib/lib/kresil.core.events/-flow-event-listener-impl/on-event.html","searchKeys":["onEvent","open suspend override fun onEvent(action: suspend (Event) -> Unit): Job","kresil.core.events.FlowEventListenerImpl.onEvent"]},{"name":"open suspend override fun onEvent(action: suspend (RetryEvent) -> Unit): Job","description":"kresil.retry.Retry.onEvent","location":"kresil-lib/lib/kresil.retry/-retry/on-event.html","searchKeys":["onEvent","open suspend override fun onEvent(action: suspend (RetryEvent) -> Unit): Job","kresil.retry.Retry.onEvent"]},{"name":"open suspend override fun onResult(result: Any?): Boolean","description":"kresil.retry.context.RetryAsyncContextImpl.onResult","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/on-result.html","searchKeys":["onResult","open suspend override fun onResult(result: Any?): Boolean","kresil.retry.context.RetryAsyncContextImpl.onResult"]},{"name":"open suspend override fun onRetry()","description":"kresil.retry.context.RetryAsyncContextImpl.onRetry","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/on-retry.html","searchKeys":["onRetry","open suspend override fun onRetry()","kresil.retry.context.RetryAsyncContextImpl.onRetry"]},{"name":"open suspend override fun onSuccess()","description":"kresil.retry.context.RetryAsyncContextImpl.onSuccess","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/on-success.html","searchKeys":["onSuccess","open suspend override fun onSuccess()","kresil.retry.context.RetryAsyncContextImpl.onSuccess"]},{"name":"open suspend override fun release(permits: Int)","description":"kresil.ratelimiter.RateLimiter.release","location":"kresil-lib/lib/kresil.ratelimiter/-rate-limiter/release.html","searchKeys":["release","open suspend override fun release(permits: Int)","kresil.ratelimiter.RateLimiter.release"]},{"name":"open suspend override fun release(permits: Int)","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.release","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/release.html","searchKeys":["release","open suspend override fun release(permits: Int)","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.release"]},{"name":"open suspend override fun remove(node: Node<T>)","description":"kresil.core.utils.CircularDoublyLinkedList.remove","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/remove.html","searchKeys":["remove","open suspend override fun remove(node: Node<T>)","kresil.core.utils.CircularDoublyLinkedList.remove"]},{"name":"open val queueLength: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.queueLength","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/queue-length.html","searchKeys":["queueLength","open val queueLength: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.queueLength"]},{"name":"open val replenishmentPeriod: Duration","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.replenishmentPeriod","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/replenishment-period.html","searchKeys":["replenishmentPeriod","open val replenishmentPeriod: Duration","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.replenishmentPeriod"]},{"name":"open val totalPermits: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.totalPermits","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/total-permits.html","searchKeys":["totalPermits","open val totalPermits: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.totalPermits"]},{"name":"operator fun get(index: Int): T","description":"kresil.core.utils.RingBuffer.get","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/get.html","searchKeys":["get","operator fun get(index: Int): T","kresil.core.utils.RingBuffer.get"]},{"name":"operator fun set(index: Int, element: T)","description":"kresil.core.utils.RingBuffer.set","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/set.html","searchKeys":["set","operator fun set(index: Int, element: T)","kresil.core.utils.RingBuffer.set"]},{"name":"private class NodeImpl<T>(val maybeValue: T?) : Node<T> ","description":"kresil.core.utils.CircularDoublyLinkedList.NodeImpl","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/-node-impl/index.html","searchKeys":["NodeImpl","private class NodeImpl<T>(val maybeValue: T?) : Node<T> ","kresil.core.utils.CircularDoublyLinkedList.NodeImpl"]},{"name":"private constructor()","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.SlidingWindowType","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window-type/-sliding-window-type.html","searchKeys":["SlidingWindowType","private constructor()","kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.SlidingWindowType"]},{"name":"private constructor(isTransitionEvent: Boolean)","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.CircuitBreakerReducerEvent","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/-circuit-breaker-reducer-event.html","searchKeys":["CircuitBreakerReducerEvent","private constructor(isTransitionEvent: Boolean)","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.CircuitBreakerReducerEvent"]},{"name":"private fun DelayStrategy.toRetryDelayStrategy(): RetryDelayStrategy","description":"kresil.retry.config.toRetryDelayStrategy","location":"kresil-lib/lib/kresil.retry.config/to-retry-delay-strategy.html","searchKeys":["toRetryDelayStrategy","private fun DelayStrategy.toRetryDelayStrategy(): RetryDelayStrategy","kresil.retry.config.toRetryDelayStrategy"]},{"name":"private fun applyJitter(baseDelay: Duration, randomizationFactor: Double): Duration","description":"kresil.core.delay.strategy.DelayStrategyOptions.applyJitter","location":"kresil-lib/lib/kresil.core.delay.strategy/-delay-strategy-options/apply-jitter.html","searchKeys":["applyJitter","private fun applyJitter(baseDelay: Duration, randomizationFactor: Double): Duration","kresil.core.delay.strategy.DelayStrategyOptions.applyJitter"]},{"name":"private fun checkAlgorithmConfig(algorithm: RateLimitingAlgorithm)","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.checkAlgorithmConfig","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config-builder/check-algorithm-config.html","searchKeys":["checkAlgorithmConfig","private fun checkAlgorithmConfig(algorithm: RateLimitingAlgorithm)","kresil.ratelimiter.config.RateLimiterConfigBuilder.checkAlgorithmConfig"]},{"name":"private fun createHalfOpenState(state: CircuitBreakerState): CircuitBreakerState","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.createHalfOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/create-half-open-state.html","searchKeys":["createHalfOpenState","private fun createHalfOpenState(state: CircuitBreakerState): CircuitBreakerState","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.createHalfOpenState"]},{"name":"private fun createRateLimitedException(permits: Int): RateLimiterRejectedException","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.createRateLimitedException","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/create-rate-limited-exception.html","searchKeys":["createRateLimitedException","private fun createRateLimitedException(permits: Int): RateLimiterRejectedException","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.createRateLimitedException"]},{"name":"private fun hasExceededDurationInHalfOpenState(state: CircuitBreakerState): Boolean","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.hasExceededDurationInHalfOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/has-exceeded-duration-in-half-open-state.html","searchKeys":["hasExceededDurationInHalfOpenState","private fun hasExceededDurationInHalfOpenState(state: CircuitBreakerState): Boolean","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.hasExceededDurationInHalfOpenState"]},{"name":"private fun hasExceededDurationInOpenState(state: CircuitBreakerState): Boolean","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.hasExceededDurationInOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/has-exceeded-duration-in-open-state.html","searchKeys":["hasExceededDurationInOpenState","private fun hasExceededDurationInOpenState(state: CircuitBreakerState): Boolean","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.hasExceededDurationInOpenState"]},{"name":"private fun isRateLimited(permits: Int): Boolean","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.isRateLimited","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/is-rate-limited.html","searchKeys":["isRateLimited","private fun isRateLimited(permits: Int): Boolean","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.isRateLimited"]},{"name":"private fun recordResult(result: Boolean)","description":"kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.recordResult","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-count-based-sliding-window/record-result.html","searchKeys":["recordResult","private fun recordResult(result: Boolean)","kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.recordResult"]},{"name":"private fun shouldRetry(throwable: Throwable): Boolean","description":"kresil.retry.context.RetryAsyncContextImpl.shouldRetry","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/should-retry.html","searchKeys":["shouldRetry","private fun shouldRetry(throwable: Throwable): Boolean","kresil.retry.context.RetryAsyncContextImpl.shouldRetry"]},{"name":"private fun shouldRetryOnResult(result: Any?): Boolean","description":"kresil.retry.context.RetryAsyncContextImpl.shouldRetryOnResult","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/should-retry-on-result.html","searchKeys":["shouldRetryOnResult","private fun shouldRetryOnResult(result: Any?): Boolean","kresil.retry.context.RetryAsyncContextImpl.shouldRetryOnResult"]},{"name":"private fun validateConstantDelayParams(delay: Duration, randomizationFactor: Double)","description":"kresil.core.delay.strategy.DelayStrategyOptions.validateConstantDelayParams","location":"kresil-lib/lib/kresil.core.delay.strategy/-delay-strategy-options/validate-constant-delay-params.html","searchKeys":["validateConstantDelayParams","private fun validateConstantDelayParams(delay: Duration, randomizationFactor: Double)","kresil.core.delay.strategy.DelayStrategyOptions.validateConstantDelayParams"]},{"name":"private fun validateExponentialDelayParams(initialDelay: Duration, multiplier: Double, maxDelay: Duration, randomizationFactor: Double)","description":"kresil.core.delay.strategy.DelayStrategyOptions.validateExponentialDelayParams","location":"kresil-lib/lib/kresil.core.delay.strategy/-delay-strategy-options/validate-exponential-delay-params.html","searchKeys":["validateExponentialDelayParams","private fun validateExponentialDelayParams(initialDelay: Duration, multiplier: Double, maxDelay: Duration, randomizationFactor: Double)","kresil.core.delay.strategy.DelayStrategyOptions.validateExponentialDelayParams"]},{"name":"private fun validateLinearDelayParams(initialDelay: Duration, multiplier: Double, maxDelay: Duration, randomizationFactor: Double)","description":"kresil.core.delay.strategy.DelayStrategyOptions.validateLinearDelayParams","location":"kresil-lib/lib/kresil.core.delay.strategy/-delay-strategy-options/validate-linear-delay-params.html","searchKeys":["validateLinearDelayParams","private fun validateLinearDelayParams(initialDelay: Duration, multiplier: Double, maxDelay: Duration, randomizationFactor: Double)","kresil.core.delay.strategy.DelayStrategyOptions.validateLinearDelayParams"]},{"name":"private inline suspend fun <R> executeAndDispatch(block: Supplier<R>): R","description":"kresil.circuitbreaker.CircuitBreaker.executeAndDispatch","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/execute-and-dispatch.html","searchKeys":["executeAndDispatch","private inline suspend fun <R> executeAndDispatch(block: Supplier<R>): R","kresil.circuitbreaker.CircuitBreaker.executeAndDispatch"]},{"name":"private inline suspend fun <R> safeExecute(block: Supplier<R>): R","description":"kresil.circuitbreaker.CircuitBreaker.safeExecute","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/safe-execute.html","searchKeys":["safeExecute","private inline suspend fun <R> safeExecute(block: Supplier<R>): R","kresil.circuitbreaker.CircuitBreaker.safeExecute"]},{"name":"private object Companion","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.Companion","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/-companion/index.html","searchKeys":["Companion","private object Companion","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.Companion"]},{"name":"private object Companion","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.Companion","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config-builder/-companion/index.html","searchKeys":["Companion","private object Companion","kresil.ratelimiter.config.RateLimiterConfigBuilder.Companion"]},{"name":"private object Companion","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.Companion","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/-companion/index.html","searchKeys":["Companion","private object Companion","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.Companion"]},{"name":"private suspend fun <R> handleFailure(throwable: Throwable): R","description":"kresil.circuitbreaker.CircuitBreaker.handleFailure","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/handle-failure.html","searchKeys":["handleFailure","private suspend fun <R> handleFailure(throwable: Throwable): R","kresil.circuitbreaker.CircuitBreaker.handleFailure"]},{"name":"private suspend fun createOpenState(state: CircuitBreakerState): CircuitBreakerState","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.createOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/create-open-state.html","searchKeys":["createOpenState","private suspend fun createOpenState(state: CircuitBreakerState): CircuitBreakerState","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.createOpenState"]},{"name":"private suspend fun handleExceptionAndCleanup(observedRequestNode: Node<RateLimitedRequest>?, exception: Exception)","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.handleExceptionAndCleanup","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/handle-exception-and-cleanup.html","searchKeys":["handleExceptionAndCleanup","private suspend fun handleExceptionAndCleanup(observedRequestNode: Node<RateLimitedRequest>?, exception: Exception)","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.handleExceptionAndCleanup"]},{"name":"private suspend fun recordFailure()","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.recordFailure","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/record-failure.html","searchKeys":["recordFailure","private suspend fun recordFailure()","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.recordFailure"]},{"name":"private suspend fun recordSuccess()","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.recordSuccess","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/record-success.html","searchKeys":["recordSuccess","private suspend fun recordSuccess()","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.recordSuccess"]},{"name":"private suspend fun reset(): CircuitBreakerState","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.reset","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/reset.html","searchKeys":["reset","private suspend fun reset(): CircuitBreakerState","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.reset"]},{"name":"private suspend fun throwCallIsNotPermitted(): Nothing","description":"kresil.circuitbreaker.CircuitBreaker.throwCallIsNotPermitted","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/throw-call-is-not-permitted.html","searchKeys":["throwCallIsNotPermitted","private suspend fun throwCallIsNotPermitted(): Nothing","kresil.circuitbreaker.CircuitBreaker.throwCallIsNotPermitted"]},{"name":"private val algorithm: RateLimitingAlgorithm","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.algorithm","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/algorithm.html","searchKeys":["algorithm","private val algorithm: RateLimitingAlgorithm","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.algorithm"]},{"name":"private val algorithm: RateLimitingAlgorithm.SlidingWindowCounter","description":"kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.algorithm","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-sliding-window-semaphore-based-rate-limiter/algorithm.html","searchKeys":["algorithm","private val algorithm: RateLimitingAlgorithm.SlidingWindowCounter","kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.algorithm"]},{"name":"private val buffer: Array<T?>","description":"kresil.core.utils.RingBuffer.buffer","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/buffer.html","searchKeys":["buffer","private val buffer: Array<T?>","kresil.core.utils.RingBuffer.buffer"]},{"name":"private val buffer: RingBuffer<Boolean>","description":"kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.buffer","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-count-based-sliding-window/buffer.html","searchKeys":["buffer","private val buffer: RingBuffer<Boolean>","kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.buffer"]},{"name":"private val config: RateLimiterConfig","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.config","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/config.html","searchKeys":["config","private val config: RateLimiterConfig","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.config"]},{"name":"private val config: RateLimiterConfig","description":"kresil.ratelimiter.semaphore.implementations.FixedWindowSemaphoreBasedRateLimiter.config","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-fixed-window-semaphore-based-rate-limiter/config.html","searchKeys":["config","private val config: RateLimiterConfig","kresil.ratelimiter.semaphore.implementations.FixedWindowSemaphoreBasedRateLimiter.config"]},{"name":"private val config: RateLimiterConfig","description":"kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.config","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-sliding-window-semaphore-based-rate-limiter/config.html","searchKeys":["config","private val config: RateLimiterConfig","kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.config"]},{"name":"private val config: RateLimiterConfig","description":"kresil.ratelimiter.semaphore.implementations.TokenBucketSemaphoreBasedRateLimiter.config","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-token-bucket-semaphore-based-rate-limiter/config.html","searchKeys":["config","private val config: RateLimiterConfig","kresil.ratelimiter.semaphore.implementations.TokenBucketSemaphoreBasedRateLimiter.config"]},{"name":"private val config: RetryConfig","description":"kresil.retry.context.RetryAsyncContextImpl.config","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/config.html","searchKeys":["config","private val config: RetryConfig","kresil.retry.context.RetryAsyncContextImpl.config"]},{"name":"private val currentSegment: Int","description":"kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.currentSegment","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-sliding-window-semaphore-based-rate-limiter/current-segment.html","searchKeys":["currentSegment","private val currentSegment: Int","kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.currentSegment"]},{"name":"private val delayStrategyInOpenStateOptions: DelayStrategyOptions","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.delayStrategyInOpenStateOptions","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/delay-strategy-in-open-state-options.html","searchKeys":["delayStrategyInOpenStateOptions","private val delayStrategyInOpenStateOptions: DelayStrategyOptions","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.delayStrategyInOpenStateOptions"]},{"name":"private val eventFlow: MutableSharedFlow<RetryEvent>","description":"kresil.retry.context.RetryAsyncContextImpl.eventFlow","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/event-flow.html","searchKeys":["eventFlow","private val eventFlow: MutableSharedFlow<RetryEvent>","kresil.retry.context.RetryAsyncContextImpl.eventFlow"]},{"name":"private val head: CircularDoublyLinkedList.NodeImpl<T>","description":"kresil.core.utils.CircularDoublyLinkedList.head","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/head.html","searchKeys":["head","private val head: CircularDoublyLinkedList.NodeImpl<T>","kresil.core.utils.CircularDoublyLinkedList.head"]},{"name":"private val isAboveThreshold: Boolean","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.isAboveThreshold","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/is-above-threshold.html","searchKeys":["isAboveThreshold","private val isAboveThreshold: Boolean","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.isAboveThreshold"]},{"name":"private val isRetryAttempt: Boolean","description":"kresil.retry.context.RetryAsyncContextImpl.isRetryAttempt","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/is-retry-attempt.html","searchKeys":["isRetryAttempt","private val isRetryAttempt: Boolean","kresil.retry.context.RetryAsyncContextImpl.isRetryAttempt"]},{"name":"private val isToWaitIndefinitelyInHalfOpenState: Boolean","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.isToWaitIndefinitelyInHalfOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/is-to-wait-indefinitely-in-half-open-state.html","searchKeys":["isToWaitIndefinitelyInHalfOpenState","private val isToWaitIndefinitelyInHalfOpenState: Boolean","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.isToWaitIndefinitelyInHalfOpenState"]},{"name":"private val isWithinPermittedRetryAttempts: Boolean","description":"kresil.retry.context.RetryAsyncContextImpl.isWithinPermittedRetryAttempts","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/is-within-permitted-retry-attempts.html","searchKeys":["isWithinPermittedRetryAttempts","private val isWithinPermittedRetryAttempts: Boolean","kresil.retry.context.RetryAsyncContextImpl.isWithinPermittedRetryAttempts"]},{"name":"private val limiters: MutableMap<Key, RateLimiter>","description":"kresil.ratelimiter.KeyedRateLimiter.limiters","location":"kresil-lib/lib/kresil.ratelimiter/-keyed-rate-limiter/limiters.html","searchKeys":["limiters","private val limiters: MutableMap<Key, RateLimiter>","kresil.ratelimiter.KeyedRateLimiter.limiters"]},{"name":"private val lock: Mutex","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.lock","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/lock.html","searchKeys":["lock","private val lock: Mutex","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.lock"]},{"name":"private val lock: Mutex","description":"kresil.ratelimiter.KeyedRateLimiter.lock","location":"kresil-lib/lib/kresil.ratelimiter/-keyed-rate-limiter/lock.html","searchKeys":["lock","private val lock: Mutex","kresil.ratelimiter.KeyedRateLimiter.lock"]},{"name":"private val lock: Mutex","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.lock","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/lock.html","searchKeys":["lock","private val lock: Mutex","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.lock"]},{"name":"private val minimumThroughput: Int","description":"kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.minimumThroughput","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-count-based-sliding-window/minimum-throughput.html","searchKeys":["minimumThroughput","private val minimumThroughput: Int","kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.minimumThroughput"]},{"name":"private val permitsInUse: Int","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.permitsInUse","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/permits-in-use.html","searchKeys":["permitsInUse","private val permitsInUse: Int","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.permitsInUse"]},{"name":"private val queue: CircularDoublyLinkedList<RateLimitedRequest>","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.queue","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/queue.html","searchKeys":["queue","private val queue: CircularDoublyLinkedList<RateLimitedRequest>","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.queue"]},{"name":"private val retryDelayStrategyOptions: DelayStrategyOptions","description":"kresil.retry.config.RetryConfigBuilder.retryDelayStrategyOptions","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/retry-delay-strategy-options.html","searchKeys":["retryDelayStrategyOptions","private val retryDelayStrategyOptions: DelayStrategyOptions","kresil.retry.config.RetryConfigBuilder.retryDelayStrategyOptions"]},{"name":"private val semaphore: SemaphoreBasedRateLimiter","description":"kresil.ratelimiter.RateLimiter.semaphore","location":"kresil-lib/lib/kresil.ratelimiter/-rate-limiter/semaphore.html","searchKeys":["semaphore","private val semaphore: SemaphoreBasedRateLimiter","kresil.ratelimiter.RateLimiter.semaphore"]},{"name":"private val semaphoreState: SemaphoreState","description":"kresil.ratelimiter.RateLimiter.semaphoreState","location":"kresil-lib/lib/kresil.ratelimiter/-rate-limiter/semaphore-state.html","searchKeys":["semaphoreState","private val semaphoreState: SemaphoreState","kresil.ratelimiter.RateLimiter.semaphoreState"]},{"name":"private val semaphoreState: SemaphoreState","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.semaphoreState","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/semaphore-state.html","searchKeys":["semaphoreState","private val semaphoreState: SemaphoreState","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.semaphoreState"]},{"name":"private val semaphoreState: SemaphoreState","description":"kresil.ratelimiter.semaphore.implementations.FixedWindowSemaphoreBasedRateLimiter.semaphoreState","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-fixed-window-semaphore-based-rate-limiter/semaphore-state.html","searchKeys":["semaphoreState","private val semaphoreState: SemaphoreState","kresil.ratelimiter.semaphore.implementations.FixedWindowSemaphoreBasedRateLimiter.semaphoreState"]},{"name":"private val semaphoreState: SemaphoreState","description":"kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.semaphoreState","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-sliding-window-semaphore-based-rate-limiter/semaphore-state.html","searchKeys":["semaphoreState","private val semaphoreState: SemaphoreState","kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.semaphoreState"]},{"name":"private val semaphoreState: SemaphoreState","description":"kresil.ratelimiter.semaphore.implementations.TokenBucketSemaphoreBasedRateLimiter.semaphoreState","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-token-bucket-semaphore-based-rate-limiter/semaphore-state.html","searchKeys":["semaphoreState","private val semaphoreState: SemaphoreState","kresil.ratelimiter.semaphore.implementations.TokenBucketSemaphoreBasedRateLimiter.semaphoreState"]},{"name":"private val semaphoreStateFactory: () -> SemaphoreState","description":"kresil.ratelimiter.KeyedRateLimiter.semaphoreStateFactory","location":"kresil-lib/lib/kresil.ratelimiter/-keyed-rate-limiter/semaphore-state-factory.html","searchKeys":["semaphoreStateFactory","private val semaphoreStateFactory: () -> SemaphoreState","kresil.ratelimiter.KeyedRateLimiter.semaphoreStateFactory"]},{"name":"private val slidingWindow: CountBasedSlidingWindow","description":"kresil.circuitbreaker.CircuitBreaker.slidingWindow","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/sliding-window.html","searchKeys":["slidingWindow","private val slidingWindow: CountBasedSlidingWindow","kresil.circuitbreaker.CircuitBreaker.slidingWindow"]},{"name":"private val slidingWindow: RingBuffer<Int>","description":"kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.slidingWindow","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-sliding-window-semaphore-based-rate-limiter/sliding-window.html","searchKeys":["slidingWindow","private val slidingWindow: RingBuffer<Int>","kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.slidingWindow"]},{"name":"private val stateReducer: CircuitBreakerStateReducer<Boolean>","description":"kresil.circuitbreaker.CircuitBreaker.stateReducer","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/state-reducer.html","searchKeys":["stateReducer","private val stateReducer: CircuitBreakerStateReducer<Boolean>","kresil.circuitbreaker.CircuitBreaker.stateReducer"]},{"name":"private val wasDisposed: AtomicBoolean","description":"kresil.ratelimiter.RateLimiter.wasDisposed","location":"kresil-lib/lib/kresil.ratelimiter/-rate-limiter/was-disposed.html","searchKeys":["wasDisposed","private val wasDisposed: AtomicBoolean","kresil.ratelimiter.RateLimiter.wasDisposed"]},{"name":"private var _state: CircuitBreakerState","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer._state","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/_state.html","searchKeys":["_state","private var _state: CircuitBreakerState","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer._state"]},{"name":"private var algorithm: RateLimitingAlgorithm","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.algorithm","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config-builder/algorithm.html","searchKeys":["algorithm","private var algorithm: RateLimitingAlgorithm","kresil.ratelimiter.config.RateLimiterConfigBuilder.algorithm"]},{"name":"private var delayStrategy: RetryDelayStrategy","description":"kresil.retry.config.RetryConfigBuilder.delayStrategy","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/delay-strategy.html","searchKeys":["delayStrategy","private var delayStrategy: RetryDelayStrategy","kresil.retry.config.RetryConfigBuilder.delayStrategy"]},{"name":"private var delayStrategyInOpenState: CtxDelayStrategy<Unit>","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.delayStrategyInOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/delay-strategy-in-open-state.html","searchKeys":["delayStrategyInOpenState","private var delayStrategyInOpenState: CtxDelayStrategy<Unit>","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.delayStrategyInOpenState"]},{"name":"private var exceptionHandler: ExceptionHandler","description":"kresil.retry.config.RetryConfigBuilder.exceptionHandler","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/exception-handler.html","searchKeys":["exceptionHandler","private var exceptionHandler: ExceptionHandler","kresil.retry.config.RetryConfigBuilder.exceptionHandler"]},{"name":"private var hasReachedFullCapacity: Boolean","description":"kresil.core.utils.RingBuffer.hasReachedFullCapacity","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/has-reached-full-capacity.html","searchKeys":["hasReachedFullCapacity","private var hasReachedFullCapacity: Boolean","kresil.core.utils.RingBuffer.hasReachedFullCapacity"]},{"name":"private var lastThrowable: Throwable?","description":"kresil.retry.context.RetryAsyncContextImpl.lastThrowable","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/last-throwable.html","searchKeys":["lastThrowable","private var lastThrowable: Throwable?","kresil.retry.context.RetryAsyncContextImpl.lastThrowable"]},{"name":"private var onRejected: ExceptionHandler","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.onRejected","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config-builder/on-rejected.html","searchKeys":["onRejected","private var onRejected: ExceptionHandler","kresil.ratelimiter.config.RateLimiterConfigBuilder.onRejected"]},{"name":"private var recordExceptionPredicate: OnExceptionPredicate","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.recordExceptionPredicate","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/record-exception-predicate.html","searchKeys":["recordExceptionPredicate","private var recordExceptionPredicate: OnExceptionPredicate","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.recordExceptionPredicate"]},{"name":"private var recordResultPredicate: OnResultPredicate","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.recordResultPredicate","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/record-result-predicate.html","searchKeys":["recordResultPredicate","private var recordResultPredicate: OnResultPredicate","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.recordResultPredicate"]},{"name":"private var records: Long","description":"kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.records","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-count-based-sliding-window/records.html","searchKeys":["records","private var records: Long","kresil.circuitbreaker.state.slidingwindow.CountBasedSlidingWindow.records"]},{"name":"private var retryOnResultPredicate: OnResultPredicate","description":"kresil.retry.config.RetryConfigBuilder.retryOnResultPredicate","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/retry-on-result-predicate.html","searchKeys":["retryOnResultPredicate","private var retryOnResultPredicate: OnResultPredicate","kresil.retry.config.RetryConfigBuilder.retryOnResultPredicate"]},{"name":"private var retryPredicate: OnExceptionPredicate","description":"kresil.retry.config.RetryConfigBuilder.retryPredicate","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/retry-predicate.html","searchKeys":["retryPredicate","private var retryPredicate: OnExceptionPredicate","kresil.retry.config.RetryConfigBuilder.retryPredicate"]},{"name":"private var slidingWindow: SlidingWindow","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.slidingWindow","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/sliding-window.html","searchKeys":["slidingWindow","private var slidingWindow: SlidingWindow","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.slidingWindow"]},{"name":"protected abstract fun calculateRetryDuration(permits: Int): Duration","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.calculateRetryDuration","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/calculate-retry-duration.html","searchKeys":["calculateRetryDuration","protected abstract fun calculateRetryDuration(permits: Int): Duration","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.calculateRetryDuration"]},{"name":"protected abstract suspend fun reducer(state: State, event: Event): Pair<State, List<Effect>>","description":"kresil.core.reducer.Reducer.reducer","location":"kresil-lib/lib/kresil.core.reducer/-reducer/reducer.html","searchKeys":["reducer","protected abstract suspend fun reducer(state: State, event: Event): Pair<State, List<Effect>>","kresil.core.reducer.Reducer.reducer"]},{"name":"protected abstract suspend fun replenishSemaphoreState()","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.replenishSemaphoreState","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/replenish-semaphore-state.html","searchKeys":["replenishSemaphoreState","protected abstract suspend fun replenishSemaphoreState()","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.replenishSemaphoreState"]},{"name":"protected constructor()","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.CircuitBreakerEvent","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/-circuit-breaker-event.html","searchKeys":["CircuitBreakerEvent","protected constructor()","kresil.circuitbreaker.event.CircuitBreakerEvent.CircuitBreakerEvent"]},{"name":"protected constructor()","description":"kresil.circuitbreaker.state.CircuitBreakerState.CircuitBreakerState","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-circuit-breaker-state.html","searchKeys":["CircuitBreakerState","protected constructor()","kresil.circuitbreaker.state.CircuitBreakerState.CircuitBreakerState"]},{"name":"protected constructor()","description":"kresil.ratelimiter.event.RateLimiterEvent.RateLimiterEvent","location":"kresil-lib/lib/kresil.ratelimiter.event/-rate-limiter-event/-rate-limiter-event.html","searchKeys":["RateLimiterEvent","protected constructor()","kresil.ratelimiter.event.RateLimiterEvent.RateLimiterEvent"]},{"name":"protected constructor()","description":"kresil.retry.event.RetryEvent.RetryEvent","location":"kresil-lib/lib/kresil.retry.event/-retry-event/-retry-event.html","searchKeys":["RetryEvent","protected constructor()","kresil.retry.event.RetryEvent.RetryEvent"]},{"name":"protected constructor(totalPermits: Int, replenishmentPeriod: Duration, queueLength: Int)","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.RateLimitingAlgorithm","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-rate-limiting-algorithm.html","searchKeys":["RateLimitingAlgorithm","protected constructor(totalPermits: Int, replenishmentPeriod: Duration, queueLength: Int)","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.RateLimitingAlgorithm"]},{"name":"protected inline suspend fun <EventType : Event> onSpecificEvent(crossinline action: suspend (EventType) -> Unit): Job","description":"kresil.core.events.FlowEventListenerImpl.onSpecificEvent","location":"kresil-lib/lib/kresil.core.events/-flow-event-listener-impl/on-specific-event.html","searchKeys":["onSpecificEvent","protected inline suspend fun <EventType : Event> onSpecificEvent(crossinline action: suspend (EventType) -> Unit): Job","kresil.core.events.FlowEventListenerImpl.onSpecificEvent"]},{"name":"protected open fun updateSemaphoreStatePermits(updateFunction: (Int) -> Int)","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.updateSemaphoreStatePermits","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/update-semaphore-state-permits.html","searchKeys":["updateSemaphoreStatePermits","protected open fun updateSemaphoreStatePermits(updateFunction: (Int) -> Int)","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.updateSemaphoreStatePermits"]},{"name":"protected open override fun calculateRetryDuration(permits: Int): Duration","description":"kresil.ratelimiter.semaphore.implementations.FixedWindowSemaphoreBasedRateLimiter.calculateRetryDuration","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-fixed-window-semaphore-based-rate-limiter/calculate-retry-duration.html","searchKeys":["calculateRetryDuration","protected open override fun calculateRetryDuration(permits: Int): Duration","kresil.ratelimiter.semaphore.implementations.FixedWindowSemaphoreBasedRateLimiter.calculateRetryDuration"]},{"name":"protected open override fun calculateRetryDuration(permits: Int): Duration","description":"kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.calculateRetryDuration","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-sliding-window-semaphore-based-rate-limiter/calculate-retry-duration.html","searchKeys":["calculateRetryDuration","protected open override fun calculateRetryDuration(permits: Int): Duration","kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.calculateRetryDuration"]},{"name":"protected open override fun calculateRetryDuration(permits: Int): Duration","description":"kresil.ratelimiter.semaphore.implementations.TokenBucketSemaphoreBasedRateLimiter.calculateRetryDuration","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-token-bucket-semaphore-based-rate-limiter/calculate-retry-duration.html","searchKeys":["calculateRetryDuration","protected open override fun calculateRetryDuration(permits: Int): Duration","kresil.ratelimiter.semaphore.implementations.TokenBucketSemaphoreBasedRateLimiter.calculateRetryDuration"]},{"name":"protected open override fun updateSemaphoreStatePermits(updateFunction: (Int) -> Int)","description":"kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.updateSemaphoreStatePermits","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-sliding-window-semaphore-based-rate-limiter/update-semaphore-state-permits.html","searchKeys":["updateSemaphoreStatePermits","protected open override fun updateSemaphoreStatePermits(updateFunction: (Int) -> Int)","kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.updateSemaphoreStatePermits"]},{"name":"protected open suspend override fun reducer(state: CircuitBreakerState, event: CircuitBreakerReducerEvent): Pair<CircuitBreakerState, List<CircuitBreakerReducerEffect>>","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.reducer","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/reducer.html","searchKeys":["reducer","protected open suspend override fun reducer(state: CircuitBreakerState, event: CircuitBreakerReducerEvent): Pair<CircuitBreakerState, List<CircuitBreakerReducerEffect>>","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.reducer"]},{"name":"protected open suspend override fun replenishSemaphoreState()","description":"kresil.ratelimiter.semaphore.implementations.FixedWindowSemaphoreBasedRateLimiter.replenishSemaphoreState","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-fixed-window-semaphore-based-rate-limiter/replenish-semaphore-state.html","searchKeys":["replenishSemaphoreState","protected open suspend override fun replenishSemaphoreState()","kresil.ratelimiter.semaphore.implementations.FixedWindowSemaphoreBasedRateLimiter.replenishSemaphoreState"]},{"name":"protected open suspend override fun replenishSemaphoreState()","description":"kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.replenishSemaphoreState","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-sliding-window-semaphore-based-rate-limiter/replenish-semaphore-state.html","searchKeys":["replenishSemaphoreState","protected open suspend override fun replenishSemaphoreState()","kresil.ratelimiter.semaphore.implementations.SlidingWindowSemaphoreBasedRateLimiter.replenishSemaphoreState"]},{"name":"protected open suspend override fun replenishSemaphoreState()","description":"kresil.ratelimiter.semaphore.implementations.TokenBucketSemaphoreBasedRateLimiter.replenishSemaphoreState","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.implementations/-token-bucket-semaphore-based-rate-limiter/replenish-semaphore-state.html","searchKeys":["replenishSemaphoreState","protected open suspend override fun replenishSemaphoreState()","kresil.ratelimiter.semaphore.implementations.TokenBucketSemaphoreBasedRateLimiter.replenishSemaphoreState"]},{"name":"protected val currentReplenishmentTimeMark: ComparableTimeMark","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.currentReplenishmentTimeMark","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/current-replenishment-time-mark.html","searchKeys":["currentReplenishmentTimeMark","protected val currentReplenishmentTimeMark: ComparableTimeMark","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.currentReplenishmentTimeMark"]},{"name":"sealed class CircuitBreakerEvent","description":"kresil.circuitbreaker.event.CircuitBreakerEvent","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/index.html","searchKeys":["CircuitBreakerEvent","sealed class CircuitBreakerEvent","kresil.circuitbreaker.event.CircuitBreakerEvent"]},{"name":"sealed class CircuitBreakerState","description":"kresil.circuitbreaker.state.CircuitBreakerState","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/index.html","searchKeys":["CircuitBreakerState","sealed class CircuitBreakerState","kresil.circuitbreaker.state.CircuitBreakerState"]},{"name":"sealed class RateLimiterEvent","description":"kresil.ratelimiter.event.RateLimiterEvent","location":"kresil-lib/lib/kresil.ratelimiter.event/-rate-limiter-event/index.html","searchKeys":["RateLimiterEvent","sealed class RateLimiterEvent","kresil.ratelimiter.event.RateLimiterEvent"]},{"name":"sealed class RateLimitingAlgorithm(val totalPermits: Int, val replenishmentPeriod: Duration, val queueLength: Int)","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/index.html","searchKeys":["RateLimitingAlgorithm","sealed class RateLimitingAlgorithm(val totalPermits: Int, val replenishmentPeriod: Duration, val queueLength: Int)","kresil.ratelimiter.algorithm.RateLimitingAlgorithm"]},{"name":"sealed class RetryEvent","description":"kresil.retry.event.RetryEvent","location":"kresil-lib/lib/kresil.retry.event/-retry-event/index.html","searchKeys":["RetryEvent","sealed class RetryEvent","kresil.retry.event.RetryEvent"]},{"name":"sealed interface CircuitBreakerReducerEffect","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEffect","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-effect/index.html","searchKeys":["CircuitBreakerReducerEffect","sealed interface CircuitBreakerReducerEffect","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEffect"]},{"name":"suspend fun <R> executeOperation(block: Supplier<R>): R","description":"kresil.circuitbreaker.CircuitBreaker.executeOperation","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/execute-operation.html","searchKeys":["executeOperation","suspend fun <R> executeOperation(block: Supplier<R>): R","kresil.circuitbreaker.CircuitBreaker.executeOperation"]},{"name":"suspend fun currentState(): CircuitBreakerState","description":"kresil.circuitbreaker.CircuitBreaker.currentState","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/current-state.html","searchKeys":["currentState","suspend fun currentState(): CircuitBreakerState","kresil.circuitbreaker.CircuitBreaker.currentState"]},{"name":"suspend fun getRateLimiter(key: Key): RateLimiter","description":"kresil.ratelimiter.KeyedRateLimiter.getRateLimiter","location":"kresil-lib/lib/kresil.ratelimiter/-keyed-rate-limiter/get-rate-limiter.html","searchKeys":["getRateLimiter","suspend fun getRateLimiter(key: Key): RateLimiter","kresil.ratelimiter.KeyedRateLimiter.getRateLimiter"]},{"name":"suspend fun onCallNotPermitted(action: suspend (CircuitBreakerEvent.CallNotPermitted) -> Unit): Job","description":"kresil.circuitbreaker.CircuitBreaker.onCallNotPermitted","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/on-call-not-permitted.html","searchKeys":["onCallNotPermitted","suspend fun onCallNotPermitted(action: suspend (CircuitBreakerEvent.CallNotPermitted) -> Unit): Job","kresil.circuitbreaker.CircuitBreaker.onCallNotPermitted"]},{"name":"suspend fun onError(action: suspend (RetryEvent.RetryOnError) -> Unit): Job","description":"kresil.retry.Retry.onError","location":"kresil-lib/lib/kresil.retry/-retry/on-error.html","searchKeys":["onError","suspend fun onError(action: suspend (RetryEvent.RetryOnError) -> Unit): Job","kresil.retry.Retry.onError"]},{"name":"suspend fun onIgnoredError(action: suspend (RetryEvent.RetryOnIgnoredError) -> Unit): Job","description":"kresil.retry.Retry.onIgnoredError","location":"kresil-lib/lib/kresil.retry/-retry/on-ignored-error.html","searchKeys":["onIgnoredError","suspend fun onIgnoredError(action: suspend (RetryEvent.RetryOnIgnoredError) -> Unit): Job","kresil.retry.Retry.onIgnoredError"]},{"name":"suspend fun onOperationFailure(action: suspend (CircuitBreakerEvent.RecordedFailure) -> Unit): Job","description":"kresil.circuitbreaker.CircuitBreaker.onOperationFailure","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/on-operation-failure.html","searchKeys":["onOperationFailure","suspend fun onOperationFailure(action: suspend (CircuitBreakerEvent.RecordedFailure) -> Unit): Job","kresil.circuitbreaker.CircuitBreaker.onOperationFailure"]},{"name":"suspend fun onOperationSuccess(action: suspend (CircuitBreakerEvent.RecordedSuccess) -> Unit): Job","description":"kresil.circuitbreaker.CircuitBreaker.onOperationSuccess","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/on-operation-success.html","searchKeys":["onOperationSuccess","suspend fun onOperationSuccess(action: suspend (CircuitBreakerEvent.RecordedSuccess) -> Unit): Job","kresil.circuitbreaker.CircuitBreaker.onOperationSuccess"]},{"name":"suspend fun onReset(action: suspend (CircuitBreakerEvent.Reset) -> Unit): Job","description":"kresil.circuitbreaker.CircuitBreaker.onReset","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/on-reset.html","searchKeys":["onReset","suspend fun onReset(action: suspend (CircuitBreakerEvent.Reset) -> Unit): Job","kresil.circuitbreaker.CircuitBreaker.onReset"]},{"name":"suspend fun onRetry(action: suspend (RetryEvent.RetryOnRetry) -> Unit): Job","description":"kresil.retry.Retry.onRetry","location":"kresil-lib/lib/kresil.retry/-retry/on-retry.html","searchKeys":["onRetry","suspend fun onRetry(action: suspend (RetryEvent.RetryOnRetry) -> Unit): Job","kresil.retry.Retry.onRetry"]},{"name":"suspend fun onStateTransition(action: suspend (CircuitBreakerEvent.StateTransition) -> Unit): Job","description":"kresil.circuitbreaker.CircuitBreaker.onStateTransition","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/on-state-transition.html","searchKeys":["onStateTransition","suspend fun onStateTransition(action: suspend (CircuitBreakerEvent.StateTransition) -> Unit): Job","kresil.circuitbreaker.CircuitBreaker.onStateTransition"]},{"name":"suspend fun onSuccess(action: suspend (RetryEvent.RetryOnSuccess) -> Unit): Job","description":"kresil.retry.Retry.onSuccess","location":"kresil-lib/lib/kresil.retry/-retry/on-success.html","searchKeys":["onSuccess","suspend fun onSuccess(action: suspend (RetryEvent.RetryOnSuccess) -> Unit): Job","kresil.retry.Retry.onSuccess"]},{"name":"suspend fun recordFailure()","description":"kresil.circuitbreaker.CircuitBreaker.recordFailure","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/record-failure.html","searchKeys":["recordFailure","suspend fun recordFailure()","kresil.circuitbreaker.CircuitBreaker.recordFailure"]},{"name":"suspend fun recordSuccess()","description":"kresil.circuitbreaker.CircuitBreaker.recordSuccess","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/record-success.html","searchKeys":["recordSuccess","suspend fun recordSuccess()","kresil.circuitbreaker.CircuitBreaker.recordSuccess"]},{"name":"suspend fun removeRateLimiter(key: Key)","description":"kresil.ratelimiter.KeyedRateLimiter.removeRateLimiter","location":"kresil-lib/lib/kresil.ratelimiter/-keyed-rate-limiter/remove-rate-limiter.html","searchKeys":["removeRateLimiter","suspend fun removeRateLimiter(key: Key)","kresil.ratelimiter.KeyedRateLimiter.removeRateLimiter"]},{"name":"suspend fun reset()","description":"kresil.circuitbreaker.CircuitBreaker.reset","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/reset.html","searchKeys":["reset","suspend fun reset()","kresil.circuitbreaker.CircuitBreaker.reset"]},{"name":"suspend fun transitionToClosedState()","description":"kresil.circuitbreaker.CircuitBreaker.transitionToClosedState","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/transition-to-closed-state.html","searchKeys":["transitionToClosedState","suspend fun transitionToClosedState()","kresil.circuitbreaker.CircuitBreaker.transitionToClosedState"]},{"name":"suspend fun transitionToHalfOpenState()","description":"kresil.circuitbreaker.CircuitBreaker.transitionToHalfOpenState","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/transition-to-half-open-state.html","searchKeys":["transitionToHalfOpenState","suspend fun transitionToHalfOpenState()","kresil.circuitbreaker.CircuitBreaker.transitionToHalfOpenState"]},{"name":"suspend fun transitionToOpenState()","description":"kresil.circuitbreaker.CircuitBreaker.transitionToOpenState","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/transition-to-open-state.html","searchKeys":["transitionToOpenState","suspend fun transitionToOpenState()","kresil.circuitbreaker.CircuitBreaker.transitionToOpenState"]},{"name":"suspend fun wire()","description":"kresil.circuitbreaker.CircuitBreaker.wire","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/wire.html","searchKeys":["wire","suspend fun wire()","kresil.circuitbreaker.CircuitBreaker.wire"]},{"name":"typealias BiFunction<InputA, InputB, Result> = suspend (InputA, InputB) -> Result","description":"kresil.core.oper.BiFunction","location":"kresil-lib/lib/kresil.core.oper/-bi-function/index.html","searchKeys":["BiFunction","typealias BiFunction<InputA, InputB, Result> = suspend (InputA, InputB) -> Result","kresil.core.oper.BiFunction"]},{"name":"typealias CtxBiFunction<Context, InputA, InputB, Result> = suspend (Context, InputA, InputB) -> Result","description":"kresil.core.oper.CtxBiFunction","location":"kresil-lib/lib/kresil.core.oper/-ctx-bi-function/index.html","searchKeys":["CtxBiFunction","typealias CtxBiFunction<Context, InputA, InputB, Result> = suspend (Context, InputA, InputB) -> Result","kresil.core.oper.CtxBiFunction"]},{"name":"typealias CtxDelayStrategy<TContext> = suspend (attempt: Int, context: TContext) -> Duration","description":"kresil.core.delay.strategy.CtxDelayStrategy","location":"kresil-lib/lib/kresil.core.delay.strategy/-ctx-delay-strategy/index.html","searchKeys":["CtxDelayStrategy","typealias CtxDelayStrategy<TContext> = suspend (attempt: Int, context: TContext) -> Duration","kresil.core.delay.strategy.CtxDelayStrategy"]},{"name":"typealias CtxFunction<Context, Input, Result> = suspend (Context, Input) -> Result","description":"kresil.core.oper.CtxFunction","location":"kresil-lib/lib/kresil.core.oper/-ctx-function/index.html","searchKeys":["CtxFunction","typealias CtxFunction<Context, Input, Result> = suspend (Context, Input) -> Result","kresil.core.oper.CtxFunction"]},{"name":"typealias CtxSupplier<Context, Result> = suspend (Context) -> Result","description":"kresil.core.oper.CtxSupplier","location":"kresil-lib/lib/kresil.core.oper/-ctx-supplier/index.html","searchKeys":["CtxSupplier","typealias CtxSupplier<Context, Result> = suspend (Context) -> Result","kresil.core.oper.CtxSupplier"]},{"name":"typealias DelayStrategy = suspend (attempt: Int) -> Duration","description":"kresil.core.delay.strategy.DelayStrategy","location":"kresil-lib/lib/kresil.core.delay.strategy/-delay-strategy/index.html","searchKeys":["DelayStrategy","typealias DelayStrategy = suspend (attempt: Int) -> Duration","kresil.core.delay.strategy.DelayStrategy"]},{"name":"typealias ExceptionHandler = (Throwable) -> Throwable","description":"kresil.core.callbacks.ExceptionHandler","location":"kresil-lib/lib/kresil.core.callbacks/-exception-handler/index.html","searchKeys":["ExceptionHandler","typealias ExceptionHandler = (Throwable) -> Throwable","kresil.core.callbacks.ExceptionHandler"]},{"name":"typealias Function<Input, Result> = suspend (Input) -> Result","description":"kresil.core.oper.Function","location":"kresil-lib/lib/kresil.core.oper/-function/index.html","searchKeys":["Function","typealias Function<Input, Result> = suspend (Input) -> Result","kresil.core.oper.Function"]},{"name":"typealias OnExceptionPredicate = (Throwable) -> Boolean","description":"kresil.core.callbacks.OnExceptionPredicate","location":"kresil-lib/lib/kresil.core.callbacks/-on-exception-predicate/index.html","searchKeys":["OnExceptionPredicate","typealias OnExceptionPredicate = (Throwable) -> Boolean","kresil.core.callbacks.OnExceptionPredicate"]},{"name":"typealias OnResultPredicate = (result: Any?) -> Boolean","description":"kresil.core.callbacks.OnResultPredicate","location":"kresil-lib/lib/kresil.core.callbacks/-on-result-predicate/index.html","searchKeys":["OnResultPredicate","typealias OnResultPredicate = (result: Any?) -> Boolean","kresil.core.callbacks.OnResultPredicate"]},{"name":"typealias ResultMapper<ResultA, ResultB> = (ResultA?, Throwable?) -> ResultB?","description":"kresil.core.callbacks.ResultMapper","location":"kresil-lib/lib/kresil.core.callbacks/-result-mapper/index.html","searchKeys":["ResultMapper","typealias ResultMapper<ResultA, ResultB> = (ResultA?, Throwable?) -> ResultB?","kresil.core.callbacks.ResultMapper"]},{"name":"typealias RetryDelayStrategy = CtxDelayStrategy<RetryDelayStrategyContext>","description":"kresil.retry.delay.RetryDelayStrategy","location":"kresil-lib/lib/kresil.retry.delay/-retry-delay-strategy/index.html","searchKeys":["RetryDelayStrategy","typealias RetryDelayStrategy = CtxDelayStrategy<RetryDelayStrategyContext>","kresil.retry.delay.RetryDelayStrategy"]},{"name":"typealias Supplier<Result> = suspend () -> Result","description":"kresil.core.oper.Supplier","location":"kresil-lib/lib/kresil.core.oper/-supplier/index.html","searchKeys":["Supplier","typealias Supplier<Result> = suspend () -> Result","kresil.core.oper.Supplier"]},{"name":"val algorithm: RateLimitingAlgorithm","description":"kresil.ratelimiter.config.RateLimiterConfig.algorithm","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config/algorithm.html","searchKeys":["algorithm","val algorithm: RateLimitingAlgorithm","kresil.ratelimiter.config.RateLimiterConfig.algorithm"]},{"name":"val attempt: Int","description":"kresil.retry.context.RetryContext.attempt","location":"kresil-lib/lib/kresil.retry.context/-retry-context/attempt.html","searchKeys":["attempt","val attempt: Int","kresil.retry.context.RetryContext.attempt"]},{"name":"val attempt: Int","description":"kresil.retry.event.RetryEvent.RetryOnRetry.attempt","location":"kresil-lib/lib/kresil.retry.event/-retry-event/-retry-on-retry/attempt.html","searchKeys":["attempt","val attempt: Int","kresil.retry.event.RetryEvent.RetryOnRetry.attempt"]},{"name":"val baseTimeoutDuration: Duration","description":"kresil.ratelimiter.config.RateLimiterConfig.baseTimeoutDuration","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config/base-timeout-duration.html","searchKeys":["baseTimeoutDuration","val baseTimeoutDuration: Duration","kresil.ratelimiter.config.RateLimiterConfig.baseTimeoutDuration"]},{"name":"val capacity: Int","description":"kresil.core.utils.RingBuffer.capacity","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/capacity.html","searchKeys":["capacity","val capacity: Int","kresil.core.utils.RingBuffer.capacity"]},{"name":"val config: CircuitBreakerConfig","description":"kresil.circuitbreaker.CircuitBreaker.config","location":"kresil-lib/lib/kresil.circuitbreaker/-circuit-breaker/config.html","searchKeys":["config","val config: CircuitBreakerConfig","kresil.circuitbreaker.CircuitBreaker.config"]},{"name":"val config: CircuitBreakerConfig","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.config","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/config.html","searchKeys":["config","val config: CircuitBreakerConfig","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.config"]},{"name":"val config: RateLimiterConfig","description":"kresil.ratelimiter.KeyedRateLimiter.config","location":"kresil-lib/lib/kresil.ratelimiter/-keyed-rate-limiter/config.html","searchKeys":["config","val config: RateLimiterConfig","kresil.ratelimiter.KeyedRateLimiter.config"]},{"name":"val config: RateLimiterConfig","description":"kresil.ratelimiter.RateLimiter.config","location":"kresil-lib/lib/kresil.ratelimiter/-rate-limiter/config.html","searchKeys":["config","val config: RateLimiterConfig","kresil.ratelimiter.RateLimiter.config"]},{"name":"val config: RetryConfig","description":"kresil.retry.Retry.config","location":"kresil-lib/lib/kresil.retry/-retry/config.html","searchKeys":["config","val config: RetryConfig","kresil.retry.Retry.config"]},{"name":"val continuation: Continuation<Unit>","description":"kresil.ratelimiter.semaphore.request.RateLimitedRequest.continuation","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.request/-rate-limited-request/continuation.html","searchKeys":["continuation","val continuation: Continuation<Unit>","kresil.ratelimiter.semaphore.request.RateLimitedRequest.continuation"]},{"name":"val delayDuration: Duration","description":"kresil.circuitbreaker.state.CircuitBreakerState.Open.delayDuration","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-open/delay-duration.html","searchKeys":["delayDuration","val delayDuration: Duration","kresil.circuitbreaker.state.CircuitBreakerState.Open.delayDuration"]},{"name":"val delayStrategy: RetryDelayStrategy","description":"kresil.retry.config.RetryConfig.delayStrategy","location":"kresil-lib/lib/kresil.retry.config/-retry-config/delay-strategy.html","searchKeys":["delayStrategy","val delayStrategy: RetryDelayStrategy","kresil.retry.config.RetryConfig.delayStrategy"]},{"name":"val delayStrategyInOpenState: CtxDelayStrategy<Unit>","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.delayStrategyInOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config/delay-strategy-in-open-state.html","searchKeys":["delayStrategyInOpenState","val delayStrategyInOpenState: CtxDelayStrategy<Unit>","kresil.circuitbreaker.config.CircuitBreakerConfig.delayStrategyInOpenState"]},{"name":"val eldestEntry: T","description":"kresil.core.utils.RingBuffer.eldestEntry","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/eldest-entry.html","searchKeys":["eldestEntry","val eldestEntry: T","kresil.core.utils.RingBuffer.eldestEntry"]},{"name":"val empty: Boolean","description":"kresil.core.utils.CircularDoublyLinkedList.empty","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/empty.html","searchKeys":["empty","val empty: Boolean","kresil.core.utils.CircularDoublyLinkedList.empty"]},{"name":"val entries: EnumEntries<CircuitBreakerReducerEvent>","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.entries","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/entries.html","searchKeys":["entries","val entries: EnumEntries<CircuitBreakerReducerEvent>","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.entries"]},{"name":"val entries: EnumEntries<SlidingWindowType>","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.entries","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window-type/entries.html","searchKeys":["entries","val entries: EnumEntries<SlidingWindowType>","kresil.circuitbreaker.state.slidingwindow.SlidingWindowType.entries"]},{"name":"val events: MutableSharedFlow<CircuitBreakerEvent>","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.events","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/events.html","searchKeys":["events","val events: MutableSharedFlow<CircuitBreakerEvent>","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.events"]},{"name":"val exceptionHandler: ExceptionHandler","description":"kresil.retry.config.RetryConfig.exceptionHandler","location":"kresil-lib/lib/kresil.retry.config/-retry-config/exception-handler.html","searchKeys":["exceptionHandler","val exceptionHandler: ExceptionHandler","kresil.retry.config.RetryConfig.exceptionHandler"]},{"name":"val failureRate: Double","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedFailure.failureRate","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/-recorded-failure/failure-rate.html","searchKeys":["failureRate","val failureRate: Double","kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedFailure.failureRate"]},{"name":"val failureRate: Double","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedSuccess.failureRate","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/-recorded-success/failure-rate.html","searchKeys":["failureRate","val failureRate: Double","kresil.circuitbreaker.event.CircuitBreakerEvent.RecordedSuccess.failureRate"]},{"name":"val failureRateThreshold: Double","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.failureRateThreshold","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config/failure-rate-threshold.html","searchKeys":["failureRateThreshold","val failureRateThreshold: Double","kresil.circuitbreaker.config.CircuitBreakerConfig.failureRateThreshold"]},{"name":"val fromState: CircuitBreakerState","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.fromState","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/-state-transition/from-state.html","searchKeys":["fromState","val fromState: CircuitBreakerState","kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.fromState"]},{"name":"val headNode: Node<T>?","description":"kresil.core.utils.CircularDoublyLinkedList.headNode","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/head-node.html","searchKeys":["headNode","val headNode: Node<T>?","kresil.core.utils.CircularDoublyLinkedList.headNode"]},{"name":"val headValue: T?","description":"kresil.core.utils.CircularDoublyLinkedList.headValue","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/head-value.html","searchKeys":["headValue","val headValue: T?","kresil.core.utils.CircularDoublyLinkedList.headValue"]},{"name":"val isEmpty: Boolean","description":"kresil.core.utils.RingBuffer.isEmpty","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/is-empty.html","searchKeys":["isEmpty","val isEmpty: Boolean","kresil.core.utils.RingBuffer.isEmpty"]},{"name":"val isFull: Boolean","description":"kresil.core.utils.RingBuffer.isFull","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/is-full.html","searchKeys":["isFull","val isFull: Boolean","kresil.core.utils.RingBuffer.isFull"]},{"name":"val isTransitionEvent: Boolean","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.isTransitionEvent","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-reducer-event/is-transition-event.html","searchKeys":["isTransitionEvent","val isTransitionEvent: Boolean","kresil.circuitbreaker.state.reducer.CircuitBreakerReducerEvent.isTransitionEvent"]},{"name":"val lastResult: Any? = null","description":"kresil.retry.delay.RetryDelayStrategyContext.lastResult","location":"kresil-lib/lib/kresil.retry.delay/-retry-delay-strategy-context/last-result.html","searchKeys":["lastResult","val lastResult: Any? = null","kresil.retry.delay.RetryDelayStrategyContext.lastResult"]},{"name":"val lastThrowable: Throwable? = null","description":"kresil.retry.delay.RetryDelayStrategyContext.lastThrowable","location":"kresil-lib/lib/kresil.retry.delay/-retry-delay-strategy-context/last-throwable.html","searchKeys":["lastThrowable","val lastThrowable: Throwable? = null","kresil.retry.delay.RetryDelayStrategyContext.lastThrowable"]},{"name":"val logger: KLogger","description":"kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.Companion.logger","location":"kresil-lib/lib/kresil.ratelimiter.semaphore/-semaphore-based-rate-limiter/-companion/logger.html","searchKeys":["logger","val logger: KLogger","kresil.ratelimiter.semaphore.SemaphoreBasedRateLimiter.Companion.logger"]},{"name":"val manual: Boolean = false","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.manual","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/-state-transition/manual.html","searchKeys":["manual","val manual: Boolean = false","kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.manual"]},{"name":"val maxAttempts: Int","description":"kresil.retry.config.RetryConfig.maxAttempts","location":"kresil-lib/lib/kresil.retry.config/-retry-config/max-attempts.html","searchKeys":["maxAttempts","val maxAttempts: Int","kresil.retry.config.RetryConfig.maxAttempts"]},{"name":"val maxWaitDurationInHalfOpenState: Duration","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.maxWaitDurationInHalfOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config/max-wait-duration-in-half-open-state.html","searchKeys":["maxWaitDurationInHalfOpenState","val maxWaitDurationInHalfOpenState: Duration","kresil.circuitbreaker.config.CircuitBreakerConfig.maxWaitDurationInHalfOpenState"]},{"name":"val maybeValue: T?","description":"kresil.core.utils.CircularDoublyLinkedList.NodeImpl.maybeValue","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/-node-impl/maybe-value.html","searchKeys":["maybeValue","val maybeValue: T?","kresil.core.utils.CircularDoublyLinkedList.NodeImpl.maybeValue"]},{"name":"val minimumThroughput: Int","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindow.minimumThroughput","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window/minimum-throughput.html","searchKeys":["minimumThroughput","val minimumThroughput: Int","kresil.circuitbreaker.state.slidingwindow.SlidingWindow.minimumThroughput"]},{"name":"val notEmpty: Boolean","description":"kresil.core.utils.CircularDoublyLinkedList.notEmpty","location":"kresil-lib/lib/kresil.core.utils/-circular-doubly-linked-list/not-empty.html","searchKeys":["notEmpty","val notEmpty: Boolean","kresil.core.utils.CircularDoublyLinkedList.notEmpty"]},{"name":"val nrOfCallsAttempted: Int","description":"kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.nrOfCallsAttempted","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-half-open/nr-of-calls-attempted.html","searchKeys":["nrOfCallsAttempted","val nrOfCallsAttempted: Int","kresil.circuitbreaker.state.CircuitBreakerState.HalfOpen.nrOfCallsAttempted"]},{"name":"val nrOfTransitionsToOpenStateInACycle: Int","description":"kresil.circuitbreaker.state.CircuitBreakerState.Open.nrOfTransitionsToOpenStateInACycle","location":"kresil-lib/lib/kresil.circuitbreaker.state/-circuit-breaker-state/-open/nr-of-transitions-to-open-state-in-a-cycle.html","searchKeys":["nrOfTransitionsToOpenStateInACycle","val nrOfTransitionsToOpenStateInACycle: Int","kresil.circuitbreaker.state.CircuitBreakerState.Open.nrOfTransitionsToOpenStateInACycle"]},{"name":"val onRejected: ExceptionHandler","description":"kresil.ratelimiter.config.RateLimiterConfig.onRejected","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config/on-rejected.html","searchKeys":["onRejected","val onRejected: ExceptionHandler","kresil.ratelimiter.config.RateLimiterConfig.onRejected"]},{"name":"val permits: Int","description":"kresil.ratelimiter.event.RateLimiterEvent.Queued.permits","location":"kresil-lib/lib/kresil.ratelimiter.event/-rate-limiter-event/-queued/permits.html","searchKeys":["permits","val permits: Int","kresil.ratelimiter.event.RateLimiterEvent.Queued.permits"]},{"name":"val permits: Int","description":"kresil.ratelimiter.event.RateLimiterEvent.Reject.permits","location":"kresil-lib/lib/kresil.ratelimiter.event/-rate-limiter-event/-reject/permits.html","searchKeys":["permits","val permits: Int","kresil.ratelimiter.event.RateLimiterEvent.Reject.permits"]},{"name":"val permits: Int","description":"kresil.ratelimiter.event.RateLimiterEvent.Success.permits","location":"kresil-lib/lib/kresil.ratelimiter.event/-rate-limiter-event/-success/permits.html","searchKeys":["permits","val permits: Int","kresil.ratelimiter.event.RateLimiterEvent.Success.permits"]},{"name":"val permits: Int","description":"kresil.ratelimiter.semaphore.request.RateLimitedRequest.permits","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.request/-rate-limited-request/permits.html","searchKeys":["permits","val permits: Int","kresil.ratelimiter.semaphore.request.RateLimitedRequest.permits"]},{"name":"val permittedNumberOfCallsInHalfOpenState: Int","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.permittedNumberOfCallsInHalfOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config/permitted-number-of-calls-in-half-open-state.html","searchKeys":["permittedNumberOfCallsInHalfOpenState","val permittedNumberOfCallsInHalfOpenState: Int","kresil.circuitbreaker.config.CircuitBreakerConfig.permittedNumberOfCallsInHalfOpenState"]},{"name":"val permittedRetryAttempts: Int","description":"kresil.retry.config.RetryConfig.permittedRetryAttempts","location":"kresil-lib/lib/kresil.retry.config/-retry-config/permitted-retry-attempts.html","searchKeys":["permittedRetryAttempts","val permittedRetryAttempts: Int","kresil.retry.config.RetryConfig.permittedRetryAttempts"]},{"name":"val recordExceptionPredicate: OnExceptionPredicate","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.recordExceptionPredicate","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config/record-exception-predicate.html","searchKeys":["recordExceptionPredicate","val recordExceptionPredicate: OnExceptionPredicate","kresil.circuitbreaker.config.CircuitBreakerConfig.recordExceptionPredicate"]},{"name":"val recordResultPredicate: OnResultPredicate","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.recordResultPredicate","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config/record-result-predicate.html","searchKeys":["recordResultPredicate","val recordResultPredicate: OnResultPredicate","kresil.circuitbreaker.config.CircuitBreakerConfig.recordResultPredicate"]},{"name":"val retryAfter: Duration","description":"kresil.ratelimiter.event.RateLimiterEvent.Reject.retryAfter","location":"kresil-lib/lib/kresil.ratelimiter.event/-rate-limiter-event/-reject/retry-after.html","searchKeys":["retryAfter","val retryAfter: Duration","kresil.ratelimiter.event.RateLimiterEvent.Reject.retryAfter"]},{"name":"val retryAfter: Duration","description":"kresil.ratelimiter.exceptions.RateLimiterRejectedException.retryAfter","location":"kresil-lib/lib/kresil.ratelimiter.exceptions/-rate-limiter-rejected-exception/retry-after.html","searchKeys":["retryAfter","val retryAfter: Duration","kresil.ratelimiter.exceptions.RateLimiterRejectedException.retryAfter"]},{"name":"val retryOnResultPredicate: OnResultPredicate","description":"kresil.retry.config.RetryConfig.retryOnResultPredicate","location":"kresil-lib/lib/kresil.retry.config/-retry-config/retry-on-result-predicate.html","searchKeys":["retryOnResultPredicate","val retryOnResultPredicate: OnResultPredicate","kresil.retry.config.RetryConfig.retryOnResultPredicate"]},{"name":"val retryPredicate: OnExceptionPredicate","description":"kresil.retry.config.RetryConfig.retryPredicate","location":"kresil-lib/lib/kresil.retry.config/-retry-config/retry-predicate.html","searchKeys":["retryPredicate","val retryPredicate: OnExceptionPredicate","kresil.retry.config.RetryConfig.retryPredicate"]},{"name":"val segments: Int","description":"kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.segments","location":"kresil-lib/lib/kresil.ratelimiter.algorithm/-rate-limiting-algorithm/-sliding-window-counter/segments.html","searchKeys":["segments","val segments: Int","kresil.ratelimiter.algorithm.RateLimitingAlgorithm.SlidingWindowCounter.segments"]},{"name":"val size: Int","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindow.size","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window/size.html","searchKeys":["size","val size: Int","kresil.circuitbreaker.state.slidingwindow.SlidingWindow.size"]},{"name":"val size: Int","description":"kresil.core.utils.RingBuffer.size","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/size.html","searchKeys":["size","val size: Int","kresil.core.utils.RingBuffer.size"]},{"name":"val slidingWindow: FailureRateSlidingWindow<T>","description":"kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.slidingWindow","location":"kresil-lib/lib/kresil.circuitbreaker.state.reducer/-circuit-breaker-state-reducer/sliding-window.html","searchKeys":["slidingWindow","val slidingWindow: FailureRateSlidingWindow<T>","kresil.circuitbreaker.state.reducer.CircuitBreakerStateReducer.slidingWindow"]},{"name":"val slidingWindow: SlidingWindow","description":"kresil.circuitbreaker.config.CircuitBreakerConfig.slidingWindow","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config/sliding-window.html","searchKeys":["slidingWindow","val slidingWindow: SlidingWindow","kresil.circuitbreaker.config.CircuitBreakerConfig.slidingWindow"]},{"name":"val throwable: Throwable","description":"kresil.retry.event.RetryEvent.RetryOnError.throwable","location":"kresil-lib/lib/kresil.retry.event/-retry-event/-retry-on-error/throwable.html","searchKeys":["throwable","val throwable: Throwable","kresil.retry.event.RetryEvent.RetryOnError.throwable"]},{"name":"val throwable: Throwable","description":"kresil.retry.event.RetryEvent.RetryOnIgnoredError.throwable","location":"kresil-lib/lib/kresil.retry.event/-retry-event/-retry-on-ignored-error/throwable.html","searchKeys":["throwable","val throwable: Throwable","kresil.retry.event.RetryEvent.RetryOnIgnoredError.throwable"]},{"name":"val timeout: Duration","description":"kresil.ratelimiter.event.RateLimiterEvent.Queued.timeout","location":"kresil-lib/lib/kresil.ratelimiter.event/-rate-limiter-event/-queued/timeout.html","searchKeys":["timeout","val timeout: Duration","kresil.ratelimiter.event.RateLimiterEvent.Queued.timeout"]},{"name":"val toState: CircuitBreakerState","description":"kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.toState","location":"kresil-lib/lib/kresil.circuitbreaker.event/-circuit-breaker-event/-state-transition/to-state.html","searchKeys":["toState","val toState: CircuitBreakerState","kresil.circuitbreaker.event.CircuitBreakerEvent.StateTransition.toState"]},{"name":"val type: SlidingWindowType","description":"kresil.circuitbreaker.state.slidingwindow.SlidingWindow.type","location":"kresil-lib/lib/kresil.circuitbreaker.state.slidingwindow/-sliding-window/type.html","searchKeys":["type","val type: SlidingWindowType","kresil.circuitbreaker.state.slidingwindow.SlidingWindow.type"]},{"name":"var baseTimeoutDuration: Duration","description":"kresil.ratelimiter.config.RateLimiterConfigBuilder.baseTimeoutDuration","location":"kresil-lib/lib/kresil.ratelimiter.config/-rate-limiter-config-builder/base-timeout-duration.html","searchKeys":["baseTimeoutDuration","var baseTimeoutDuration: Duration","kresil.ratelimiter.config.RateLimiterConfigBuilder.baseTimeoutDuration"]},{"name":"var canResume: Boolean","description":"kresil.ratelimiter.semaphore.request.RateLimitedRequest.canResume","location":"kresil-lib/lib/kresil.ratelimiter.semaphore.request/-rate-limited-request/can-resume.html","searchKeys":["canResume","var canResume: Boolean","kresil.ratelimiter.semaphore.request.RateLimitedRequest.canResume"]},{"name":"var currentRetryAttempt: Int","description":"kresil.retry.context.RetryAsyncContextImpl.currentRetryAttempt","location":"kresil-lib/lib/kresil.retry.context/-retry-async-context-impl/current-retry-attempt.html","searchKeys":["currentRetryAttempt","var currentRetryAttempt: Int","kresil.retry.context.RetryAsyncContextImpl.currentRetryAttempt"]},{"name":"var failureRateThreshold: Double","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.failureRateThreshold","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/failure-rate-threshold.html","searchKeys":["failureRateThreshold","var failureRateThreshold: Double","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.failureRateThreshold"]},{"name":"var maxAttempts: Int","description":"kresil.retry.config.RetryConfigBuilder.maxAttempts","location":"kresil-lib/lib/kresil.retry.config/-retry-config-builder/max-attempts.html","searchKeys":["maxAttempts","var maxAttempts: Int","kresil.retry.config.RetryConfigBuilder.maxAttempts"]},{"name":"var maxWaitDurationInHalfOpenState: Duration","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.maxWaitDurationInHalfOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/max-wait-duration-in-half-open-state.html","searchKeys":["maxWaitDurationInHalfOpenState","var maxWaitDurationInHalfOpenState: Duration","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.maxWaitDurationInHalfOpenState"]},{"name":"var permittedNumberOfCallsInHalfOpenState: Int","description":"kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.permittedNumberOfCallsInHalfOpenState","location":"kresil-lib/lib/kresil.circuitbreaker.config/-circuit-breaker-config-builder/permitted-number-of-calls-in-half-open-state.html","searchKeys":["permittedNumberOfCallsInHalfOpenState","var permittedNumberOfCallsInHalfOpenState: Int","kresil.circuitbreaker.config.CircuitBreakerConfigBuilder.permittedNumberOfCallsInHalfOpenState"]},{"name":"var pix: Int","description":"kresil.core.utils.RingBuffer.pix","location":"kresil-lib/lib/kresil.core.utils/-ring-buffer/pix.html","searchKeys":["pix","var pix: Int","kresil.core.utils.RingBuffer.pix"]}]